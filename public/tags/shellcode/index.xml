<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shellcode on Parsia&#39;s Den</title>
    <link>http://parsiya.net/tags/shellcode/</link>
    <description>Recent content in Shellcode on Parsia&#39;s Den</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 May 2014 18:39:58 +0000</lastBuildDate>
    <atom:link href="http://parsiya.net/tags/shellcode/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Pasting Shellcode in GDB using Python</title>
      <link>http://parsiya.net/blog/2014-05-25-pasting-shellcode-in-gdb-using-python/</link>
      <pubDate>Sun, 25 May 2014 18:39:58 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2014-05-25-pasting-shellcode-in-gdb-using-python/</guid>
      <description>&lt;p&gt;A few days ago I was trying to write an exploit for a buffer overflow with GDB. This was a console application and pasting shellcode would mess with it.&lt;/p&gt;

&lt;p&gt;There are a few options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Writing shellcode to a file and then using it as input for GDB.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;# you can also include GDB commands like setting up breakpoints (e.g. b * 0xDEADBEEF)&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# remember to include a new line after each command&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;python&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;print &amp;quot;b * 0xDEADBEEF&amp;quot; + &amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot; + &amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x41&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;*1000 + &amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;input&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# $ perl -e for perl&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# start debugging with GDB&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# -q (quiet mode): no text at startup&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;gdb&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;executable1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;q&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(gdb)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;run&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;input&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After this you can manually debug in GDB.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Writing a Python script for interactive debugging
When I wrote this, I thought it was a clever idea but then someone told me I could have written a GDB script. However, I have already written this snippet so here it goes.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;#!/usr/bin/python&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;subprocess&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Popen&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;PIPE&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;sleep&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# shellcode&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;shellcode&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x41&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# opens gdb with parameter executable&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# you can also manage stdout and stderr here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;proc&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Popen(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;gdb&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;executable&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;bufsize&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,stdin&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;PIPE&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# sample breakpoint&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# notice the new line after each command&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;proc&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;stdin&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;write(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;b *DEADBEEF&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# half a second of sleep after each command&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;sleep(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# r or run to start debugging the program with GDB&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;proc&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;stdin&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;write(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;r&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;sleep(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# any other commands go here&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# this is a loop, will get every command and pass it to GDB&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# &amp;quot;leave&amp;quot; == quit GDB and terminate process&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# &amp;quot;dump&amp;quot;  == paste shellcode&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;mycommand&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;raw_input&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(mycommand&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;leave&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
        &lt;span style=&#34;color: #586E75&#34;&gt;# quit gdb&lt;/span&gt;
        &lt;span style=&#34;color: #93A1A1&#34;&gt;proc&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;stdin&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;write(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;quit&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color: #719e07&#34;&gt;break&lt;/span&gt;
    
    &lt;span style=&#34;color: #586E75&#34;&gt;# paste shellcode&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(mycommand&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;dump&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
        &lt;span style=&#34;color: #93A1A1&#34;&gt;proc&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;stdin&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;write(shellcode)&lt;/span&gt;
    &lt;span style=&#34;color: #586E75&#34;&gt;# more custom commands go here&lt;/span&gt;

    &lt;span style=&#34;color: #586E75&#34;&gt;# not a custom command? send it as-is&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #93A1A1&#34;&gt;mycommand&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;mycommand&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt; 
        &lt;span style=&#34;color: #93A1A1&#34;&gt;proc&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;stdin&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;write(mycommand)&lt;/span&gt;
        &lt;span style=&#34;color: #93A1A1&#34;&gt;sleep(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# close our pipe    &lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;proc&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;stdin&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;close()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I think that this code can be modified and become a very simple fuzzer. We have control over stdin and can read stdout and stderr. Change input, record output, rinse and repeat.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;subprocess&lt;/code&gt; is a very powerful module. For example to normally run an application with an argument we can write &lt;code&gt;subprocess.call([&#39;gdb&#39;,&#39;executable&#39;]) .&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;but let&amp;rsquo;s say we want to run executable with input (containing shellcode):&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;subprocess&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;shellcode&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x41&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;100&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;subprocess&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;call(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;gdb&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;executable&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;shellcode)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>