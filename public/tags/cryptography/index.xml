<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cryptography on Parsia&#39;s Den</title>
    <link>http://parsiya.net/tags/cryptography/</link>
    <description>Recent content in Cryptography on Parsia&#39;s Den</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Jan 2015 23:36:48 +0000</lastBuildDate>
    <atom:link href="http://parsiya.net/tags/cryptography/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Tales from the Crypt(o) - Leaking AES Keys</title>
      <link>http://parsiya.net/blog/2015-01-06-Tales-from-the-Crypto---Leaking-AES-Keys/</link>
      <pubDate>Tue, 06 Jan 2015 23:36:48 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2015-01-06-Tales-from-the-Crypto---Leaking-AES-Keys/</guid>
      <description>

&lt;p&gt;This post is part one of a two part internal blog entry on creating a Pintool for an assessment. Unfortunately I cannot talk about it, so I decided to put the first part out. If I find an opensource program similar to the assessment I will try and recreate the tool (but I am not holding my breath). As this part is essentially a build up, it may not be coherent at times. Alterntively, if you really want to read it, you can join us. We are almost always hiring (let me do the referal though ;).&lt;/p&gt;

&lt;p&gt;Today we are going to talk about discovering encryption keys in sneaky ways. We will start with simple examples, do a bit of Digital Forensics or DF (for low standards of DF) and finally in part two we will use our recently acquired knowledge of Pintool to do &lt;code&gt;[redacted]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First let’s talk a bit about the inner-workings of AES decryption. By inner-workings of AES I do not mean the following diagrams that you have seen so many times.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/tales1/CBC-Mode-Wikipedia.jpg&#34; title=&#34;These are not the diagrams you are looking for - Source: Wikipedia&#34; alt=&#34;These are not the diagrams you are looking for - Source: Wikipedia&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;These are not the diagrams you are looking for - Source: Wikipedia&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Instead I am going to talk about what happens inside those rectangles labeled “block cipher encryption/decryption.” If you don’t want to know about the AES stuff, jump directly to &lt;a href=&#34;#aeskeysinaction&#34;&gt;2. AES Keys in Action&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;1-thinking-inside-the-box:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;1. Thinking Inside the Box&lt;/h3&gt;

&lt;p&gt;Each of these boxes consist of a few rounds. The number of rounds is based on key size in AES. Keep in mind that AES is a subset of the &lt;em&gt;Rijndael&lt;/em&gt; family of ciphers (and I still do not know how to pronounce the name). NIST (National Institute of Standards and Technology) selected a fixed block size (16 bytes) and three different key sizes (128, 192 and 256 bits) and called it AES (Advanced Encryption Standard) because that’s what NIST does (other than allegedly embedding backdoors in &lt;a href=&#34;https://www.mail-archive.com/openssl-announce@openssl.org/msg00127.html&#34; target=&#34;_blank&#34;&gt;almost never used&lt;/a&gt; random number generators, see &lt;a href=&#34;http://blog.cryptographyengineering.com/2013/09/the-many-flaws-of-dualecdrbg.html&#34; target=&#34;_blank&#34;&gt;DUAL_EC_DRBG&lt;/a&gt; ;)). You do not need to memorize the formula that calculates the number of rounds based on key and block size. You can see the result of my painstaking calculations in the following table:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;|
| Key Size (bits)  | Number of Rounds (potatoes) |
|------------------|-----------------------------|
|       128        |             10              |
|       192        |             12              |
|       256        |             14              |
|
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That was easy. So what happens inside each of these rounds. Except the last round, there are four steps in each round (encryption/decryption). For the remainder of this section I am going to assume that we are using a 128-bit key (16 bytes) resulting in 10 rounds.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/tales1/AES-Rounds.jpg&#34; title=&#34;Inside AES - Source: http://www.iis.ee.ethz.ch/~kgf/acacia/fig/aes.png&#34; alt=&#34;Inside AES - Source: http://www.iis.ee.ethz.ch/~kgf/acacia/fig/aes.png&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;Inside AES - Source: http://www.iis.ee.ethz.ch/~kgf/acacia/fig/aes.png&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;There are four different operations but I am going to go into some detail about &lt;code&gt;AddRoundKey&lt;/code&gt;. It is also the only operation which introduces an unknown element (key) into the process. The other operations are also simple and we can probably guess what they do based on their names.&lt;/p&gt;

&lt;h4 id=&#34;1-1-addroundkey:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;1.1 AddRoundKey&lt;/h4&gt;

&lt;p&gt;It’s a simple XOR. A 16 byte round key is XOR-ed with the current block. If we count the number of AddRoundKey operations for Nr==10, we get 11. But we only have one 16 byte key and need 16*11 or 176 bytes. &lt;em&gt;“How am I going to create the extra 160 (176-16) bytes Senpai?”&lt;/em&gt; one may ask. This is done through some magic known as &lt;code&gt;key expansion&lt;/code&gt; which creates bytes out of thin air. It expands the original key into the 176 bytes also known as &lt;code&gt;key schedule&lt;/code&gt;.&lt;/p&gt;

&lt;h5 id=&#34;1-1-1-aes-key-schedule-aka-rijndael-key-schedule:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;1.1.1 AES Key Schedule (aka Rijndael Key Schedule)&lt;/h5&gt;

&lt;p&gt;The key expansion algorithm takes the original key and returns the key schedule. I could talk about the boring details of it but you are already bored and I am lazy. Search for Rijndael Key Schedule if you want to know more. Instead we are going to talk about some interesting stuff.&lt;/p&gt;

&lt;p&gt;Don’t make the convenient mistake of thinking of the key schedule as a Pseudo-Random Number Generator (PRNG) where we enter the original key as the seed and then reap bytes. In a good PRNG, we should not be able to discover the seed by observing the output. In the Rijndael/AES key schedule there is direct correlation between the original key and each round key.&lt;/p&gt;

&lt;p&gt;In AES-128, knowing a single round key (regardless of round number) is enough to generate the original key. In AES-256 we need to know two consecutive round keys and that is a good thing for AES-256. If not, the schedule had reduced the entropy of a 256-bit key to 128 bits. In a lot of hardware (a.k.a limited on-board memory), the first (actual encryption key) and last round keys (first two and last two round keys for AES-256) are stored for encryption/decryption and the rest are generated when needed from them.&lt;/p&gt;

&lt;p&gt;Also by looking at the key schedule, we can see that the original AES key is copied directly to the start of the key schedule. In other words, the first 128 bits (16 bytes) of the AES-128 key schedule are the same as the original key.&lt;/p&gt;

&lt;h5 id=&#34;1-1-2-round-key-usage:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;1.1.2 Round Key Usage&lt;/h5&gt;

&lt;p&gt;Great, so we have 16 bytes that are XOR-ed with something in each round. For decryption, we can create the key schedule and inverse it. This works because XOR is transitive (i.e. If ciphertext = plaintext XOR key then plaintext = ciphertext XOR key).&lt;/p&gt;

&lt;p&gt;Notice the first AddRoundKey block in both encryption and decryption. In encryption this is first 16 bytes of the original key (or the whole key in case of AES-128). In decryption, this is the last round key. Keep this in mind, we are going to use it later.&lt;/p&gt;

&lt;h3 id=&#34;2-a-name-aeskeysinaction-a-aes-keys-in-action:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2. &lt;a name=&#34;aeskeysinaction&#34;&gt;&lt;/a&gt; AES Keys in Action&lt;/h3&gt;

&lt;p&gt;By now we know how AES keys are used. Let’s do some stuff. We’re going to use the same set up as last time. A Kali 32-bit VM running in VirtualBox.&lt;/p&gt;

&lt;h4 id=&#34;2-1-function-calls:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.1 Function Calls&lt;/h4&gt;

&lt;p&gt;External function calls leak information. I am going to divide them into two parts &lt;code&gt;System Calls&lt;/code&gt; (syscalls) and &lt;code&gt;Library Calls&lt;/code&gt;. Basically these are functions that you can call and use in your program. If these functions part of the Operating System they are System Calls and if they are provided by a 3rd party library (shared library, DLL etc) they are Library Calls. For an excellent description of system calls, read the blog post by Gustavo Duartes named [System Calls Make the World Go Round]() (also read the rest of his blog).&lt;/p&gt;

&lt;h5 id=&#34;2-1-1-openssl-example:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.1.1 OpenSSL Example&lt;/h5&gt;

&lt;p&gt;Our example will be a simple Encryption/Decryption program in C using OpenSSL modified from [​&lt;a href=&#34;http://wiki.openssl.org/index.php/EVP_Symmetric_Encryption_and_Decryption&#34; target=&#34;_blank&#34;&gt;http://wiki.openssl.org/index.php/EVP_Symmetric_Encryption_and_Decryption&lt;/a&gt;. It will encrypt and decrypt the string “The quick brown fox jumps over the lazy dog” with AES using the 256 bit (32 byte) key &lt;code&gt;ee12c03ceacdfb5d4c0e67c8f5ab3362&lt;/code&gt; and IV &lt;code&gt;d36a4bf2e6dd9c68&lt;/code&gt; (128 bits or 16 bytes). My comments start with &lt;code&gt;///&lt;/code&gt;.&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;AES-OpenSSL.cpp&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;#include &amp;lt;openssl/conf.h&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;#include &amp;lt;openssl/evp.h&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;#include &amp;lt;openssl/err.h&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;/// Code from OpenSSL Wiki at http://wiki.openssl.org/index.php/EVP_Symmetric_Encryption_and_Decryption&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;/// Needs libssl-dev (e.g. sudo apt-get install libssl-dev )&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;/// Compile with gcc [filename].c -o [outputfile] -lcrypto -ggdb&lt;/span&gt;

&lt;span style=&#34;color: #DC322F&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;handleErrors&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;ERR_print_errors_fp(stderr);&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;abort();&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;encrypt&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext_len,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;iv,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ctx;&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len;&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Create and initialise the context */&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(ctx&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_new()))&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Initialise the encryption operation. IMPORTANT - ensure you use a key&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * and IV size appropriate for your cipher&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * In this example we are using 256 bit AES (i.e. a 256 bit key). The&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * IV size for *most* modes is the same as the block size. For AES this&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * is 128 bits */&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_EncryptInit_ex(ctx,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_aes_256_cbc(),&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;iv))&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Provide the message to be encrypted, and obtain the encrypted output.&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * EVP_EncryptUpdate can be called multiple times if necessary&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   */&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_EncryptUpdate(ctx,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;len,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext_len))&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Finalise the encryption. Further ciphertext bytes may be written at&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * this stage.&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   */&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_EncryptFinal_ex(ctx,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;len))&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Clean up */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_free(ctx);&lt;/span&gt;

  &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;decrypt&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;iv,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ctx;&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len;&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext_len;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Create and initialise the context */&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(ctx&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_new()))&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Initialise the decryption operation. IMPORTANT - ensure you use a key&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * and IV size appropriate for your cipher&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * In this example we are using 256 bit AES (i.e. a 256 bit key). The&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * IV size for *most* modes is the same as the block size. For AES this&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * is 128 bits */&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptInit_ex(ctx,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_aes_256_cbc(),&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;iv))&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;
  
  &lt;span style=&#34;color: #586E75&#34;&gt;/* Provide the message to be decrypted, and obtain the plaintext output.&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * EVP_DecryptUpdate can be called multiple times if necessary&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   */&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptUpdate(ctx,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;len,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len))&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext_len&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Finalise the decryption. Further plaintext bytes may be written at&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * this stage.&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   */&lt;/span&gt;
 
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptFinal_ex(ctx,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;len))&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext_len&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Clean up */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_free(ctx);&lt;/span&gt;

  &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext_len;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;arc,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;argv[])&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #586E75&#34;&gt;/* Set up the key and iv. Do I need to say to not hard code these in a&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * real application? :-)&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   */&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* A 256 bit key */&lt;/span&gt;
  &lt;span style=&#34;color: #586E75&#34;&gt;/// unsigned char *key = &amp;quot;01234567890123456789012345678901&amp;quot;;&lt;/span&gt;
  
  &lt;span style=&#34;color: #586E75&#34;&gt;/// this is still a 256-bit (32 byte) key, each character is treated as one byte&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;key&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;ee12c03ceacdfb5d4c0e67c8f5ab3362&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* A 128 bit IV */&lt;/span&gt;
  &lt;span style=&#34;color: #586E75&#34;&gt;/// unsigned char *iv = &amp;quot;01234567890123456&amp;quot;;&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;iv&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;d36a4bf2e6dd9c68&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Message to be encrypted */&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;
    &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;The quick brown fox jumps over the lazy dog&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Buffer for ciphertext. Ensure the buffer is long enough for the&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * ciphertext which may be longer than the plaintext, dependant on the&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * algorithm and mode&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   */&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;128&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;];&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Buffer for the decrypted text */&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;decryptedtext[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;128&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;];&lt;/span&gt;

  &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;decryptedtext_len,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Initialise the library */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;ERR_load_crypto_strings();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;OpenSSL_add_all_algorithms();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;OPENSSL_config(&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Encrypt the plaintext */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;encrypt(plaintext,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;strlen(plaintext),&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;iv,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext);&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Do something useful with the ciphertext here */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;printf(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Ciphertext is:&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;BIO_dump_fp(stdout,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len);&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Decrypt the ciphertext */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;decryptedtext_len&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;decrypt(ciphertext,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;iv,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;decryptedtext);&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Add a NULL terminator. We are expecting printable text */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;decryptedtext[decryptedtext_len]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;#39;&amp;#39;;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Show the decrypted text */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;printf(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Decrypted text is:&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;printf(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;%s&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;decryptedtext);&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Clean up */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_cleanup();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;ERR_free_strings();&lt;/span&gt;

  &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;we need the &lt;code&gt;libssl-dev&lt;/code&gt; library which can be installed by &lt;code&gt;sudo apt-get install libssl-dev&lt;/code&gt;. To compile use &lt;code&gt;gcc [filename].c -o [outputfile] -lcrypto -ggdb&lt;/code&gt;. We will use the debug information in GDB later. Here is the output:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;output&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$ &lt;/span&gt;gcc AES-OpenSSL.c -ggdb -lcrypto -o sampleaes
&lt;span style=&#34;color: #268BD2&#34;&gt;$ &lt;/span&gt;./sampleaes
Ciphertext is:
&lt;span style=&#34;color: #2AA198&#34;&gt;0000&lt;/span&gt; - &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;34&lt;/span&gt; 3f &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt; 5d 4e f6-18 1d c6 6d &lt;span style=&#34;color: #2AA198&#34;&gt;41&lt;/span&gt; c1 &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt; ae   Q4?!.&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;N....mA...
&lt;span style=&#34;color: #2AA198&#34;&gt;0010&lt;/span&gt; - e0 a7 de a0 fa b9 6c b0-91 5e &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; c6 d3 &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;96&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;36&lt;/span&gt;   ......l..^!....6
&lt;span style=&#34;color: #2AA198&#34;&gt;0020&lt;/span&gt; - &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt; 7b ec &lt;span style=&#34;color: #2AA198&#34;&gt;69&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;89&lt;/span&gt; e1 bc 0a-2c &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; f4 c6 &lt;span style=&#34;color: #2AA198&#34;&gt;26&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; 5f 2e   p&lt;span style=&#34;color: #719e07&#34;&gt;{&lt;/span&gt;.i....,a..&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;amp;&lt;/span&gt;a_.
Decrypted text is:
The quick brown fox jumps over the lazy dog
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;2-2-monitoring-library-calls:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.2 Monitoring Library Calls&lt;/h4&gt;

&lt;p&gt;To monitor these calls, we have a few tools at hand. On *nix operating systems we can use strace (for system calls) and ltrace (for both syscalls and library calls). On Windows we can use &lt;a href=&#34;http://www.rohitab.com/apimonitor&#34; target=&#34;_blank&#34;&gt;API Monitor&lt;/a&gt; as I have used in the &lt;a href=&#34;http://parsiya.net/blog/2014-10-07-my-adventure-with-fireeye-flare-challenge/#ch7&#34; target=&#34;_blank&#34;&gt;past&lt;/a&gt;. If you have a Mac you can try your luck with &lt;a href=&#34;https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/dtruss.1m.html&#34; target=&#34;_blank&#34;&gt;dtruss&lt;/a&gt; which uses dtrace. I am not quite sure if it can be used to trace library calls and if it works on iOS.&lt;/p&gt;

&lt;h5 id=&#34;2-2-1-discovering-shared-libraries:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.2.1 Discovering Shared Libraries&lt;/h5&gt;

&lt;p&gt;Assuming we are approaching this application from a black-box perspective, we need to discover the shared libraries first. This can be done in different ways. We will talk about &lt;code&gt;ldd&lt;/code&gt;, &lt;code&gt;nm&lt;/code&gt;, &lt;code&gt;strings&lt;/code&gt; or just &lt;code&gt;ltrace&lt;/code&gt;. Just using ltrace may do the job but if there are a lot of library calls, we need to spot critical/interesting libraries to filter out the noise.&lt;/p&gt;

&lt;h6 id=&#34;2-2-1-1-ldd:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.2.1.1 ldd&lt;/h6&gt;

&lt;p&gt;&lt;code&gt;ldd&lt;/code&gt; “prints shared library dependencies” according to the &lt;a href=&#34;http://man7.org/linux/man-pages/man1/ldd.1.html&#34; target=&#34;_blank&#34;&gt;man&lt;/a&gt; page. Let’s run it.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running ldd&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$ldd&lt;/span&gt; sampleaes
  linux-gate.so.1 &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&amp;gt;  &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0xb77b8000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
  libcrypto.so.1.0.0 &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&amp;gt; /usr/lib/i386-linux-gnu/i686/cmov/libcrypto.so.1.0.0 &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0xb75df000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
  libc.so.6 &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/i386-linux-gnu/i686/cmov/libc.so.6 &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0xb747b000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
  libdl.so.2 &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/i386-linux-gnu/i686/cmov/libdl.so.2 &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0xb7476000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
  libz.so.1 &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/i386-linux-gnu/libz.so.1 &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0xb745d000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
  /lib/ld-linux.so.2 &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0xb77b9000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;In line 3 we can see &lt;a href=&#34;http://wiki.openssl.org/index.php/Libcrypto_API&#34; target=&#34;_blank&#34;&gt;libcrypto&lt;/a&gt; which means the application is using OpenSSL (the other OpenSSL library is &lt;code&gt;libssl&lt;/code&gt;).&lt;/p&gt;

&lt;h6 id=&#34;2-2-1-2-nm:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.2.1.2 nm&lt;/h6&gt;

&lt;p&gt;&lt;code&gt;nm&lt;/code&gt; “&lt;a href=&#34;http://unixhelp.ed.ac.uk/CGI/man-cgi?nm&#34; target=&#34;_blank&#34;&gt;lists symbols from object files.&lt;/a&gt;” It’s a good idea to look at its output and look for familiar symbols. We can clearly see OPENSSL and function names in the truncated output.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running nm&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$ &lt;/span&gt;nm sampleaes
         U BIO_dump_fp@@OPENSSL_1.0.0
         U ERR_free_strings@@OPENSSL_1.0.0
         U ERR_load_crypto_strings@@OPENSSL_1.0.0
         U ERR_print_errors_fp@@OPENSSL_1.0.0
         U EVP_CIPHER_CTX_free@@OPENSSL_1.0.0
         U EVP_CIPHER_CTX_new@@OPENSSL_1.0.0
         U EVP_DecryptFinal_ex@@OPENSSL_1.0.0
         U EVP_DecryptInit_ex@@OPENSSL_1.0.0
         U EVP_DecryptUpdate@@OPENSSL_1.0.0
         U EVP_EncryptFinal_ex@@OPENSSL_1.0.0
         U EVP_EncryptInit_ex@@OPENSSL_1.0.0
         U EVP_EncryptUpdate@@OPENSSL_1.0.0
         U EVP_aes_256_cbc@@OPENSSL_1.0.0
         U EVP_cleanup@@OPENSSL_1.0.0
         U OPENSSL_add_all_algorithms_noconf@@OPENSSL_1.0.0
         U OPENSSL_config@@OPENSSL_1.0.0
0804900c d _DYNAMIC
&lt;span style=&#34;color: #2AA198&#34;&gt;08049108&lt;/span&gt; d _GLOBAL_OFFSET_TABLE_
08048d4c R _IO_stdin_used
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
         w _Jv_RegisterClasses
...
&lt;span style=&#34;color: #586E75&#34;&gt;# removed the rest of the output&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h6 id=&#34;2-2-1-3-strings:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.2.1.3 strings&lt;/h6&gt;

&lt;p&gt;&lt;code&gt;strings&lt;/code&gt; is useful because it may leak great information about the binary. It will give us the key and IV directly in our example. We can also see OpenSSL and libcrypto strings. It also gives us the version of the used OpenSSL library.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running strings&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;strings&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;sampleaes&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ld&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;linux.so&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;.2&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;libcrypto.so&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;.1.0.0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;_ITM_deregisterTMCloneTable&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;__gmon_start__&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;_Jv_RegisterClasses&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;_ITM_registerTMCloneTable&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_aes_256_cbc&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ERR_free_strings&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;OPENSSL_config&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_cleanup&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ERR_load_crypto_strings&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;OPENSSL_add_all_algorithms_noconf&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_free&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptFinal_ex&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ERR_print_errors_fp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_EncryptFinal_ex&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_new&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptUpdate&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_EncryptInit_ex&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;BIO_dump_fp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_EncryptUpdate&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;libc.so&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;.6&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;_IO_stdin_used&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;puts&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;abort&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;strlen&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;stdout&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;stderr&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;__libc_start_main&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;OPENSSL_1&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;.0.0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;GLIBC_2&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;.0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;PTRh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;_]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ee12c03ceacdfb5d4c0e67c8f5ab3362&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;d36a4bf2e6dd9c68&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;The&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;quick&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;brown&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;fox&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;jumps&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;over&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;lazy&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;dog&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Ciphertext&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;is:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Decrypted&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;is:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;2-3-using-ltrace-to-find-the-key:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.3  Using ltrace to Find the Key&lt;/h4&gt;

&lt;p&gt;Finally let’s run ltrace on the binary. The &lt;code&gt;i&lt;/code&gt; switch prints the value of instruction pointer at the time of library call (we will need it later). You can also trace syscalls using the &lt;code&gt;S&lt;/code&gt; (capital S) switch.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running ltrace&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ltrace&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sampleaes&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048921&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;__libc_start_main&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8048b8c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff88534&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048cd0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048cc0&lt;/span&gt; 
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048bbe&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ERR_load_crypto_strings&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xb776dda6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7439a30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048629&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb74266d0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x80485d0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048bc3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;OPENSSL_add_all_algorithms_noconf&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xb776dda6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7439a30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048629&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb74266d0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x80485d0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048bcf&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;OPENSSL_config&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7439a30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048629&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb74266d0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x80485d0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048bde&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;strlen&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;The quick brown fox jumps over t&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;                      &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048a0f&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_CIPHER_CTX_new&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048434&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8049140&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb742e0b4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;         &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048a22&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_aes_256_cbc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048434&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8049140&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb742e0b4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;            &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7735040&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048a47&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_EncryptInit_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7735040&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048a78&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_EncryptUpdate&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff88324&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d84&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048aa8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_EncryptFinal_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8840c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff88324&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d84&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048ac3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_CIPHER_CTX_free&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8840c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff88324&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d84&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048c25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;puts&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Ciphertext is:&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Ciphertext&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;is&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;                                             &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;15&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048c48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;BIO_dump_fp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xb75874e0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec0000&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;34&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;f6&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;41&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c1&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ae&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;Q4?&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;N....mA...&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0010&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;e0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;a7&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;de&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;a0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;fa&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b9&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;d3&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;96&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;36&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;......l..&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;....6&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0020&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;70&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ec&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;69&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;89&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;e1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;bc&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;f4&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;26&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.i....&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a..&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a_.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048ad3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_CIPHER_CTX_new&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb77789c0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb764bda0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb764b910&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048ae6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_aes_256_cbc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb77789c0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb764bda0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb764b910&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7735040&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048b0b&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7735040&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048b3c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptUpdate&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8836c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff88324&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048b6c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptFinal_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8838c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff88324&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048b87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_CIPHER_CTX_free&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8838c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff88324&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048ca3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;puts&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Decrypted text is:&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Decrypted&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;is&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;                                         &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;19&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048caf&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;puts&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;The quick brown fox jumps over t&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...The&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;quick&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;brown&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;fox&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jumps&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;over&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lazy&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;dog&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;                        &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;44&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048cb4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_cleanup&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8836c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8836c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;      &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048cb9&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ERR_free_strings&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8836c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8836c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xffffffff&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+++&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;exited&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;status&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+++&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;In a non-ideal situation, we have to either recognize the good functions from past experience or search them all. Here we are looking for a function with key and IV as parameters. According to the &lt;a href=&#34;https://www.openssl.org/docs/crypto/EVP_EncryptInit.html&#34; target=&#34;_blank&#34;&gt;documentation&lt;/a&gt; &lt;code&gt;EVP_DecryptInit_ex&lt;/code&gt; is what we are looking for:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;int EVP_DecryptInit_ex(EVP_CIPHER_CTX *ctx, const EVP_CIPHER *type, ENGINE *impl, unsigned char *key, unsigned char *iv);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But what are these values:&lt;br /&gt;
&lt;code&gt;[0x8048b0b] EVP_DecryptInit_ex(0x90bdce0, 0xb7735040, 0, 0x8048d50, 0x8048d71) = 1&lt;/code&gt;
These are pointers and are 4 bytes each (remember we are in a 32-bit OS). “*But where are these pointers pointing to? Do I have to use GDB?*” Yes, we had to use GDB before I knew that we can configure ltrace to dereference pointers. But we will use GDB too.&lt;/p&gt;

&lt;h5 id=&#34;2-3-1-configuring-ltrace:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.3.1 Configuring ltrace&lt;/h5&gt;

&lt;p&gt;If we know the type of pointers, we can dereference them by modifying &lt;a href=&#34;http://man7.org/linux/man-pages/man5/ltrace.conf.5.html&#34; target=&#34;_blank&#34;&gt;~/.ltrace.conf&lt;/a&gt;. We can also do more elaborate stuff like defining structs as explained &lt;a href=&#34;https://github.com/zenovich/ltrace/blob/master/etc/ltrace.conf&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. In short we can add lines to ltrace.conf for certain functions. In our case we know the 4th and 5th arguments for EVP_DecryptInit_ex are strings (char*). We do not care about the first three arguments so can ignore them by defining them as &lt;code&gt;addr&lt;/code&gt; (for address). Let’s add the following line to ltrace.conf:&lt;br /&gt;
&lt;code&gt;int EVP_DecryptInit_ex(addr, addr, addr, string, string)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;run ltrace again and annnnnnnd voila (look at lines 4 for key and IV):



    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running ltrace after configuration&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;# most of the output has been removed&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_new(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb77cc9c0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecdec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb769fda0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb769f910&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x9ff5ce0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_aes_256_cbc(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb77cc9c0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecdec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb769fda0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb769f910&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7789040&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptInit_ex(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x09ff5ce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7789040&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;ee12c03ceacdfb5d4c0e67c8f5ab3362&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;d36a4bf2e6dd9c68&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptUpdate(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x9ff5ce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecd6c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecd24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecdec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptFinal_ex(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x9ff5ce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecd8c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecd24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecdec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_free(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x9ff5ce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecd8c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecd24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecdec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/tales1/Queen-Amused.jpg&#34; title=&#34;Her Majesty is amused – If you are offended please don’t send James Bond after me&#34; alt=&#34;Her Majesty is amused – If you are offended please don’t send James Bond after me&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;Her Majesty is amused – If you are offended please don’t send James Bond after me&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-4-finding-the-key-using-gdb-ii-electric-boogaloo:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.4  Finding the Key (Using GDB) II: Electric Boogaloo&lt;/h4&gt;

&lt;p&gt;That was too easy but we pleased a powerful friend. Let’s try and find it using GDB (gasp). Good thing that we compiled out binary using the ggdb switch. If not go ahead and do that. We know we are looking for &lt;code&gt;EVP_DecryptInit_ex&lt;/code&gt; and we have already seen how to use GDB. We will &lt;code&gt;set verbose on&lt;/code&gt; (in case stuff happens).&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running in GDB with debug info 1&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sampleaes&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;q&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Desktop&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;kek&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sampleaes...done.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;verbose&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;on&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;break&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; setting up the breakpoint&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Breakpoint&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048830&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;run&lt;/span&gt;                       &lt;span style=&#34;color: #586E75&#34;&gt;; running the program&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Starting&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;program&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Desktop&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;kek&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sampleaes&lt;/span&gt; 
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ld&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux.so.2...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;found&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...done.&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Loaded&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ld&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux.so.2&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;system&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;supplied&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;DS&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;O&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7fe1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;found&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...done.&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;usr&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libcrypto.so.1.0.0...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;found&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...done.&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Loaded&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;usr&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libcrypto.so.1.0.0&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libc.so.6...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;found&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...done.&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Loaded&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libc.so.6&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libdl.so.2...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;found&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...done.&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Loaded&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libdl.so.2&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libz.so.1...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;found&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...done.&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Loaded&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libz.so.1&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Ciphertext&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;is&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;34&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;f6&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;41&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c1&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ae&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;Q4?&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;N....mA...&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0010&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;e0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;a7&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;de&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;a0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;fa&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b9&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;d3&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;96&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;36&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;......l..&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;....6&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0020&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;70&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ec&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;69&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;89&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;e1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;bc&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;f4&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;26&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.i....&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a..&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a_.&lt;/span&gt;

&lt;span style=&#34;color: #268BD2&#34;&gt;Breakpoint&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;AES&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;OpenSSL.c...done.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a20&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;usr&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libcrypto.so.1.0.0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;di&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sass&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;; disassembling the function&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Dump&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;assembler&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;code&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a20&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a21&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;sub&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x28&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a24&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a28&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7e510db&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a2d&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xe65c7&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a33&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x14&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x0&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a3b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a3f&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x3c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a43&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;35&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a47&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a4b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a4f&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x34&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a53&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a57&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a5b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a5e&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;62&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7e50660&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EVP_CipherInit_ex@plt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a63&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x28&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a66&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;pop&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a67&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;ret&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;End&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;assembler&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;dump.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We can see &lt;code&gt;EVP_CipherInit_ex&lt;/code&gt; called at &lt;code&gt;0xb7ed3a5e&lt;/code&gt;. Let’s put a breakpoint there (right before function call) and look at its arguments.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running in gdb with debug info 2&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xb7ed3a5e&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Breakpoint&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7ed3a5e&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Continuing.&lt;/span&gt;

&lt;span style=&#34;color: #268BD2&#34;&gt;Breakpoint&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7ed3a5e&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;usr&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libcrypto.so.1.0.0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;di&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sass&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Dump&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;assembler&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;code&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a20&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a21&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;sub&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x28&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a24&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a28&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7e510db&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a2d&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xe65c7&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a33&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x14&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x0&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a3b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a3f&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x3c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a43&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;35&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a47&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a4b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a4f&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x34&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a53&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a57&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a5b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a5e&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;62&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7e50660&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EVP_CipherInit_ex@plt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a63&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x28&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a66&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;pop&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a67&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;ret&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;End&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;assembler&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;dump.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We can see the arguments loaded from memory to eax and then pushed to the stack (esp is the stack pointer and points to the top of the stack at all times). We are in a Linux 32-bit OS so arguments (or parameters whatever) are pushed to the stack from &lt;a href=&#34;http://duartes.org/gustavo/blog/post/journey-to-the-stack/&#34; target=&#34;_blank&#34;&gt;right to left&lt;/a&gt; (almost the same in 32-bit Windows systems). Here is what it looks like right before the call instruction:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;EVP_DecryptInit_ex arguments&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ctx,&lt;/span&gt;    &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp]&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;type,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ENGINE&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;impl,&lt;/span&gt;           &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt;     &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;iv&lt;/span&gt;       &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We can print the values of both key and IV. To do this in GDB we need to use this command &lt;code&gt;x/s *((char **) ( $esp+0x10 ))&lt;/code&gt;. The s switch tells GDB to print the result as a string. &lt;code&gt;$esp+0x10&lt;/code&gt; is a pointer that points to a location on the stack. In that location we have a &lt;code&gt;char *&lt;/code&gt; which is another pointer to a string, so we need to dereference it twice (hence the &lt;code&gt;char **&lt;/code&gt;). And finally to print it using the &lt;code&gt;s&lt;/code&gt; switch we need to make it a string (e.g. &lt;code&gt;char *&lt;/code&gt;) so we will use the first *. And it works.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;finding key and IV in gdb with debug info&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(gdb)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;$esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d71&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt;	 &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;d36a4bf2e6dd9c68&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(gdb)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;$esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d50&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt;	 &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;ee12c03ceacdfb5d4c0e67c8f5ab3362&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/tales1/Queen-Not-Amused.jpg&#34; title=&#34;Her Majesty is bored because of GDB&#34; alt=&#34;Her Majesty is bored because of GDB&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;Her Majesty is bored because of GDB&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-5-using-gdb-without-debug-info:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.5 Using GDB without Debug Info&lt;/h4&gt;

&lt;p&gt;Our example is in a controlled environment, so we were able to build the binary with debug info. But in a real world scenario we do not have this luxury. In this section I will discuss how to get to  &lt;code&gt;EVP_DecryptInit_ex&lt;/code&gt; without debug info.&lt;/p&gt;

&lt;p&gt;First we have to build our binary without  debug info, just remove the &lt;code&gt;-ggdb&lt;/code&gt; switch to get &lt;code&gt;gcc -o sampleaes-nodebug AES-OpenSSL.c -lcrypto&lt;/code&gt;. Now how do we find the location of &lt;code&gt;EVP_DecryptInit_ex&lt;/code&gt; call?&lt;/p&gt;

&lt;p&gt;Remember the following line in the original ltrace output.
&lt;code&gt;[0x8048b0b] EVP_DecryptInit_ex(0x90bdce0, 0xb7735040, 0, 0x8048d50, 0x8048d71) = 1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We used the &lt;code&gt;i&lt;/code&gt; switch to print the value of instruction pointer after the call. This is our entry point. We will debug the binary in GDB and set up a breakpoint at &lt;code&gt;0x8048b0b&lt;/code&gt; and see what happens.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running in gdb without debug info 1&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sampleaes&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;nodebug&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;q&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Desktop&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;kek&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sampleaes&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;nodebug...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;found&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...done.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8048b0b&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Breakpoint&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048b0b&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;run&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Starting&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;program&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Desktop&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;kek&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sampleaes&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;nodebug&lt;/span&gt; 
&lt;span style=&#34;color: #268BD2&#34;&gt;Ciphertext&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;is&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;34&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;f6&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;41&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c1&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ae&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;Q4?&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;N....mA...&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0010&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;e0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;a7&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;de&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;a0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;fa&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b9&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;d3&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;96&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;36&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;......l..&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;....6&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0020&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;70&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ec&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;69&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;89&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;e1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;bc&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;f4&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;26&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.i....&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a..&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a_.&lt;/span&gt;

&lt;span style=&#34;color: #268BD2&#34;&gt;Breakpoint&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x08048b0b&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;decrypt&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;di&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sass&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Dump&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;assembler&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;code&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;decrypt&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ac8&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ac9&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048acb&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;sub&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x38&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ace&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0x80487e0&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EVP_CIPHER_CTX_new@plt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ad3&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ad6&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x0&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ada&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;jne&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048ae1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;decrypt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048adc&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0x80489ec&lt;/span&gt; 
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ae1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0x80488a0&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EVP_aes_256_cbc@plt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ae6&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x14&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ae9&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;33&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048aed&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048af0&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048af4&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x0&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048afc&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b00&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;56&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b03&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b06&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;62&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048830&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex@plt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b0b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x1&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b0e&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;je&lt;/span&gt;     &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048b15&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;decrypt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b10&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0x80489ec&lt;/span&gt; 
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b15&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b18&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b1c&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;84&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b1f&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b23&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x14&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b26&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;94&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Again we see the arguments pushed to the stack.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;EVP_DecryptInit_ex arguments&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ctx,&lt;/span&gt;    &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp]&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;type,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ENGINE&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;impl,&lt;/span&gt;           &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt;     &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;iv&lt;/span&gt;       &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We put a breakpoint at &lt;code&gt;0x08048b06&lt;/code&gt; and re-run the binary. Then we can read key and IV like before:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;finding key and IV in gdb without debug info&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(gdb)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;$esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d71&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt;	 &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;d36a4bf2e6dd9c68&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(gdb)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;$esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d50&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt;	 &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;ee12c03ceacdfb5d4c0e67c8f5ab3362&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;However, notice the difference in the function name. It is not just called &lt;code&gt;(0xb7ed3a21) EVP_DecryptInit_ex&lt;/code&gt; but &lt;code&gt;(0x08048b06) EVP_DecryptInit_ex@plt&lt;/code&gt;. Addresses are different. Here’s a tip which is not scientific or anything but works for me. If you see an address starting with 0×08 you are in process-land and addresses starting with 0xb are in shared library land. But what is this @plt?
In short, it’s the &lt;code&gt;Procedure Linkage Table&lt;/code&gt;. The compiler does not know where &lt;code&gt;EVP_DecryptInit_ex&lt;/code&gt; points to at runtime so it just puts the function call there (relocation) because it does not know the address of our shared library at runtime. Linker will get this function call and replace it with the correct address for the function (actually this is a lot more complex but PLT and Global Offset Table or GOT need their own article). You can read about GOT/PLT in The &lt;a href=&#34;http://www.linuxjournal.com/article/1060&#34; target=&#34;_blank&#34;&gt;ELF Object File Format by Dissection on Linux Journal&lt;/a&gt; (search for “plt” and read 3 paragraphs including the one with lazy binding).&lt;/p&gt;

&lt;h4 id=&#34;2-6-ios-and-android:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.6 iOS and Android&lt;/h4&gt;

&lt;p&gt;I am not going to go into detail about how we can monitor crypto function calls in iOS and Android as we already have two excellent tools that accomplish this. &lt;code&gt;[redacted internal tool]&lt;/code&gt; is for iOS and &lt;code&gt;[[redacted internal tool]]&lt;/code&gt; is for Android. You can make them hook into crypto function calls and find keys. This is left as an exercise to the reader (meaning I am too lazy). There are also two excellent tutorials by two of my co-workers on how to create custom hooks in iOS and Android &lt;a href=&#34;https://hexplo.it/substrate-hooking-native-code-iosandroid/&#34; target=&#34;_blank&#34;&gt;Substrate - hooking C on Android and iOS part1/2&lt;/a&gt; and &lt;a href=&#34;https://hexplo.it/substrate-android/&#34; target=&#34;_blank&#34;&gt;Substrate - hooking C on Android and iOS part 2/2&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;2-7-defence:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.7 Defence?&lt;/h4&gt;

&lt;p&gt;We saw that function calls (library calls) leak information. One defense against this side-channel is to link the binaries statically. This will replicate the library code inside the binary and will hopefully make the binary independent of any shared libraries (better for installation). On the other hand, it will increase code size (and thus binary size).&lt;/p&gt;

&lt;h3 id=&#34;3-0-looking-for-key-in-memory:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;3.0 Looking for Key in Memory&lt;/h3&gt;

&lt;p&gt;But there are ways to defeat that too. This is our small incursion into the lands of Digital Forensics. The keys are going to be on memory. So that’s where we are going to look for them. But how do we find keys in memory. One step is to look for data with high entropy because keys usually look random. But there are many 128-bit (or 256) parts of memory that look random so what do we do?&lt;/p&gt;

&lt;p&gt;Remember the &lt;code&gt;Key Schedule&lt;/code&gt;? It’s the original key, followed by a number of round keys. If we see a 176 byte structure on memory that looks random, that’s probably a key schedule. After finding memories with these characteristics, we can use the relation between the round keys and the original encryption key to determine if the structure is a key schedule.&lt;/p&gt;

&lt;p&gt;There are tools that do this for us and they were mostly created for use in Cold Boot Attacks and digital forensics. Imagine if you have a computer running disk encryption software. These keys may be stored in memory in plaintext. Open it up while running until you have access to the RAM. Get a can of air spray, turn it upside down and spray the RAM with it. It will freeze. Frozen RAM degrade much slower so we will have more time to read it. Read it and then run tools on it to find keys. Because memory may have been degraded, these tools use the relationship between round keys and original key to recover degraded bits. For more information you can read this paper &lt;a href=&#34;https://citp.princeton.edu/research/memory/&#34; target=&#34;_blank&#34;&gt;Lest We Remember: Cold Boot Attacks on Encryption Keys&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;3-1-dumping-memory:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;3.1 Dumping Memory&lt;/h4&gt;

&lt;p&gt;First we need to dump process memory. I know of a couple of different tools. One is &lt;a href=&#34;http://lcamtuf.coredump.cx/soft/memfetch.tgz&#34; target=&#34;_blank&#34;&gt;memfetch&lt;/a&gt; by &lt;code&gt;lcamtuf&lt;/code&gt; (creator of &lt;a href=&#34;http://lcamtuf.coredump.cx/afl/&#34; target=&#34;_blank&#34;&gt;American fuzzy lop fuzzer&lt;/a&gt;). In order to build it in Kali you need some &lt;a href=&#34;http://parsiya.net/blog/2014-11-18-building-memfetch-on-kali/&#34; target=&#34;_blank&#34;&gt;modifications&lt;/a&gt;. Another is &lt;a href=&#34;https://code.google.com/p/shortstop/&#34; target=&#34;_blank&#34;&gt;shortstop&lt;/a&gt; but has not been update for a long time. By using a &lt;code&gt;Loadable Kernel Module (LKM)&lt;/code&gt; named &lt;a href=&#34;https://github.com/504ensicsLabs/LiME&#34; target=&#34;_blank&#34;&gt;LiME&lt;/a&gt; we can make a memory snapshot of the entire machine. And last but not least &lt;a href=&#34;https://github.com/volatilityfoundation/volatility&#34; target=&#34;_blank&#34;&gt;Volatility&lt;/a&gt; (a memory forensics framework). If you are interested the creators of Volatility recently released a book &lt;a href=&#34;http://www.amazon.com/The-Art-Memory-Forensics-Detecting/dp/1118825098&#34; target=&#34;_blank&#34;&gt;The Art of Memory Forensics&lt;/a&gt;. I have not had time to read it but it looks very useful.&lt;/p&gt;

&lt;p&gt;Let’s use LiME in our VM.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;building and using LiME&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;/LiME/src&lt;span style=&#34;color: #268BD2&#34;&gt;$ &lt;/span&gt;make
make -C /lib/modules/3.7-trunk-686-pae/build &lt;span style=&#34;color: #268BD2&#34;&gt;M&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;/root/LiME/src modules
make&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;: Entering directory &lt;span style=&#34;color: #586E75&#34;&gt;`&lt;/span&gt;/usr/src/linux-headers-3.7-trunk-686-pae&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  CC [M]  /root/LiME/src/tcp.o&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  CC [M]  /root/LiME/src/disk.o&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  CC [M]  /root/LiME/src/main.o&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  LD [M]  /root/LiME/src/lime.o&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  Building modules, stage 2.&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  MODPOST 1 modules&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  CC      /root/LiME/src/lime.mod.o&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  LD [M]  /root/LiME/src/lime.ko&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;make[1]: Leaving directory `/usr/src/linux-headers-3.7-trunk-686-pae&amp;#39;&lt;/span&gt;
strip --strip-unneeded lime.ko
mv lime.ko lime-3.7-trunk-686-pae.ko
/LiME/src&lt;span style=&#34;color: #268BD2&#34;&gt;$ &lt;/span&gt;insmod lime-3.7-trunk-686-pae.ko &lt;span style=&#34;color: #268BD2&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;memorydump.raw &lt;span style=&#34;color: #268BD2&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;raw
/LiME/src&lt;span style=&#34;color: #93A1A1&#34;&gt;$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;This dumps Virtual Machine’s memory to &lt;code&gt;memorydump.raw&lt;/code&gt;. Now we need to find keys.&lt;/p&gt;

&lt;h4 id=&#34;3-2-finding-keys:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;3.2 Finding Keys&lt;/h4&gt;

&lt;p&gt;There are different tools that we can use here again. One is from the “Lest We Remember” paper called &lt;code&gt;aeskeyfind&lt;/code&gt;. Another is &lt;a href=&#34;http://www.forensicswiki.org/wiki/Bulk_extractor&#34; target=&#34;_blank&#34;&gt;Bulk extractor&lt;/a&gt; which finds other memory artifacts such as URLs, emails and Credit Card numbers. We will use &lt;code&gt;aeskeyfind&lt;/code&gt;. The &lt;code&gt;v&lt;/code&gt; switch is for verbose mode that prints the key schedule among other information. This is really not recommended in memory forensics because we are running the dump program inside the VM memory and it will alter memory but it is enough for our purposes. Another thing to note is that I was not running our example program while making the memory snapshot but I found encryption keys.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;keys inside VM memory dump&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;./aeskeyfind -v memorydump.raw 
FOUND POSSIBLE 128-BIT KEY AT BYTE 376ecc30 

KEY: 10b57f8070a27e482fd3713da5303108

EXTENDED KEY: 
10b57f8070a27e482fd3713da5303108
15724f8665d031ce4a0340f3ef3371fb
d4d14059b1017197fb0231641431409f
17d89ba3a6d9ea345ddbdb5049ea9bcf
98cc11983e15fbac63ce20fc2a24bb33
be26d27d803329d1e3fd092dc9d9b21e
ab11a0a02b228971c8df805c01063242
84328cdcaf1005ad67cf85f166c9b7b3
d99be1ef768be442114461b3778dd600
9f6d821ae9e66658f8a207eb8f2fd1eb
bc536b6955b50d31ad170ada2238db31

CONSTRAINTS ON ROWS:
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
Keyfind progress: 100%
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;The 0 constraints mean that no keys were degraded (because we took an on a VM). &lt;strong&gt;I do not know what the encryption key is, it&amp;rsquo;s just in memory of VM&lt;/strong&gt;. If you find out please let me know. In order to find the key for our OpenSSL program this way, we need to stop execution when the key schedule is on memory. This is left as an exercise to the reader (lol).&lt;/p&gt;

&lt;p&gt;This concludes our part one. I initially wanted to write everything in one blog post but it this was already too long. Hopefully I can find a 3rd party app to demonstrate my technique in part 2. As usual if you have any feedback/questions, you know where to find me (side bar &amp;mdash;&amp;gt;).&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>